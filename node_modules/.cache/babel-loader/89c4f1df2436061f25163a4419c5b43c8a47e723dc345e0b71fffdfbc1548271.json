{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function () {\n    return RenderResult;\n  }\n});\nconst _nodewebstreamshelper = require(\"./stream-utils/node-web-streams-helper\");\nconst _pipereadable = require(\"./pipe-readable\");\nclass RenderResult {\n  /**\n  * Creates a new RenderResult instance from a static response.\n  *\n  * @param value the static response value\n  * @returns a new RenderResult instance\n  */\n  static fromStatic(value) {\n    return new RenderResult(value);\n  }\n  constructor(response, {\n    contentType,\n    waitUntil,\n    ...metadata\n  } = {}) {\n    this.response = response;\n    this.contentType = contentType;\n    this.metadata = metadata;\n    this.waitUntil = waitUntil;\n  }\n  extendMetadata(metadata) {\n    Object.assign(this.metadata, metadata);\n  }\n  /**\n  * Returns true if the response is null. It can be null if the response was\n  * not found or was already sent.\n  */\n  get isNull() {\n    return this.response === null;\n  }\n  /**\n  * Returns false if the response is a string. It can be a string if the page\n  * was prerendered. If it's not, then it was generated dynamically.\n  */\n  get isDynamic() {\n    return typeof this.response !== \"string\";\n  }\n  toUnchunkedString(stream = false) {\n    if (this.response === null) {\n      throw new Error(\"Invariant: null responses cannot be unchunked\");\n    }\n    if (typeof this.response !== \"string\") {\n      if (!stream) {\n        throw new Error(\"Invariant: dynamic responses cannot be unchunked. This is a bug in Next.js\");\n      }\n      return (0, _nodewebstreamshelper.streamToString)(this.readable);\n    }\n    return this.response;\n  }\n  /**\n  * Returns the response if it is a stream, or throws an error if it is a\n  * string.\n  */\n  get readable() {\n    if (this.response === null) {\n      throw new Error(\"Invariant: null responses cannot be streamed\");\n    }\n    if (typeof this.response === \"string\") {\n      throw new Error(\"Invariant: static responses cannot be streamed\");\n    }\n    // If the response is an array of streams, then chain them together.\n    if (Array.isArray(this.response)) {\n      return (0, _nodewebstreamshelper.chainStreams)(...this.response);\n    }\n    return this.response;\n  }\n  /**\n  * Chains a new stream to the response. This will convert the response to an\n  * array of streams if it is not already one and will add the new stream to\n  * the end. When this response is piped, all of the streams will be piped\n  * one after the other.\n  *\n  * @param readable The new stream to chain\n  */\n  chain(readable) {\n    if (this.response === null) {\n      throw new Error(\"Invariant: response is null. This is a bug in Next.js\");\n    }\n    // If the response is not an array of streams already, make it one.\n    let responses;\n    if (typeof this.response === \"string\") {\n      responses = [(0, _nodewebstreamshelper.streamFromString)(this.response)];\n    } else if (Array.isArray(this.response)) {\n      responses = this.response;\n    } else {\n      responses = [this.response];\n    }\n    // Add the new stream to the array.\n    responses.push(readable);\n    // Update the response.\n    this.response = responses;\n  }\n  /**\n  * Pipes the response to a writable stream. This will close/cancel the\n  * writable stream if an error is encountered.\n  *\n  * @param writable Writable stream to pipe the response to\n  */\n  async pipeTo(writable) {\n    try {\n      await this.readable.pipeTo(writable);\n    } catch (err) {\n      // If this isn't a client abort, then re-throw the error.\n      if (!(0, _pipereadable.isAbortError)(err)) {\n        throw err;\n      }\n    } finally {\n      if (this.waitUntil) {\n        await this.waitUntil;\n      }\n    }\n  }\n  /**\n  * Pipes the response to a node response. This will close/cancel the node\n  * response if an error is encountered.\n  *\n  * @param res\n  */\n  async pipeToNodeResponse(res) {\n    try {\n      await (0, _pipereadable.pipeToNodeResponse)(this.readable, res);\n    } finally {\n      if (this.waitUntil) {\n        await this.waitUntil;\n      }\n    }\n  }\n}","map":{"version":3,"names":["RenderResult","fromStatic","value","constructor","response","contentType","waitUntil","metadata","extendMetadata","Object","assign","isNull","isDynamic","toUnchunkedString","stream","Error","_nodewebstreamshelper","streamToString","readable","Array","isArray","chainStreams","chain","responses","streamFromString","push","pipeTo","writable","err","_pipereadable","isAbortError","pipeToNodeResponse","res"],"sources":["../../src/server/render-result.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}