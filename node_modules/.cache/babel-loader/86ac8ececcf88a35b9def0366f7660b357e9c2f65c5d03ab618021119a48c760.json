{"ast":null,"code":"// this must come first as it includes require hooks\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"initialize\", {\n  enumerable: true,\n  get: function () {\n    return initialize;\n  }\n});\nrequire(\"../node-environment\");\nrequire(\"../require-hook\");\nconst _url = /*#__PURE__*/_interop_require_default(require(\"url\"));\nconst _path = /*#__PURE__*/_interop_require_default(require(\"path\"));\nconst _config = /*#__PURE__*/_interop_require_default(require(\"../config\"));\nconst _servestatic = require(\"../serve-static\");\nconst _debug = /*#__PURE__*/_interop_require_default(require(\"next/dist/compiled/debug\"));\nconst _storage = require(\"../../telemetry/storage\");\nconst _utils = require(\"../../shared/lib/utils\");\nconst _findpagesdir = require(\"../../lib/find-pages-dir\");\nconst _filesystem = require(\"./router-utils/filesystem\");\nconst _proxyrequest = require(\"./router-utils/proxy-request\");\nconst _pipereadable = require(\"../pipe-readable\");\nconst _resolveroutes = require(\"./router-utils/resolve-routes\");\nconst _requestmeta = require(\"../request-meta\");\nconst _pathhasprefix = require(\"../../shared/lib/router/utils/path-has-prefix\");\nconst _removepathprefix = require(\"../../shared/lib/router/utils/remove-path-prefix\");\nconst _compression = /*#__PURE__*/_interop_require_default(require(\"next/dist/compiled/compression\"));\nconst _baseserver = require(\"../base-server\");\nconst _nextrequest = require(\"../web/spec-extension/adapters/next-request\");\nconst _ispostpone = require(\"./router-utils/is-postpone\");\nconst _constants = require(\"../../shared/lib/constants\");\nconst _devbundlerservice = require(\"./dev-bundler-service\");\nfunction _interop_require_default(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nconst debug = (0, _debug.default)(\"next:router-server:main\");\nconst requestHandlers = {};\nasync function initialize(opts) {\n  if (!process.env.NODE_ENV) {\n    // @ts-ignore not readonly\n    process.env.NODE_ENV = opts.dev ? \"development\" : \"production\";\n  }\n  const config = await (0, _config.default)(opts.dev ? _constants.PHASE_DEVELOPMENT_SERVER : _constants.PHASE_PRODUCTION_SERVER, opts.dir, {\n    silent: false\n  });\n  let compress;\n  if ((config == null ? void 0 : config.compress) !== false) {\n    compress = (0, _compression.default)();\n  }\n  const fsChecker = await (0, _filesystem.setupFsCheck)({\n    dev: opts.dev,\n    dir: opts.dir,\n    config,\n    minimalMode: opts.minimalMode\n  });\n  const renderServer = {};\n  let developmentBundler;\n  let devBundlerService;\n  if (opts.dev) {\n    const telemetry = new _storage.Telemetry({\n      distDir: _path.default.join(opts.dir, config.distDir)\n    });\n    const {\n      pagesDir,\n      appDir\n    } = (0, _findpagesdir.findPagesDir)(opts.dir);\n    const {\n      setupDevBundler\n    } = require(\"./router-utils/setup-dev-bundler\");\n    developmentBundler = await setupDevBundler({\n      // Passed here but the initialization of this object happens below, doing the initialization before the setupDev call breaks.\n      renderServer,\n      appDir,\n      pagesDir,\n      telemetry,\n      fsChecker,\n      dir: opts.dir,\n      nextConfig: config,\n      isCustomServer: opts.customServer,\n      turbo: !!process.env.TURBOPACK,\n      port: opts.port\n    });\n    devBundlerService = new _devbundlerservice.DevBundlerService(developmentBundler,\n    // The request handler is assigned below, this allows us to create a lazy\n    // reference to it.\n    (req, res) => {\n      return requestHandlers[opts.dir](req, res);\n    });\n  }\n  renderServer.instance = require(\"./render-server\");\n  const renderServerOpts = {\n    port: opts.port,\n    dir: opts.dir,\n    hostname: opts.hostname,\n    minimalMode: opts.minimalMode,\n    dev: !!opts.dev,\n    server: opts.server,\n    isNodeDebugging: !!opts.isNodeDebugging,\n    serverFields: (developmentBundler == null ? void 0 : developmentBundler.serverFields) || {},\n    experimentalTestProxy: !!opts.experimentalTestProxy,\n    experimentalHttpsServer: !!opts.experimentalHttpsServer,\n    bundlerService: devBundlerService\n  };\n  // pre-initialize workers\n  const handlers = await renderServer.instance.initialize(renderServerOpts);\n  const logError = async (type, err) => {\n    if ((0, _ispostpone.isPostpone)(err)) {\n      // React postpones that are unhandled might end up logged here but they're\n      // not really errors. They're just part of rendering.\n      return;\n    }\n    await (developmentBundler == null ? void 0 : developmentBundler.logErrorWithOriginalStack(err, type));\n  };\n  process.on(\"uncaughtException\", logError.bind(null, \"uncaughtException\"));\n  process.on(\"unhandledRejection\", logError.bind(null, \"unhandledRejection\"));\n  const resolveRoutes = (0, _resolveroutes.getResolveRoutes)(fsChecker, config, opts, renderServer.instance, renderServerOpts, developmentBundler == null ? void 0 : developmentBundler.ensureMiddleware);\n  const requestHandlerImpl = async (req, res) => {\n    if (compress) {\n      // @ts-expect-error not express req/res\n      compress(req, res, () => {});\n    }\n    req.on(\"error\", _err => {\n      // TODO: log socket errors?\n    });\n    res.on(\"error\", _err => {\n      // TODO: log socket errors?\n    });\n    const invokedOutputs = new Set();\n    async function invokeRender(parsedUrl, invokePath, handleIndex, additionalInvokeHeaders = {}) {\n      var _fsChecker_getMiddlewareMatchers;\n      // invokeRender expects /api routes to not be locale prefixed\n      // so normalize here before continuing\n      if (config.i18n && (0, _removepathprefix.removePathPrefix)(invokePath, config.basePath).startsWith(`/${parsedUrl.query.__nextLocale}/api`)) {\n        invokePath = fsChecker.handleLocale((0, _removepathprefix.removePathPrefix)(invokePath, config.basePath)).pathname;\n      }\n      if (req.headers[\"x-nextjs-data\"] && ((_fsChecker_getMiddlewareMatchers = fsChecker.getMiddlewareMatchers()) == null ? void 0 : _fsChecker_getMiddlewareMatchers.length) && (0, _removepathprefix.removePathPrefix)(invokePath, config.basePath) === \"/404\") {\n        res.setHeader(\"x-nextjs-matched-path\", parsedUrl.pathname || \"\");\n        res.statusCode = 200;\n        res.setHeader(\"content-type\", \"application/json\");\n        res.end(\"{}\");\n        return null;\n      }\n      if (!handlers) {\n        throw new Error(\"Failed to initialize render server\");\n      }\n      const invokeHeaders = {\n        ...req.headers,\n        \"x-middleware-invoke\": \"\",\n        \"x-invoke-path\": invokePath,\n        \"x-invoke-query\": encodeURIComponent(JSON.stringify(parsedUrl.query)),\n        \"x-forwarded-host\": req.headers[\"x-forwarded-host\"] ?? req.headers.host ?? opts.hostname,\n        \"x-forwarded-port\": req.headers[\"x-forwarded-port\"] ?? opts.port.toString(),\n        \"x-forwarded-proto\": req.headers[\"x-forwarded-proto\"] ?? req.socket.encrypted ? \"https\" : \"http\",\n        \"x-forwarded-for\": req.headers[\"x-forwarded-for\"] ?? req.socket.remoteAddress,\n        ...(additionalInvokeHeaders || {})\n      };\n      Object.assign(req.headers, invokeHeaders);\n      debug(\"invokeRender\", req.url, invokeHeaders);\n      try {\n        var _renderServer_instance;\n        const initResult = await (renderServer == null ? void 0 : (_renderServer_instance = renderServer.instance) == null ? void 0 : _renderServer_instance.initialize(renderServerOpts));\n        try {\n          await (initResult == null ? void 0 : initResult.requestHandler(req, res));\n        } catch (err) {\n          if (err instanceof _baseserver.NoFallbackError) {\n            // eslint-disable-next-line\n            await handleRequest(handleIndex + 1);\n            return;\n          }\n          throw err;\n        }\n        return;\n      } catch (e) {\n        // If the client aborts before we can receive a response object (when\n        // the headers are flushed), then we can early exit without further\n        // processing.\n        if ((0, _pipereadable.isAbortError)(e)) {\n          return;\n        }\n        throw e;\n      }\n    }\n    const handleRequest = async handleIndex => {\n      if (handleIndex > 5) {\n        throw new Error(`Attempted to handle request too many times ${req.url}`);\n      }\n      // handle hot-reloader first\n      if (developmentBundler) {\n        const origUrl = req.url || \"/\";\n        if (config.basePath && (0, _pathhasprefix.pathHasPrefix)(origUrl, config.basePath)) {\n          req.url = (0, _removepathprefix.removePathPrefix)(origUrl, config.basePath);\n        }\n        const parsedUrl = _url.default.parse(req.url || \"/\");\n        const hotReloaderResult = await developmentBundler.hotReloader.run(req, res, parsedUrl);\n        if (hotReloaderResult.finished) {\n          return hotReloaderResult;\n        }\n        req.url = origUrl;\n      }\n      const {\n        finished,\n        parsedUrl,\n        statusCode,\n        resHeaders,\n        bodyStream,\n        matchedOutput\n      } = await resolveRoutes({\n        req,\n        res,\n        isUpgradeReq: false,\n        signal: (0, _nextrequest.signalFromNodeResponse)(res),\n        invokedOutputs\n      });\n      if (res.closed || res.finished) {\n        return;\n      }\n      if (developmentBundler && (matchedOutput == null ? void 0 : matchedOutput.type) === \"devVirtualFsItem\") {\n        const origUrl = req.url || \"/\";\n        if (config.basePath && (0, _pathhasprefix.pathHasPrefix)(origUrl, config.basePath)) {\n          req.url = (0, _removepathprefix.removePathPrefix)(origUrl, config.basePath);\n        }\n        if (resHeaders) {\n          for (const key of Object.keys(resHeaders)) {\n            res.setHeader(key, resHeaders[key]);\n          }\n        }\n        const result = await developmentBundler.requestHandler(req, res);\n        if (result.finished) {\n          return;\n        }\n        // TODO: throw invariant if we resolved to this but it wasn't handled?\n        req.url = origUrl;\n      }\n      debug(\"requestHandler!\", req.url, {\n        matchedOutput,\n        statusCode,\n        resHeaders,\n        bodyStream: !!bodyStream,\n        parsedUrl: {\n          pathname: parsedUrl.pathname,\n          query: parsedUrl.query\n        },\n        finished\n      });\n      // apply any response headers from routing\n      for (const key of Object.keys(resHeaders || {})) {\n        res.setHeader(key, resHeaders[key]);\n      }\n      // handle redirect\n      if (!bodyStream && statusCode && statusCode > 300 && statusCode < 400) {\n        const destination = _url.default.format(parsedUrl);\n        res.statusCode = statusCode;\n        res.setHeader(\"location\", destination);\n        if (statusCode === _constants.PERMANENT_REDIRECT_STATUS) {\n          res.setHeader(\"Refresh\", `0;url=${destination}`);\n        }\n        return res.end(destination);\n      }\n      // handle middleware body response\n      if (bodyStream) {\n        res.statusCode = statusCode || 200;\n        return await (0, _pipereadable.pipeToNodeResponse)(bodyStream, res);\n      }\n      if (finished && parsedUrl.protocol) {\n        var _getRequestMeta;\n        return await (0, _proxyrequest.proxyRequest)(req, res, parsedUrl, undefined, (_getRequestMeta = (0, _requestmeta.getRequestMeta)(req, \"clonableBody\")) == null ? void 0 : _getRequestMeta.cloneBodyStream(), config.experimental.proxyTimeout);\n      }\n      if ((matchedOutput == null ? void 0 : matchedOutput.fsPath) && matchedOutput.itemPath) {\n        if (opts.dev && (fsChecker.appFiles.has(matchedOutput.itemPath) || fsChecker.pageFiles.has(matchedOutput.itemPath))) {\n          res.statusCode = 500;\n          await invokeRender(parsedUrl, \"/_error\", handleIndex, {\n            \"x-invoke-status\": \"500\",\n            \"x-invoke-error\": JSON.stringify({\n              message: `A conflicting public file and page file was found for path ${matchedOutput.itemPath} https://nextjs.org/docs/messages/conflicting-public-file-page`\n            })\n          });\n          return;\n        }\n        if (!res.getHeader(\"cache-control\") && matchedOutput.type === \"nextStaticFolder\") {\n          if (opts.dev) {\n            res.setHeader(\"Cache-Control\", \"no-store, must-revalidate\");\n          } else {\n            res.setHeader(\"Cache-Control\", \"public, max-age=31536000, immutable\");\n          }\n        }\n        if (!(req.method === \"GET\" || req.method === \"HEAD\")) {\n          res.setHeader(\"Allow\", [\"GET\", \"HEAD\"]);\n          res.statusCode = 405;\n          return await invokeRender(_url.default.parse(\"/405\", true), \"/405\", handleIndex, {\n            \"x-invoke-status\": \"405\"\n          });\n        }\n        try {\n          return await (0, _servestatic.serveStatic)(req, res, matchedOutput.itemPath, {\n            root: matchedOutput.itemsRoot,\n            // Ensures that etags are not generated for static files when disabled.\n            etag: config.generateEtags\n          });\n        } catch (err) {\n          /**\n          * Hardcoded every possible error status code that could be thrown by \"serveStatic\" method\n          * This is done by searching \"this.error\" inside \"send\" module's source code:\n          * https://github.com/pillarjs/send/blob/master/index.js\n          * https://github.com/pillarjs/send/blob/develop/index.js\n          */\n          const POSSIBLE_ERROR_CODE_FROM_SERVE_STATIC = new Set([\n          // send module will throw 500 when header is already sent or fs.stat error happens\n          // https://github.com/pillarjs/send/blob/53f0ab476145670a9bdd3dc722ab2fdc8d358fc6/index.js#L392\n          // Note: we will use Next.js built-in 500 page to handle 500 errors\n          // 500,\n          // send module will throw 404 when file is missing\n          // https://github.com/pillarjs/send/blob/53f0ab476145670a9bdd3dc722ab2fdc8d358fc6/index.js#L421\n          // Note: we will use Next.js built-in 404 page to handle 404 errors\n          // 404,\n          // send module will throw 403 when redirecting to a directory without enabling directory listing\n          // https://github.com/pillarjs/send/blob/53f0ab476145670a9bdd3dc722ab2fdc8d358fc6/index.js#L484\n          // Note: Next.js throws a different error (without status code) for directory listing\n          // 403,\n          // send module will throw 400 when fails to normalize the path\n          // https://github.com/pillarjs/send/blob/53f0ab476145670a9bdd3dc722ab2fdc8d358fc6/index.js#L520\n          400,\n          // send module will throw 412 with conditional GET request\n          // https://github.com/pillarjs/send/blob/53f0ab476145670a9bdd3dc722ab2fdc8d358fc6/index.js#L632\n          412,\n          // send module will throw 416 when range is not satisfiable\n          // https://github.com/pillarjs/send/blob/53f0ab476145670a9bdd3dc722ab2fdc8d358fc6/index.js#L669\n          416]);\n          let validErrorStatus = POSSIBLE_ERROR_CODE_FROM_SERVE_STATIC.has(err.statusCode);\n          // normalize non-allowed status codes\n          if (!validErrorStatus) {\n            err.statusCode = 400;\n          }\n          if (typeof err.statusCode === \"number\") {\n            const invokePath = `/${err.statusCode}`;\n            const invokeStatus = `${err.statusCode}`;\n            res.statusCode = err.statusCode;\n            return await invokeRender(_url.default.parse(invokePath, true), invokePath, handleIndex, {\n              \"x-invoke-status\": invokeStatus\n            });\n          }\n          throw err;\n        }\n      }\n      if (matchedOutput) {\n        invokedOutputs.add(matchedOutput.itemPath);\n        return await invokeRender(parsedUrl, parsedUrl.pathname || \"/\", handleIndex, {\n          \"x-invoke-output\": matchedOutput.itemPath\n        });\n      }\n      // 404 case\n      res.setHeader(\"Cache-Control\", \"no-cache, no-store, max-age=0, must-revalidate\");\n      // Short-circuit favicon.ico serving so that the 404 page doesn't get built as favicon is requested by the browser when loading any route.\n      if (opts.dev && !matchedOutput && parsedUrl.pathname === \"/favicon.ico\") {\n        res.statusCode = 404;\n        res.end(\"\");\n        return null;\n      }\n      const appNotFound = opts.dev ? developmentBundler == null ? void 0 : developmentBundler.serverFields.hasAppNotFound : await fsChecker.getItem(\"/_not-found\");\n      res.statusCode = 404;\n      if (appNotFound) {\n        return await invokeRender(parsedUrl, opts.dev ? \"/not-found\" : \"/_not-found\", handleIndex, {\n          \"x-invoke-status\": \"404\"\n        });\n      }\n      await invokeRender(parsedUrl, \"/404\", handleIndex, {\n        \"x-invoke-status\": \"404\"\n      });\n    };\n    try {\n      await handleRequest(0);\n    } catch (err) {\n      try {\n        let invokePath = \"/500\";\n        let invokeStatus = \"500\";\n        if (err instanceof _utils.DecodeError) {\n          invokePath = \"/400\";\n          invokeStatus = \"400\";\n        } else {\n          console.error(err);\n        }\n        res.statusCode = Number(invokeStatus);\n        return await invokeRender(_url.default.parse(invokePath, true), invokePath, 0, {\n          \"x-invoke-status\": invokeStatus\n        });\n      } catch (err2) {\n        console.error(err2);\n      }\n      res.statusCode = 500;\n      res.end(\"Internal Server Error\");\n    }\n  };\n  let requestHandler = requestHandlerImpl;\n  if (opts.experimentalTestProxy) {\n    // Intercept fetch and other testmode apis.\n    const {\n      wrapRequestHandlerWorker,\n      interceptTestApis\n    } = require(\"../../experimental/testmode/server\");\n    requestHandler = wrapRequestHandlerWorker(requestHandler);\n    interceptTestApis();\n  }\n  requestHandlers[opts.dir] = requestHandler;\n  const upgradeHandler = async (req, socket, head) => {\n    try {\n      req.on(\"error\", _err => {\n        // TODO: log socket errors?\n        // console.error(_err);\n      });\n      socket.on(\"error\", _err => {\n        // TODO: log socket errors?\n        // console.error(_err);\n      });\n      if (opts.dev && developmentBundler) {\n        var _req_url;\n        if ((_req_url = req.url) == null ? void 0 : _req_url.includes(`/_next/webpack-hmr`)) {\n          return developmentBundler.hotReloader.onHMR(req, socket, head);\n        }\n      }\n      const {\n        matchedOutput,\n        parsedUrl\n      } = await resolveRoutes({\n        req,\n        res: socket,\n        isUpgradeReq: true,\n        signal: (0, _nextrequest.signalFromNodeResponse)(socket)\n      });\n      // TODO: allow upgrade requests to pages/app paths?\n      // this was not previously supported\n      if (matchedOutput) {\n        return socket.end();\n      }\n      if (parsedUrl.protocol) {\n        return await (0, _proxyrequest.proxyRequest)(req, socket, parsedUrl, head);\n      }\n      // If there's no matched output, we don't handle the request as user's\n      // custom WS server may be listening on the same path.\n    } catch (err) {\n      console.error(\"Error handling upgrade request\", err);\n      socket.end();\n    }\n  };\n  return [requestHandler, upgradeHandler];\n}","map":{"version":3,"names":["initialize","debug","_debug","default","requestHandlers","opts","process","env","NODE_ENV","dev","config","_config","_constants","PHASE_DEVELOPMENT_SERVER","PHASE_PRODUCTION_SERVER","dir","silent","compress","_compression","fsChecker","_filesystem","setupFsCheck","minimalMode","renderServer","developmentBundler","devBundlerService","telemetry","_storage","Telemetry","distDir","_path","join","pagesDir","appDir","_findpagesdir","findPagesDir","setupDevBundler","require","nextConfig","isCustomServer","customServer","turbo","TURBOPACK","port","_devbundlerservice","DevBundlerService","req","res","instance","renderServerOpts","hostname","server","isNodeDebugging","serverFields","experimentalTestProxy","experimentalHttpsServer","bundlerService","handlers","logError","type","err","_ispostpone","isPostpone","logErrorWithOriginalStack","on","bind","resolveRoutes","_resolveroutes","getResolveRoutes","ensureMiddleware","requestHandlerImpl","_err","invokedOutputs","Set","invokeRender","parsedUrl","invokePath","handleIndex","additionalInvokeHeaders","_fsChecker_getMiddlewareMatchers","i18n","_removepathprefix","removePathPrefix","basePath","startsWith","query","__nextLocale","handleLocale","pathname","headers","getMiddlewareMatchers","length","setHeader","statusCode","end","Error","invokeHeaders","encodeURIComponent","JSON","stringify","host","toString","socket","encrypted","remoteAddress","Object","assign","url","_renderServer_instance","initResult","requestHandler","_baseserver","NoFallbackError","handleRequest","e","_pipereadable","isAbortError","origUrl","_pathhasprefix","pathHasPrefix","_url","parse","hotReloaderResult","hotReloader","run","finished","resHeaders","bodyStream","matchedOutput","isUpgradeReq","signal","_nextrequest","signalFromNodeResponse","closed","key","keys","result","destination","format","PERMANENT_REDIRECT_STATUS","pipeToNodeResponse","protocol","_getRequestMeta","_proxyrequest","proxyRequest","undefined","_requestmeta","getRequestMeta","cloneBodyStream","experimental","proxyTimeout","fsPath","itemPath","appFiles","has","pageFiles","message","getHeader","method","_servestatic","serveStatic","root","itemsRoot","etag","generateEtags","POSSIBLE_ERROR_CODE_FROM_SERVE_STATIC","validErrorStatus","invokeStatus","add","appNotFound","hasAppNotFound","getItem","_utils","DecodeError","console","error","Number","err2","wrapRequestHandlerWorker","interceptTestApis","upgradeHandler","head","_req_url","includes","onHMR"],"sources":["../../../src/server/lib/router-server.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}