{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function () {\n    return NextNodeServer;\n  }\n});\n0 && __export(require(\"./base-server\"));\nrequire(\"./node-environment\");\nrequire(\"./require-hook\");\nrequire(\"./node-polyfill-crypto\");\nconst _utils = require(\"../shared/lib/utils\");\nconst _fs = /*#__PURE__*/_interop_require_default(require(\"fs\"));\nconst _path = require(\"path\");\nconst _routematcher = require(\"../shared/lib/router/utils/route-matcher\");\nconst _requestmeta = require(\"./request-meta\");\nconst _constants = require(\"../shared/lib/constants\");\nconst _findpagesdir = require(\"../lib/find-pages-dir\");\nconst _node = require(\"./base-http/node\");\nconst _sendpayload = require(\"./send-payload\");\nconst _parseurl = require(\"../shared/lib/router/utils/parse-url\");\nconst _log = /*#__PURE__*/_interop_require_wildcard(require(\"../build/output/log\"));\nconst _baseserver = /*#__PURE__*/_interop_require_wildcard(_export_star(require(\"./base-server\"), exports));\nconst _require = require(\"./require\");\nconst _denormalizepagepath = require(\"../shared/lib/page-path/denormalize-page-path\");\nconst _normalizepagepath = require(\"../shared/lib/page-path/normalize-page-path\");\nconst _loadcomponents = require(\"./load-components\");\nconst _iserror = /*#__PURE__*/_interop_require_wildcard(require(\"../lib/is-error\"));\nconst _utils1 = require(\"./web/utils\");\nconst _middlewareroutematcher = require(\"../shared/lib/router/utils/middleware-route-matcher\");\nconst _env = require(\"@next/env\");\nconst _querystring = require(\"../shared/lib/router/utils/querystring\");\nconst _removetrailingslash = require(\"../shared/lib/router/utils/remove-trailing-slash\");\nconst _getnextpathnameinfo = require(\"../shared/lib/router/utils/get-next-pathname-info\");\nconst _bodystreams = require(\"./body-streams\");\nconst _apiutils = require(\"./api-utils\");\nconst _responsecache = /*#__PURE__*/_interop_require_default(require(\"./response-cache\"));\nconst _incrementalcache = require(\"./lib/incremental-cache\");\nconst _apppaths = require(\"../shared/lib/router/utils/app-paths\");\nconst _setuphttpagentenv = require(\"./setup-http-agent-env\");\nconst _pagesapiroutematch = require(\"./future/route-matches/pages-api-route-match\");\nconst _constants1 = require(\"../lib/constants\");\nconst _tracer = require(\"./lib/trace/tracer\");\nconst _constants2 = require(\"./lib/trace/constants\");\nconst _nodefsmethods = require(\"./lib/node-fs-methods\");\nconst _routeregex = require(\"../shared/lib/router/utils/route-regex\");\nconst _invokerequest = require(\"./lib/server-ipc/invoke-request\");\nconst _utils2 = require(\"./lib/server-ipc/utils\");\nconst _pipereadable = require(\"./pipe-readable\");\nconst _mockrequest = require(\"./lib/mock-request\");\nconst _approuterheaders = require(\"../client/components/app-router-headers\");\nconst _nextrequest = require(\"./web/spec-extension/adapters/next-request\");\nconst _routemoduleloader = require(\"./future/helpers/module-loader/route-module-loader\");\nconst _loadmanifest = require(\"./load-manifest\");\nconst _modulerender = require(\"./future/route-modules/app-page/module.render\");\nconst _modulerender1 = require(\"./future/route-modules/pages/module.render\");\nfunction _export_star(from, to) {\n  Object.keys(from).forEach(function (k) {\n    if (k !== \"default\" && !Object.prototype.hasOwnProperty.call(to, k)) {\n      Object.defineProperty(to, k, {\n        enumerable: true,\n        get: function () {\n          return from[k];\n        }\n      });\n    }\n  });\n  return from;\n}\nfunction _interop_require_default(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interop_require_wildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nconst dynamicRequire = process.env.NEXT_MINIMAL ? __non_webpack_require__ : require;\nfunction writeStdoutLine(text) {\n  process.stdout.write(\" \" + text + \"\\n\");\n}\nfunction formatRequestUrl(url, maxLength) {\n  return maxLength !== undefined && url.length > maxLength ? url.substring(0, maxLength) + \"..\" : url;\n}\nconst MiddlewareMatcherCache = new WeakMap();\nfunction getMiddlewareMatcher(info) {\n  const stored = MiddlewareMatcherCache.get(info);\n  if (stored) {\n    return stored;\n  }\n  if (!Array.isArray(info.matchers)) {\n    throw new Error(`Invariant: invalid matchers for middleware ${JSON.stringify(info)}`);\n  }\n  const matcher = (0, _middlewareroutematcher.getMiddlewareRouteMatcher)(info.matchers);\n  MiddlewareMatcherCache.set(info, matcher);\n  return matcher;\n}\nclass NextNodeServer extends _baseserver.default {\n  constructor(options) {\n    // Initialize super class\n    super(options);\n    this.handleNextImageRequest = async (req, res, parsedUrl) => {\n      if (!parsedUrl.pathname || !parsedUrl.pathname.startsWith(\"/_next/image\")) {\n        return false;\n      }\n      if (this.minimalMode || this.nextConfig.output === \"export\" || process.env.NEXT_MINIMAL) {\n        res.statusCode = 400;\n        res.body(\"Bad Request\").send();\n        return true;\n        // the `else` branch is needed for tree-shaking\n      } else {\n        const {\n          ImageOptimizerCache\n        } = require(\"./image-optimizer\");\n        const imageOptimizerCache = new ImageOptimizerCache({\n          distDir: this.distDir,\n          nextConfig: this.nextConfig\n        });\n        const {\n          getHash,\n          sendResponse,\n          ImageError\n        } = require(\"./image-optimizer\");\n        if (!this.imageResponseCache) {\n          throw new Error(\"invariant image optimizer cache was not initialized\");\n        }\n        const imagesConfig = this.nextConfig.images;\n        if (imagesConfig.loader !== \"default\" || imagesConfig.unoptimized) {\n          await this.render404(req, res);\n          return true;\n        }\n        const paramsResult = ImageOptimizerCache.validateParams(req.originalRequest, parsedUrl.query, this.nextConfig, !!this.renderOpts.dev);\n        if (\"errorMessage\" in paramsResult) {\n          res.statusCode = 400;\n          res.body(paramsResult.errorMessage).send();\n          return true;\n        }\n        const cacheKey = ImageOptimizerCache.getCacheKey(paramsResult);\n        try {\n          var _cacheEntry_value;\n          const {\n            getExtension\n          } = require(\"./serve-static\");\n          const cacheEntry = await this.imageResponseCache.get(cacheKey, async () => {\n            const {\n              buffer,\n              contentType,\n              maxAge\n            } = await this.imageOptimizer(req, res, paramsResult);\n            const etag = getHash([buffer]);\n            return {\n              value: {\n                kind: \"IMAGE\",\n                buffer,\n                etag,\n                extension: getExtension(contentType)\n              },\n              revalidate: maxAge\n            };\n          }, {\n            incrementalCache: imageOptimizerCache\n          });\n          if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== \"IMAGE\") {\n            throw new Error(\"invariant did not get entry from image response cache\");\n          }\n          sendResponse(req.originalRequest, res.originalResponse, paramsResult.href, cacheEntry.value.extension, cacheEntry.value.buffer, paramsResult.isStatic, cacheEntry.isMiss ? \"MISS\" : cacheEntry.isStale ? \"STALE\" : \"HIT\", imagesConfig, cacheEntry.revalidate || 0, Boolean(this.renderOpts.dev));\n          return true;\n        } catch (err) {\n          if (err instanceof ImageError) {\n            res.statusCode = err.statusCode;\n            res.body(err.message).send();\n            return true;\n          }\n          throw err;\n        }\n      }\n    };\n    this.handleCatchallRenderRequest = async (req, res, parsedUrl) => {\n      let {\n        pathname,\n        query\n      } = parsedUrl;\n      if (!pathname) {\n        throw new Error(\"Invariant: pathname is undefined\");\n      }\n      // This is a catch-all route, there should be no fallbacks so mark it as\n      // such.\n      query._nextBubbleNoFallback = \"1\";\n      try {\n        var _this_i18nProvider;\n        // next.js core assumes page path without trailing slash\n        pathname = (0, _removetrailingslash.removeTrailingSlash)(pathname);\n        const options = {\n          i18n: (_this_i18nProvider = this.i18nProvider) == null ? void 0 : _this_i18nProvider.fromQuery(pathname, query)\n        };\n        const match = await this.matchers.match(pathname, options);\n        // If we don't have a match, try to render it anyways.\n        if (!match) {\n          await this.render(req, res, pathname, query, parsedUrl, true);\n          return true;\n        }\n        // Add the match to the request so we don't have to re-run the matcher\n        // for the same request.\n        (0, _requestmeta.addRequestMeta)(req, \"match\", match);\n        // TODO-APP: move this to a route handler\n        const edgeFunctionsPages = this.getEdgeFunctionsPages();\n        for (const edgeFunctionsPage of edgeFunctionsPages) {\n          // If the page doesn't match the edge function page, skip it.\n          if (edgeFunctionsPage !== match.definition.page) continue;\n          if (this.nextConfig.output === \"export\") {\n            await this.render404(req, res, parsedUrl);\n            return true;\n          }\n          delete query._nextBubbleNoFallback;\n          delete query[_approuterheaders.NEXT_RSC_UNION_QUERY];\n          const handled = await this.runEdgeFunction({\n            req,\n            res,\n            query,\n            params: match.params,\n            page: match.definition.page,\n            match,\n            appPaths: null\n          });\n          // If we handled the request, we can return early.\n          if (handled) return true;\n        }\n        // If the route was detected as being a Pages API route, then handle\n        // it.\n        // TODO: move this behavior into a route handler.\n        if ((0, _pagesapiroutematch.isPagesAPIRouteMatch)(match)) {\n          if (this.nextConfig.output === \"export\") {\n            await this.render404(req, res, parsedUrl);\n            return true;\n          }\n          delete query._nextBubbleNoFallback;\n          const handled = await this.handleApiRequest(req, res, query, match);\n          if (handled) return true;\n        }\n        await this.render(req, res, pathname, query, parsedUrl, true);\n        return true;\n      } catch (err) {\n        if (err instanceof _baseserver.NoFallbackError) {\n          throw err;\n        }\n        try {\n          if (this.renderOpts.dev) {\n            const {\n              formatServerError\n            } = require(\"../lib/format-server-error\");\n            formatServerError(err);\n            await this.logErrorWithOriginalStack(err);\n          } else {\n            this.logError(err);\n          }\n          res.statusCode = 500;\n          await this.renderError(err, req, res, pathname, query);\n          return true;\n        } catch {}\n        throw err;\n      }\n    };\n    this.handleCatchallMiddlewareRequest = async (req, res, parsed) => {\n      const isMiddlewareInvoke = req.headers[\"x-middleware-invoke\"];\n      if (!isMiddlewareInvoke) {\n        return false;\n      }\n      const handleFinished = () => {\n        res.setHeader(\"x-middleware-invoke\", \"1\");\n        res.body(\"\").send();\n        return true;\n      };\n      const middleware = this.getMiddleware();\n      if (!middleware) {\n        return handleFinished();\n      }\n      const initUrl = (0, _requestmeta.getRequestMeta)(req, \"initURL\");\n      const parsedUrl = (0, _parseurl.parseUrl)(initUrl);\n      const pathnameInfo = (0, _getnextpathnameinfo.getNextPathnameInfo)(parsedUrl.pathname, {\n        nextConfig: this.nextConfig,\n        i18nProvider: this.i18nProvider\n      });\n      parsedUrl.pathname = pathnameInfo.pathname;\n      const normalizedPathname = (0, _removetrailingslash.removeTrailingSlash)(parsed.pathname || \"\");\n      if (!middleware.match(normalizedPathname, req, parsedUrl.query)) {\n        return handleFinished();\n      }\n      let result;\n      let bubblingResult = false;\n      for (const key of _constants.INTERNAL_HEADERS) {\n        delete req.headers[key];\n      }\n      // Strip the internal headers.\n      this.stripInternalHeaders(req);\n      try {\n        await this.ensureMiddleware();\n        result = await this.runMiddleware({\n          request: req,\n          response: res,\n          parsedUrl: parsedUrl,\n          parsed: parsed\n        });\n        if (\"response\" in result) {\n          if (isMiddlewareInvoke) {\n            bubblingResult = true;\n            const err = new Error();\n            err.result = result;\n            err.bubble = true;\n            throw err;\n          }\n          for (const [key, value] of Object.entries((0, _utils1.toNodeOutgoingHttpHeaders)(result.response.headers))) {\n            if (key !== \"content-encoding\" && value !== undefined) {\n              res.setHeader(key, value);\n            }\n          }\n          res.statusCode = result.response.status;\n          const {\n            originalResponse\n          } = res;\n          if (result.response.body) {\n            await (0, _pipereadable.pipeToNodeResponse)(result.response.body, originalResponse);\n          } else {\n            originalResponse.end();\n          }\n          return true;\n        }\n      } catch (err) {\n        if (bubblingResult) {\n          throw err;\n        }\n        if ((0, _iserror.default)(err) && err.code === \"ENOENT\") {\n          await this.render404(req, res, parsed);\n          return true;\n        }\n        if (err instanceof _utils.DecodeError) {\n          res.statusCode = 400;\n          await this.renderError(err, req, res, parsed.pathname || \"\");\n          return true;\n        }\n        const error = (0, _iserror.getProperError)(err);\n        console.error(error);\n        res.statusCode = 500;\n        await this.renderError(error, req, res, parsed.pathname || \"\");\n        return true;\n      }\n      return result.finished;\n    };\n    /**\n    * This sets environment variable to be used at the time of SSR by head.tsx.\n    * Using this from process.env allows targeting SSR by calling\n    * `process.env.__NEXT_OPTIMIZE_CSS`.\n    */\n    if (this.renderOpts.optimizeFonts) {\n      process.env.__NEXT_OPTIMIZE_FONTS = JSON.stringify(this.renderOpts.optimizeFonts);\n    }\n    if (this.renderOpts.optimizeCss) {\n      process.env.__NEXT_OPTIMIZE_CSS = JSON.stringify(true);\n    }\n    if (this.renderOpts.nextScriptWorkers) {\n      process.env.__NEXT_SCRIPT_WORKERS = JSON.stringify(true);\n    }\n    process.env.NEXT_DEPLOYMENT_ID = this.nextConfig.experimental.deploymentId || \"\";\n    if (!this.minimalMode) {\n      this.imageResponseCache = new _responsecache.default(this.minimalMode);\n    }\n    const {\n      appDocumentPreloading\n    } = this.nextConfig.experimental;\n    const isDefaultEnabled = typeof appDocumentPreloading === \"undefined\";\n    if (!options.dev && (appDocumentPreloading === true || !(this.minimalMode && isDefaultEnabled))) {\n      // pre-warm _document and _app as these will be\n      // needed for most requests\n      (0, _loadcomponents.loadComponents)({\n        distDir: this.distDir,\n        page: \"/_document\",\n        isAppPath: false\n      }).catch(() => {});\n      (0, _loadcomponents.loadComponents)({\n        distDir: this.distDir,\n        page: \"/_app\",\n        isAppPath: false\n      }).catch(() => {});\n    }\n    if (!options.dev) {\n      const {\n        dynamicRoutes = []\n      } = this.getRoutesManifest() ?? {};\n      this.dynamicRoutes = dynamicRoutes.map(r => {\n        // TODO: can we just re-use the regex from the manifest?\n        const regex = (0, _routeregex.getRouteRegex)(r.page);\n        const match = (0, _routematcher.getRouteMatcher)(regex);\n        return {\n          match,\n          page: r.page,\n          re: regex.re\n        };\n      });\n    }\n    // ensure options are set when loadConfig isn't called\n    (0, _setuphttpagentenv.setHttpClientAndAgentOptions)(this.nextConfig);\n    // Intercept fetch and other testmode apis.\n    if (this.serverOptions.experimentalTestProxy) {\n      const {\n        interceptTestApis\n      } = require(\"../experimental/testmode/server\");\n      interceptTestApis();\n    }\n    this.middlewareManifestPath = (0, _path.join)(this.serverDistDir, _constants.MIDDLEWARE_MANIFEST);\n  }\n  async handleUpgrade() {\n    // The web server does not support web sockets, it's only used for HMR in\n    // development.\n  }\n  async prepareImpl() {\n    await super.prepareImpl();\n    if (!this.serverOptions.dev && this.nextConfig.experimental.instrumentationHook) {\n      try {\n        const instrumentationHook = await dynamicRequire((0, _path.resolve)(this.serverOptions.dir || \".\", this.serverOptions.conf.distDir, \"server\", _constants1.INSTRUMENTATION_HOOK_FILENAME));\n        await (instrumentationHook.register == null ? void 0 : instrumentationHook.register.call(instrumentationHook));\n      } catch (err) {\n        if (err.code !== \"MODULE_NOT_FOUND\") {\n          err.message = `An error occurred while loading instrumentation hook: ${err.message}`;\n          throw err;\n        }\n      }\n    }\n  }\n  loadEnvConfig({\n    dev,\n    forceReload,\n    silent\n  }) {\n    (0, _env.loadEnvConfig)(this.dir, dev, silent ? {\n      info: () => {},\n      error: () => {}\n    } : _log, forceReload);\n  }\n  getIncrementalCache({\n    requestHeaders,\n    requestProtocol\n  }) {\n    const dev = !!this.renderOpts.dev;\n    let CacheHandler;\n    const {\n      incrementalCacheHandlerPath\n    } = this.nextConfig.experimental;\n    if (incrementalCacheHandlerPath) {\n      CacheHandler = dynamicRequire((0, _path.isAbsolute)(incrementalCacheHandlerPath) ? incrementalCacheHandlerPath : (0, _path.join)(this.distDir, incrementalCacheHandlerPath));\n      CacheHandler = CacheHandler.default || CacheHandler;\n    }\n    // incremental-cache is request specific\n    // although can have shared caches in module scope\n    // per-cache handler\n    return new _incrementalcache.IncrementalCache({\n      fs: this.getCacheFilesystem(),\n      dev,\n      requestHeaders,\n      requestProtocol,\n      appDir: this.hasAppDir,\n      allowedRevalidateHeaderKeys: this.nextConfig.experimental.allowedRevalidateHeaderKeys,\n      minimalMode: this.minimalMode,\n      serverDistDir: this.serverDistDir,\n      fetchCache: true,\n      fetchCacheKeyPrefix: this.nextConfig.experimental.fetchCacheKeyPrefix,\n      maxMemoryCacheSize: this.nextConfig.experimental.isrMemoryCacheSize,\n      flushToDisk: !this.minimalMode && this.nextConfig.experimental.isrFlushToDisk,\n      getPrerenderManifest: () => this.getPrerenderManifest(),\n      CurCacheHandler: CacheHandler\n    });\n  }\n  getResponseCache() {\n    return new _responsecache.default(this.minimalMode);\n  }\n  getPublicDir() {\n    return (0, _path.join)(this.dir, _constants.CLIENT_PUBLIC_FILES_PATH);\n  }\n  getHasStaticDir() {\n    return _fs.default.existsSync((0, _path.join)(this.dir, \"static\"));\n  }\n  getPagesManifest() {\n    return (0, _loadmanifest.loadManifest)((0, _path.join)(this.serverDistDir, _constants.PAGES_MANIFEST));\n  }\n  getAppPathsManifest() {\n    if (!this.hasAppDir) return undefined;\n    return (0, _loadmanifest.loadManifest)((0, _path.join)(this.serverDistDir, _constants.APP_PATHS_MANIFEST));\n  }\n  async hasPage(pathname) {\n    var _this_nextConfig_i18n;\n    return !!(0, _require.getMaybePagePath)(pathname, this.distDir, (_this_nextConfig_i18n = this.nextConfig.i18n) == null ? void 0 : _this_nextConfig_i18n.locales, this.hasAppDir);\n  }\n  getBuildId() {\n    const buildIdFile = (0, _path.join)(this.distDir, _constants.BUILD_ID_FILE);\n    try {\n      return _fs.default.readFileSync(buildIdFile, \"utf8\").trim();\n    } catch (err) {\n      if (err.code === \"ENOENT\") {\n        throw new Error(`Could not find a production build in the '${this.distDir}' directory. Try building your app with 'next build' before starting the production server. https://nextjs.org/docs/messages/production-start-no-build-id`);\n      }\n      throw err;\n    }\n  }\n  getHasAppDir(dev) {\n    return Boolean((0, _findpagesdir.findDir)(dev ? this.dir : this.serverDistDir, \"app\"));\n  }\n  sendRenderResult(req, res, options) {\n    return (0, _sendpayload.sendRenderResult)({\n      req: req.originalRequest,\n      res: res.originalResponse,\n      result: options.result,\n      type: options.type,\n      generateEtags: options.generateEtags,\n      poweredByHeader: options.poweredByHeader,\n      revalidate: options.revalidate\n    });\n  }\n  async runApi(req, res, query, match) {\n    const edgeFunctionsPages = this.getEdgeFunctionsPages();\n    for (const edgeFunctionsPage of edgeFunctionsPages) {\n      if (edgeFunctionsPage === match.definition.pathname) {\n        const handledAsEdgeFunction = await this.runEdgeFunction({\n          req,\n          res,\n          query,\n          params: match.params,\n          page: match.definition.pathname,\n          appPaths: null\n        });\n        if (handledAsEdgeFunction) {\n          return true;\n        }\n      }\n    }\n    // The module supports minimal mode, load the minimal module.\n    const module = await _routemoduleloader.RouteModuleLoader.load(match.definition.filename);\n    query = {\n      ...query,\n      ...match.params\n    };\n    delete query.__nextLocale;\n    delete query.__nextDefaultLocale;\n    delete query.__nextInferredLocaleFromDefault;\n    await module.render(req.originalRequest, res.originalResponse, {\n      previewProps: this.renderOpts.previewProps,\n      revalidate: this.revalidate.bind(this),\n      trustHostHeader: this.nextConfig.experimental.trustHostHeader,\n      allowedRevalidateHeaderKeys: this.nextConfig.experimental.allowedRevalidateHeaderKeys,\n      hostname: this.fetchHostname,\n      minimalMode: this.minimalMode,\n      dev: this.renderOpts.dev === true,\n      query,\n      params: match.params,\n      page: match.definition.pathname\n    });\n    return true;\n  }\n  async renderHTML(req, res, pathname, query, renderOpts) {\n    return (0, _tracer.getTracer)().trace(_constants2.NextNodeServerSpan.renderHTML, async () => this.renderHTMLImpl(req, res, pathname, query, renderOpts));\n  }\n  async renderHTMLImpl(req, res, pathname, query, renderOpts) {\n    if (process.env.NEXT_MINIMAL) {\n      throw new Error(\"Invariant: renderHTML should not be called in minimal mode\");\n      // the `else` branch is needed for tree-shaking\n    } else {\n      // Due to the way we pass data by mutating `renderOpts`, we can't extend the\n      // object here but only updating its `nextFontManifest` field.\n      // https://github.com/vercel/next.js/blob/df7cbd904c3bd85f399d1ce90680c0ecf92d2752/packages/next/server/render.tsx#L947-L952\n      renderOpts.nextFontManifest = this.nextFontManifest;\n      if (this.hasAppDir && renderOpts.isAppPath) {\n        return (0, _modulerender.lazyRenderAppPage)(req.originalRequest, res.originalResponse, pathname, query, renderOpts);\n      }\n      // TODO: re-enable this once we've refactored to use implicit matches\n      // throw new Error('Invariant: render should have used routeModule')\n      return (0, _modulerender1.lazyRenderPagesPage)(req.originalRequest, res.originalResponse, pathname, query, renderOpts);\n    }\n  }\n  async imageOptimizer(req, res, paramsResult) {\n    if (process.env.NEXT_MINIMAL) {\n      throw new Error(\"invariant: imageOptimizer should not be called in minimal mode\");\n    } else {\n      const {\n        imageOptimizer\n      } = require(\"./image-optimizer\");\n      return imageOptimizer(req.originalRequest, res.originalResponse, paramsResult, this.nextConfig, this.renderOpts.dev, async (newReq, newRes) => {\n        if (newReq.url === req.url) {\n          throw new Error(`Invariant attempted to optimize _next/image itself`);\n        }\n        const protocol = this.serverOptions.experimentalHttpsServer ? \"https\" : \"http\";\n        const invokeRes = await (0, _invokerequest.invokeRequest)(`${protocol}://${this.fetchHostname || \"localhost\"}:${this.port}${newReq.url || \"\"}`, {\n          method: newReq.method || \"GET\",\n          headers: newReq.headers,\n          signal: (0, _nextrequest.signalFromNodeResponse)(res.originalResponse)\n        });\n        const filteredResHeaders = (0, _utils2.filterReqHeaders)((0, _utils1.toNodeOutgoingHttpHeaders)(invokeRes.headers), _utils2.ipcForbiddenHeaders);\n        for (const key of Object.keys(filteredResHeaders)) {\n          newRes.setHeader(key, filteredResHeaders[key] || \"\");\n        }\n        newRes.statusCode = invokeRes.status || 200;\n        if (invokeRes.body) {\n          await (0, _pipereadable.pipeToNodeResponse)(invokeRes.body, newRes);\n        } else {\n          res.send();\n        }\n        return;\n      });\n    }\n  }\n  getPagePath(pathname, locales) {\n    return (0, _require.getPagePath)(pathname, this.distDir, locales, this.hasAppDir);\n  }\n  async renderPageComponent(ctx, bubbleNoFallback) {\n    const edgeFunctionsPages = this.getEdgeFunctionsPages() || [];\n    if (edgeFunctionsPages.length) {\n      const appPaths = this.getOriginalAppPaths(ctx.pathname);\n      const isAppPath = Array.isArray(appPaths);\n      let page = ctx.pathname;\n      if (isAppPath) {\n        // When it's an array, we need to pass all parallel routes to the loader.\n        page = appPaths[0];\n      }\n      for (const edgeFunctionsPage of edgeFunctionsPages) {\n        if (edgeFunctionsPage === page) {\n          await this.runEdgeFunction({\n            req: ctx.req,\n            res: ctx.res,\n            query: ctx.query,\n            params: ctx.renderOpts.params,\n            page,\n            appPaths\n          });\n          return null;\n        }\n      }\n    }\n    return super.renderPageComponent(ctx, bubbleNoFallback);\n  }\n  async findPageComponents({\n    page,\n    query,\n    params,\n    isAppPath\n  }) {\n    return (0, _tracer.getTracer)().trace(_constants2.NextNodeServerSpan.findPageComponents, {\n      spanName: `resolving page into components`,\n      attributes: {\n        \"next.route\": isAppPath ? (0, _apppaths.normalizeAppPath)(page) : page\n      }\n    }, () => this.findPageComponentsImpl({\n      page,\n      query,\n      params,\n      isAppPath\n    }));\n  }\n  async findPageComponentsImpl({\n    page,\n    query,\n    params,\n    isAppPath\n  }) {\n    const pagePaths = [page];\n    if (query.amp) {\n      // try serving a static AMP version first\n      pagePaths.unshift((isAppPath ? (0, _apppaths.normalizeAppPath)(page) : (0, _normalizepagepath.normalizePagePath)(page)) + \".amp\");\n    }\n    if (query.__nextLocale) {\n      pagePaths.unshift(...pagePaths.map(path => `/${query.__nextLocale}${path === \"/\" ? \"\" : path}`));\n    }\n    for (const pagePath of pagePaths) {\n      try {\n        const components = await (0, _loadcomponents.loadComponents)({\n          distDir: this.distDir,\n          page: pagePath,\n          isAppPath\n        });\n        if (query.__nextLocale && typeof components.Component === \"string\" && !pagePath.startsWith(`/${query.__nextLocale}`)) {\n          continue;\n        }\n        return {\n          components,\n          query: {\n            ...(!this.renderOpts.isExperimentalCompile && components.getStaticProps ? {\n              amp: query.amp,\n              __nextDataReq: query.__nextDataReq,\n              __nextLocale: query.__nextLocale,\n              __nextDefaultLocale: query.__nextDefaultLocale\n            } : query),\n            // For appDir params is excluded.\n            ...((isAppPath ? {} : params) || {})\n          }\n        };\n      } catch (err) {\n        // we should only not throw if we failed to find the page\n        // in the pages-manifest\n        if (!(err instanceof _utils.PageNotFoundError)) {\n          throw err;\n        }\n      }\n    }\n    return null;\n  }\n  getFontManifest() {\n    return (0, _require.requireFontManifest)(this.distDir);\n  }\n  getNextFontManifest() {\n    return (0, _loadmanifest.loadManifest)((0, _path.join)(this.distDir, \"server\", _constants.NEXT_FONT_MANIFEST + \".json\"));\n  }\n  getFallback(page) {\n    page = (0, _normalizepagepath.normalizePagePath)(page);\n    const cacheFs = this.getCacheFilesystem();\n    return cacheFs.readFile((0, _path.join)(this.serverDistDir, \"pages\", `${page}.html`), \"utf8\");\n  }\n  // Used in development only, overloaded in next-dev-server\n  async logErrorWithOriginalStack(_err, _type) {\n    throw new Error(\"Invariant: logErrorWithOriginalStack can only be called on the development server\");\n  }\n  // Used in development only, overloaded in next-dev-server\n  async ensurePage(_opts) {\n    throw new Error(\"Invariant: ensurePage can only be called on the development server\");\n  }\n  /**\n  * Resolves `API` request, in development builds on demand\n  * @param req http request\n  * @param res http response\n  * @param pathname path of request\n  */\n  async handleApiRequest(req, res, query, match) {\n    return this.runApi(req, res, query, match);\n  }\n  getPrefetchRsc(pathname) {\n    return this.getCacheFilesystem().readFile((0, _path.join)(this.serverDistDir, \"app\", `${pathname}.prefetch.rsc`), \"utf8\");\n  }\n  getCacheFilesystem() {\n    return _nodefsmethods.nodeFs;\n  }\n  normalizeReq(req) {\n    return !(req instanceof _node.NodeNextRequest) ? new _node.NodeNextRequest(req) : req;\n  }\n  normalizeRes(res) {\n    return !(res instanceof _node.NodeNextResponse) ? new _node.NodeNextResponse(res) : res;\n  }\n  getRequestHandler() {\n    const handler = this.makeRequestHandler();\n    if (this.serverOptions.experimentalTestProxy) {\n      const {\n        wrapRequestHandlerNode\n      } = require(\"../experimental/testmode/server\");\n      return wrapRequestHandlerNode(handler);\n    }\n    return handler;\n  }\n  makeRequestHandler() {\n    // This is just optimization to fire prepare as soon as possible. It will be\n    // properly awaited later. We add the catch here to ensure that it does not\n    // cause a unhandled promise rejection. The promise rejection wil be\n    // handled later on via the `await` when the request handler is called.\n    this.prepare().catch(err => {\n      console.error(\"Failed to prepare server\", err);\n    });\n    const handler = super.getRequestHandler();\n    return (req, res, parsedUrl) => {\n      var _this_nextConfig_logging;\n      const normalizedReq = this.normalizeReq(req);\n      const normalizedRes = this.normalizeRes(res);\n      const loggingFetchesConfig = (_this_nextConfig_logging = this.nextConfig.logging) == null ? void 0 : _this_nextConfig_logging.fetches;\n      const enabledVerboseLogging = !!loggingFetchesConfig;\n      const shouldTruncateUrl = loggingFetchesConfig == null ? void 0 : loggingFetchesConfig.fullUrl;\n      if (this.renderOpts.dev) {\n        const {\n          bold,\n          green,\n          yellow,\n          red,\n          gray,\n          white\n        } = require(\"../lib/picocolors\");\n        const _req = req;\n        const _res = res;\n        const origReq = \"originalRequest\" in _req ? _req.originalRequest : _req;\n        const origRes = \"originalResponse\" in _res ? _res.originalResponse : _res;\n        const reqStart = Date.now();\n        const reqCallback = () => {\n          // if we already logged in a render worker\n          // don't log again in the router worker.\n          // we also don't log for middleware alone\n          if (normalizedReq.didInvokePath || origReq.headers[\"x-middleware-invoke\"]) {\n            return;\n          }\n          const reqEnd = Date.now();\n          const fetchMetrics = normalizedReq.fetchMetrics || [];\n          const reqDuration = reqEnd - reqStart;\n          const getDurationStr = duration => {\n            let durationStr = duration.toString();\n            if (duration < 500) {\n              durationStr = green(duration + \"ms\");\n            } else if (duration < 2000) {\n              durationStr = yellow(duration + \"ms\");\n            } else {\n              durationStr = red(duration + \"ms\");\n            }\n            return durationStr;\n          };\n          if (Array.isArray(fetchMetrics) && fetchMetrics.length) {\n            if (enabledVerboseLogging) {\n              writeStdoutLine(`${white(bold(req.method || \"GET\"))} ${req.url} ${res.statusCode} in ${getDurationStr(reqDuration)}`);\n            }\n            const calcNestedLevel = (prevMetrics, start) => {\n              let nestedLevel = 0;\n              for (let i = 0; i < prevMetrics.length; i++) {\n                const metric = prevMetrics[i];\n                const prevMetric = prevMetrics[i - 1];\n                if (metric.end <= start && !(prevMetric && prevMetric.start < metric.end)) {\n                  nestedLevel += 1;\n                }\n              }\n              return `${\"  │ \".repeat(nestedLevel)}`;\n            };\n            for (let i = 0; i < fetchMetrics.length; i++) {\n              const metric = fetchMetrics[i];\n              let {\n                cacheStatus,\n                cacheReason\n              } = metric;\n              let cacheReasonStr = \"\";\n              const duration = metric.end - metric.start;\n              if (cacheStatus === \"hit\") {\n                cacheStatus = green(\"HIT\");\n              } else if (cacheStatus === \"skip\") {\n                cacheStatus = `${yellow(\"SKIP\")}`;\n                cacheReasonStr = `${gray(`Cache missed reason: (${white(cacheReason)})`)}`;\n              } else {\n                cacheStatus = yellow(\"MISS\");\n              }\n              let url = metric.url;\n              if (url.length > 48) {\n                const parsed = new URL(url);\n                const truncatedHost = formatRequestUrl(parsed.host, shouldTruncateUrl ? 16 : undefined);\n                const truncatedPath = formatRequestUrl(parsed.pathname, shouldTruncateUrl ? 24 : undefined);\n                const truncatedSearch = formatRequestUrl(parsed.search, shouldTruncateUrl ? 16 : undefined);\n                url = parsed.protocol + \"//\" + truncatedHost + truncatedPath + truncatedSearch;\n              }\n              if (enabledVerboseLogging) {\n                const newLineLeadingChar = \"│\";\n                const nestedIndent = calcNestedLevel(fetchMetrics.slice(0, i), metric.start);\n                writeStdoutLine(`${`${newLineLeadingChar}${nestedIndent}${i === 0 ? \" \" : \"\"}${white(bold(metric.method))} ${gray(url)} ${metric.status} in ${getDurationStr(duration)} (cache: ${cacheStatus})`}`);\n                if (cacheReasonStr) {\n                  const nextNestedIndent = calcNestedLevel(fetchMetrics.slice(0, i + 1), metric.start);\n                  writeStdoutLine(newLineLeadingChar + nextNestedIndent + (i > 0 ? \" \" : \"  \") + newLineLeadingChar + \"  \" + cacheReasonStr);\n                }\n              }\n            }\n          } else {\n            if (enabledVerboseLogging) {\n              writeStdoutLine(`${white(bold(req.method || \"GET\"))} ${req.url} ${res.statusCode} in ${getDurationStr(reqDuration)}`);\n            }\n          }\n          origRes.off(\"close\", reqCallback);\n        };\n        origRes.on(\"close\", reqCallback);\n      }\n      return handler(normalizedReq, normalizedRes, parsedUrl);\n    };\n  }\n  async revalidate({\n    urlPath,\n    revalidateHeaders,\n    opts\n  }) {\n    const mocked = (0, _mockrequest.createRequestResponseMocks)({\n      url: urlPath,\n      headers: revalidateHeaders\n    });\n    const handler = this.getRequestHandler();\n    await handler(new _node.NodeNextRequest(mocked.req), new _node.NodeNextResponse(mocked.res));\n    await mocked.res.hasStreamed;\n    if (mocked.res.getHeader(\"x-nextjs-cache\") !== \"REVALIDATED\" && !(mocked.res.statusCode === 404 && opts.unstable_onlyGenerated)) {\n      throw new Error(`Invalid response ${mocked.res.statusCode}`);\n    }\n  }\n  async render(req, res, pathname, query, parsedUrl, internal = false) {\n    return super.render(this.normalizeReq(req), this.normalizeRes(res), pathname, query, parsedUrl, internal);\n  }\n  async renderToHTML(req, res, pathname, query) {\n    return super.renderToHTML(this.normalizeReq(req), this.normalizeRes(res), pathname, query);\n  }\n  async renderErrorToResponseImpl(ctx, err) {\n    const {\n      req,\n      res,\n      query\n    } = ctx;\n    const is404 = res.statusCode === 404;\n    if (is404 && this.hasAppDir) {\n      const notFoundPathname = this.renderOpts.dev ? \"/not-found\" : \"/_not-found\";\n      if (this.renderOpts.dev) {\n        await this.ensurePage({\n          page: notFoundPathname,\n          clientOnly: false\n        }).catch(() => {});\n      }\n      if (this.getEdgeFunctionsPages().includes(notFoundPathname)) {\n        await this.runEdgeFunction({\n          req: req,\n          res: res,\n          query: query || {},\n          params: {},\n          page: notFoundPathname,\n          appPaths: null\n        });\n        return null;\n      }\n    }\n    return super.renderErrorToResponseImpl(ctx, err);\n  }\n  async renderError(err, req, res, pathname, query, setHeaders) {\n    return super.renderError(err, this.normalizeReq(req), this.normalizeRes(res), pathname, query, setHeaders);\n  }\n  async renderErrorToHTML(err, req, res, pathname, query) {\n    return super.renderErrorToHTML(err, this.normalizeReq(req), this.normalizeRes(res), pathname, query);\n  }\n  async render404(req, res, parsedUrl, setHeaders) {\n    return super.render404(this.normalizeReq(req), this.normalizeRes(res), parsedUrl, setHeaders);\n  }\n  getMiddlewareManifest() {\n    if (this.minimalMode) return null;\n    const manifest = require(this.middlewareManifestPath);\n    return manifest;\n  }\n  /** Returns the middleware routing item if there is one. */\n  getMiddleware() {\n    var _manifest_middleware;\n    const manifest = this.getMiddlewareManifest();\n    const middleware = manifest == null ? void 0 : (_manifest_middleware = manifest.middleware) == null ? void 0 : _manifest_middleware[\"/\"];\n    if (!middleware) {\n      return;\n    }\n    return {\n      match: getMiddlewareMatcher(middleware),\n      page: \"/\"\n    };\n  }\n  getEdgeFunctionsPages() {\n    const manifest = this.getMiddlewareManifest();\n    if (!manifest) {\n      return [];\n    }\n    return Object.keys(manifest.functions);\n  }\n  /**\n  * Get information for the edge function located in the provided page\n  * folder. If the edge function info can't be found it will throw\n  * an error.\n  */\n  getEdgeFunctionInfo(params) {\n    const manifest = this.getMiddlewareManifest();\n    if (!manifest) {\n      return null;\n    }\n    let foundPage;\n    try {\n      foundPage = (0, _denormalizepagepath.denormalizePagePath)((0, _normalizepagepath.normalizePagePath)(params.page));\n    } catch (err) {\n      return null;\n    }\n    let pageInfo = params.middleware ? manifest.middleware[foundPage] : manifest.functions[foundPage];\n    if (!pageInfo) {\n      if (!params.middleware) {\n        throw new _utils.PageNotFoundError(foundPage);\n      }\n      return null;\n    }\n    return {\n      name: pageInfo.name,\n      paths: pageInfo.files.map(file => (0, _path.join)(this.distDir, file)),\n      wasm: (pageInfo.wasm ?? []).map(binding => ({\n        ...binding,\n        filePath: (0, _path.join)(this.distDir, binding.filePath)\n      })),\n      assets: (pageInfo.assets ?? []).map(binding => {\n        return {\n          ...binding,\n          filePath: (0, _path.join)(this.distDir, binding.filePath)\n        };\n      })\n    };\n  }\n  /**\n  * Checks if a middleware exists. This method is useful for the development\n  * server where we need to check the filesystem. Here we just check the\n  * middleware manifest.\n  */\n  async hasMiddleware(pathname) {\n    const info = this.getEdgeFunctionInfo({\n      page: pathname,\n      middleware: true\n    });\n    return Boolean(info && info.paths.length > 0);\n  }\n  /**\n  * A placeholder for a function to be defined in the development server.\n  * It will make sure that the root middleware or an edge function has been compiled\n  * so that we can run it.\n  */\n  async ensureMiddleware() {}\n  async ensureEdgeFunction(_params) {}\n  /**\n  * This method gets all middleware matchers and execute them when the request\n  * matches. It will make sure that each middleware exists and is compiled and\n  * ready to be invoked. The development server will decorate it to add warns\n  * and errors with rich traces.\n  */\n  async runMiddleware(params) {\n    if (process.env.NEXT_MINIMAL) {\n      throw new Error(\"invariant: runMiddleware should not be called in minimal mode\");\n    }\n    // Middleware is skipped for on-demand revalidate requests\n    if ((0, _apiutils.checkIsOnDemandRevalidate)(params.request, this.renderOpts.previewProps).isOnDemandRevalidate) {\n      return {\n        response: new Response(null, {\n          headers: {\n            \"x-middleware-next\": \"1\"\n          }\n        })\n      };\n    }\n    let url;\n    if (this.nextConfig.skipMiddlewareUrlNormalize) {\n      url = (0, _requestmeta.getRequestMeta)(params.request, \"initURL\");\n    } else {\n      // For middleware to \"fetch\" we must always provide an absolute URL\n      const query = (0, _querystring.urlQueryToSearchParams)(params.parsed.query).toString();\n      const locale = params.parsed.query.__nextLocale;\n      url = `${(0, _requestmeta.getRequestMeta)(params.request, \"initProtocol\")}://${this.fetchHostname || \"localhost\"}:${this.port}${locale ? `/${locale}` : \"\"}${params.parsed.pathname}${query ? `?${query}` : \"\"}`;\n    }\n    if (!url.startsWith(\"http\")) {\n      throw new Error(\"To use middleware you must provide a `hostname` and `port` to the Next.js Server\");\n    }\n    const page = {};\n    const middleware = this.getMiddleware();\n    if (!middleware) {\n      return {\n        finished: false\n      };\n    }\n    if (!(await this.hasMiddleware(middleware.page))) {\n      return {\n        finished: false\n      };\n    }\n    await this.ensureMiddleware();\n    const middlewareInfo = this.getEdgeFunctionInfo({\n      page: middleware.page,\n      middleware: true\n    });\n    if (!middlewareInfo) {\n      throw new _utils.MiddlewareNotFoundError();\n    }\n    const method = (params.request.method || \"GET\").toUpperCase();\n    const {\n      run\n    } = require(\"./web/sandbox\");\n    const result = await run({\n      distDir: this.distDir,\n      name: middlewareInfo.name,\n      paths: middlewareInfo.paths,\n      edgeFunctionEntry: middlewareInfo,\n      request: {\n        headers: params.request.headers,\n        method,\n        nextConfig: {\n          basePath: this.nextConfig.basePath,\n          i18n: this.nextConfig.i18n,\n          trailingSlash: this.nextConfig.trailingSlash\n        },\n        url: url,\n        page,\n        body: (0, _requestmeta.getRequestMeta)(params.request, \"clonableBody\"),\n        signal: (0, _nextrequest.signalFromNodeResponse)(params.response.originalResponse)\n      },\n      useCache: true,\n      onWarning: params.onWarning\n    });\n    if (!this.renderOpts.dev) {\n      result.waitUntil.catch(error => {\n        console.error(`Uncaught: middleware waitUntil errored`, error);\n      });\n    }\n    if (!result) {\n      this.render404(params.request, params.response, params.parsed);\n      return {\n        finished: true\n      };\n    }\n    for (let [key, value] of result.response.headers) {\n      if (key.toLowerCase() !== \"set-cookie\") continue;\n      // Clear existing header.\n      result.response.headers.delete(key);\n      // Append each cookie individually.\n      const cookies = (0, _utils1.splitCookiesString)(value);\n      for (const cookie of cookies) {\n        result.response.headers.append(key, cookie);\n      }\n      // Add cookies to request meta.\n      (0, _requestmeta.addRequestMeta)(params.request, \"middlewareCookie\", cookies);\n    }\n    return result;\n  }\n  getPrerenderManifest() {\n    var _this_renderOpts, _this_serverOptions;\n    if (this._cachedPreviewManifest) {\n      return this._cachedPreviewManifest;\n    }\n    if (((_this_renderOpts = this.renderOpts) == null ? void 0 : _this_renderOpts.dev) || ((_this_serverOptions = this.serverOptions) == null ? void 0 : _this_serverOptions.dev) || process.env.NODE_ENV === \"development\" || process.env.NEXT_PHASE === _constants.PHASE_PRODUCTION_BUILD) {\n      this._cachedPreviewManifest = {\n        version: 4,\n        routes: {},\n        dynamicRoutes: {},\n        notFoundRoutes: [],\n        preview: {\n          previewModeId: require(\"crypto\").randomBytes(16).toString(\"hex\"),\n          previewModeSigningKey: require(\"crypto\").randomBytes(32).toString(\"hex\"),\n          previewModeEncryptionKey: require(\"crypto\").randomBytes(32).toString(\"hex\")\n        }\n      };\n      return this._cachedPreviewManifest;\n    }\n    const manifest = (0, _loadmanifest.loadManifest)((0, _path.join)(this.distDir, _constants.PRERENDER_MANIFEST));\n    return this._cachedPreviewManifest = manifest;\n  }\n  getRoutesManifest() {\n    return (0, _tracer.getTracer)().trace(_constants2.NextNodeServerSpan.getRoutesManifest, () => {\n      const manifest = (0, _loadmanifest.loadManifest)((0, _path.join)(this.distDir, _constants.ROUTES_MANIFEST));\n      let rewrites = manifest.rewrites ?? {\n        beforeFiles: [],\n        afterFiles: [],\n        fallback: []\n      };\n      if (Array.isArray(rewrites)) {\n        rewrites = {\n          beforeFiles: [],\n          afterFiles: rewrites,\n          fallback: []\n        };\n      }\n      return {\n        ...manifest,\n        rewrites\n      };\n    });\n  }\n  attachRequestMeta(req, parsedUrl, isUpgradeReq) {\n    var _this, _req_originalRequest, _req_headers_xforwardedproto;\n    const protocol = ((_this = (_req_originalRequest = req.originalRequest) == null ? void 0 : _req_originalRequest.socket) == null ? void 0 : _this.encrypted) || ((_req_headers_xforwardedproto = req.headers[\"x-forwarded-proto\"]) == null ? void 0 : _req_headers_xforwardedproto.includes(\"https\")) ? \"https\" : \"http\";\n    // When there are hostname and port we build an absolute URL\n    const initUrl = this.fetchHostname && this.port ? `${protocol}://${this.fetchHostname}:${this.port}${req.url}` : this.nextConfig.experimental.trustHostHeader ? `https://${req.headers.host || \"localhost\"}${req.url}` : req.url;\n    (0, _requestmeta.addRequestMeta)(req, \"initURL\", initUrl);\n    (0, _requestmeta.addRequestMeta)(req, \"initQuery\", {\n      ...parsedUrl.query\n    });\n    (0, _requestmeta.addRequestMeta)(req, \"initProtocol\", protocol);\n    if (!isUpgradeReq) {\n      (0, _requestmeta.addRequestMeta)(req, \"clonableBody\", (0, _bodystreams.getCloneableBody)(req.body));\n    }\n  }\n  async runEdgeFunction(params) {\n    if (process.env.NEXT_MINIMAL) {\n      throw new Error(\"Middleware is not supported in minimal mode. Please remove the `NEXT_MINIMAL` environment variable.\");\n    }\n    let edgeInfo;\n    const {\n      query,\n      page,\n      match\n    } = params;\n    if (!match) await this.ensureEdgeFunction({\n      page,\n      appPaths: params.appPaths\n    });\n    edgeInfo = this.getEdgeFunctionInfo({\n      page,\n      middleware: false\n    });\n    if (!edgeInfo) {\n      return null;\n    }\n    // For edge to \"fetch\" we must always provide an absolute URL\n    const isDataReq = !!query.__nextDataReq;\n    const initialUrl = new URL((0, _requestmeta.getRequestMeta)(params.req, \"initURL\") || \"/\", \"http://n\");\n    const queryString = (0, _querystring.urlQueryToSearchParams)({\n      ...Object.fromEntries(initialUrl.searchParams),\n      ...query,\n      ...params.params\n    }).toString();\n    if (isDataReq) {\n      params.req.headers[\"x-nextjs-data\"] = \"1\";\n    }\n    initialUrl.search = queryString;\n    const url = initialUrl.toString();\n    if (!url.startsWith(\"http\")) {\n      throw new Error(\"To use middleware you must provide a `hostname` and `port` to the Next.js Server\");\n    }\n    const {\n      run\n    } = require(\"./web/sandbox\");\n    const result = await run({\n      distDir: this.distDir,\n      name: edgeInfo.name,\n      paths: edgeInfo.paths,\n      edgeFunctionEntry: edgeInfo,\n      request: {\n        headers: params.req.headers,\n        method: params.req.method,\n        nextConfig: {\n          basePath: this.nextConfig.basePath,\n          i18n: this.nextConfig.i18n,\n          trailingSlash: this.nextConfig.trailingSlash\n        },\n        url,\n        page: {\n          name: params.page,\n          ...(params.params && {\n            params: params.params\n          })\n        },\n        body: (0, _requestmeta.getRequestMeta)(params.req, \"clonableBody\"),\n        signal: (0, _nextrequest.signalFromNodeResponse)(params.res.originalResponse)\n      },\n      useCache: true,\n      onWarning: params.onWarning,\n      incrementalCache: globalThis.__incrementalCache || (0, _requestmeta.getRequestMeta)(params.req, \"incrementalCache\")\n    });\n    if (result.fetchMetrics) {\n      params.req.fetchMetrics = result.fetchMetrics;\n    }\n    if (!params.res.statusCode || params.res.statusCode < 400) {\n      params.res.statusCode = result.response.status;\n      params.res.statusMessage = result.response.statusText;\n    }\n    // TODO: (wyattjoh) investigate improving this\n    result.response.headers.forEach((value, key) => {\n      // The append handling is special cased for `set-cookie`.\n      if (key.toLowerCase() === \"set-cookie\") {\n        // TODO: (wyattjoh) replace with native response iteration when we can upgrade undici\n        for (const cookie of (0, _utils1.splitCookiesString)(value)) {\n          params.res.appendHeader(key, cookie);\n        }\n      } else {\n        params.res.appendHeader(key, value);\n      }\n    });\n    const nodeResStream = params.res.originalResponse;\n    if (result.response.body) {\n      await (0, _pipereadable.pipeToNodeResponse)(result.response.body, nodeResStream);\n    } else {\n      nodeResStream.end();\n    }\n    return result;\n  }\n  get serverDistDir() {\n    if (this._serverDistDir) {\n      return this._serverDistDir;\n    }\n    const serverDistDir = (0, _path.join)(this.distDir, _constants.SERVER_DIRECTORY);\n    this._serverDistDir = serverDistDir;\n    return serverDistDir;\n  }\n  async getFallbackErrorComponents() {\n    // Not implemented for production use cases, this is implemented on the\n    // development server.\n    return null;\n  }\n}","map":{"version":3,"names":["NextNodeServer","exports","dynamicRequire","process","env","NEXT_MINIMAL","__non_webpack_require__","require","writeStdoutLine","text","stdout","write","formatRequestUrl","url","maxLength","undefined","length","substring","MiddlewareMatcherCache","WeakMap","getMiddlewareMatcher","info","stored","get","Array","isArray","matchers","Error","JSON","stringify","matcher","_middlewareroutematcher","getMiddlewareRouteMatcher","set","_baseserver","default","constructor","options","handleNextImageRequest","req","res","parsedUrl","pathname","startsWith","minimalMode","nextConfig","output","statusCode","body","send","ImageOptimizerCache","imageOptimizerCache","distDir","getHash","sendResponse","ImageError","imageResponseCache","imagesConfig","images","loader","unoptimized","render404","paramsResult","validateParams","originalRequest","query","renderOpts","dev","errorMessage","cacheKey","getCacheKey","_cacheEntry_value","getExtension","cacheEntry","buffer","contentType","maxAge","imageOptimizer","etag","value","kind","extension","revalidate","incrementalCache","originalResponse","href","isStatic","isMiss","isStale","Boolean","err","message","handleCatchallRenderRequest","_nextBubbleNoFallback","_this_i18nProvider","_removetrailingslash","removeTrailingSlash","i18n","i18nProvider","fromQuery","match","render","_requestmeta","addRequestMeta","edgeFunctionsPages","getEdgeFunctionsPages","edgeFunctionsPage","definition","page","_approuterheaders","NEXT_RSC_UNION_QUERY","handled","runEdgeFunction","params","appPaths","_pagesapiroutematch","isPagesAPIRouteMatch","handleApiRequest","NoFallbackError","formatServerError","logErrorWithOriginalStack","logError","renderError","handleCatchallMiddlewareRequest","parsed","isMiddlewareInvoke","headers","handleFinished","setHeader","middleware","getMiddleware","initUrl","getRequestMeta","_parseurl","parseUrl","pathnameInfo","_getnextpathnameinfo","getNextPathnameInfo","normalizedPathname","result","bubblingResult","key","_constants","INTERNAL_HEADERS","stripInternalHeaders","ensureMiddleware","runMiddleware","request","response","bubble","Object","entries","_utils1","toNodeOutgoingHttpHeaders","status","_pipereadable","pipeToNodeResponse","end","_iserror","code","_utils","DecodeError","error","getProperError","console","finished","optimizeFonts","__NEXT_OPTIMIZE_FONTS","optimizeCss","__NEXT_OPTIMIZE_CSS","nextScriptWorkers","__NEXT_SCRIPT_WORKERS","NEXT_DEPLOYMENT_ID","experimental","deploymentId","_responsecache","appDocumentPreloading","isDefaultEnabled","_loadcomponents","loadComponents","isAppPath","catch","dynamicRoutes","getRoutesManifest","map","r","regex","_routeregex","getRouteRegex","_routematcher","getRouteMatcher","re","_setuphttpagentenv","setHttpClientAndAgentOptions","serverOptions","experimentalTestProxy","interceptTestApis","middlewareManifestPath","_path","join","serverDistDir","MIDDLEWARE_MANIFEST","handleUpgrade","prepareImpl","instrumentationHook","resolve","dir","conf","_constants1","INSTRUMENTATION_HOOK_FILENAME","register","call","loadEnvConfig","forceReload","silent","_env","_log","getIncrementalCache","requestHeaders","requestProtocol","CacheHandler","incrementalCacheHandlerPath","isAbsolute","_incrementalcache","IncrementalCache","fs","getCacheFilesystem","appDir","hasAppDir","allowedRevalidateHeaderKeys","fetchCache","fetchCacheKeyPrefix","maxMemoryCacheSize","isrMemoryCacheSize","flushToDisk","isrFlushToDisk","getPrerenderManifest","CurCacheHandler","getResponseCache","getPublicDir","CLIENT_PUBLIC_FILES_PATH","getHasStaticDir","_fs","existsSync","getPagesManifest","_loadmanifest","loadManifest","PAGES_MANIFEST","getAppPathsManifest","APP_PATHS_MANIFEST","hasPage","_this_nextConfig_i18n","_require","getMaybePagePath","locales","getBuildId","buildIdFile","BUILD_ID_FILE","readFileSync","trim","getHasAppDir","_findpagesdir","findDir","sendRenderResult","_sendpayload","type","generateEtags","poweredByHeader","runApi","handledAsEdgeFunction","module","_routemoduleloader","RouteModuleLoader","load","filename","__nextLocale","__nextDefaultLocale","__nextInferredLocaleFromDefault","previewProps","bind","trustHostHeader","hostname","fetchHostname","renderHTML","_tracer","getTracer","trace","_constants2","NextNodeServerSpan","renderHTMLImpl","nextFontManifest","_modulerender","lazyRenderAppPage","_modulerender1","lazyRenderPagesPage","newReq","newRes","protocol","experimentalHttpsServer","invokeRes","_invokerequest","invokeRequest","port","method","signal","_nextrequest","signalFromNodeResponse","filteredResHeaders","_utils2","filterReqHeaders","ipcForbiddenHeaders","keys","getPagePath","renderPageComponent","ctx","bubbleNoFallback","getOriginalAppPaths","findPageComponents","spanName","attributes","_apppaths","normalizeAppPath","findPageComponentsImpl","pagePaths","amp","unshift","_normalizepagepath","normalizePagePath","path","pagePath","components","Component","isExperimentalCompile","getStaticProps","__nextDataReq","PageNotFoundError","getFontManifest","requireFontManifest","getNextFontManifest","NEXT_FONT_MANIFEST","getFallback","cacheFs","readFile","_err","_type","ensurePage","_opts","getPrefetchRsc","_nodefsmethods","nodeFs","normalizeReq","_node","NodeNextRequest","normalizeRes","NodeNextResponse","getRequestHandler","handler","makeRequestHandler","wrapRequestHandlerNode","prepare","_this_nextConfig_logging","normalizedReq","normalizedRes","loggingFetchesConfig","logging","fetches","enabledVerboseLogging","shouldTruncateUrl","fullUrl","bold","green","yellow","red","gray","white","_req","_res","origReq","origRes","reqStart","Date","now","reqCallback","didInvokePath","reqEnd","fetchMetrics","reqDuration","getDurationStr","duration","durationStr","toString","calcNestedLevel","prevMetrics","start","nestedLevel","i","metric","prevMetric","repeat","cacheStatus","cacheReason","cacheReasonStr","URL","truncatedHost","host","truncatedPath","truncatedSearch","search","newLineLeadingChar","nestedIndent","slice","nextNestedIndent","off","on","urlPath","revalidateHeaders","opts","mocked","_mockrequest","createRequestResponseMocks","hasStreamed","getHeader","unstable_onlyGenerated","internal","renderToHTML","renderErrorToResponseImpl","is404","notFoundPathname","clientOnly","includes","setHeaders","renderErrorToHTML","getMiddlewareManifest","manifest","_manifest_middleware","functions","getEdgeFunctionInfo","foundPage","_denormalizepagepath","denormalizePagePath","pageInfo","name","paths","files","file","wasm","binding","filePath","assets","hasMiddleware","ensureEdgeFunction","_params","_apiutils","checkIsOnDemandRevalidate","isOnDemandRevalidate","Response","skipMiddlewareUrlNormalize","_querystring","urlQueryToSearchParams","locale","middlewareInfo","MiddlewareNotFoundError","toUpperCase","run","edgeFunctionEntry","basePath","trailingSlash","useCache","onWarning","waitUntil","toLowerCase","delete","cookies","splitCookiesString","cookie","append","_this_renderOpts","_this_serverOptions","_cachedPreviewManifest","NODE_ENV","NEXT_PHASE","PHASE_PRODUCTION_BUILD","version","routes","notFoundRoutes","preview","previewModeId","randomBytes","previewModeSigningKey","previewModeEncryptionKey","PRERENDER_MANIFEST","ROUTES_MANIFEST","rewrites","beforeFiles","afterFiles","fallback","attachRequestMeta","isUpgradeReq","_this","_req_originalRequest","_req_headers_xforwardedproto","socket","encrypted","_bodystreams","getCloneableBody","edgeInfo","isDataReq","initialUrl","queryString","fromEntries","searchParams","globalThis","__incrementalCache","statusMessage","statusText","forEach","appendHeader","nodeResStream","_serverDistDir","SERVER_DIRECTORY","getFallbackErrorComponents"],"sources":["../../src/server/next-server.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}