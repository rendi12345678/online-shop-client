{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n0 && (module.exports = {\n  getObjectClassLabel: null,\n  isPlainObject: null\n});\nfunction _export(target, all) {\n  for (var name in all) Object.defineProperty(target, name, {\n    enumerable: true,\n    get: all[name]\n  });\n}\n_export(exports, {\n  getObjectClassLabel: function () {\n    return getObjectClassLabel;\n  },\n  isPlainObject: function () {\n    return isPlainObject;\n  }\n});\nfunction getObjectClassLabel(value) {\n  return Object.prototype.toString.call(value);\n}\nfunction isPlainObject(value) {\n  if (getObjectClassLabel(value) !== \"[object Object]\") {\n    return false;\n  }\n  const prototype = Object.getPrototypeOf(value);\n  /**\n  * this used to be previously:\n  *\n  * `return prototype === null || prototype === Object.prototype`\n  *\n  * but Edge Runtime expose Object from vm, being that kind of type-checking wrongly fail.\n  *\n  * It was changed to the current implementation since it's resilient to serialization.\n  */\n  return prototype === null || prototype.hasOwnProperty(\"isPrototypeOf\");\n}","map":{"version":3,"names":["getObjectClassLabel","isPlainObject","value","Object","prototype","toString","call","getPrototypeOf","hasOwnProperty"],"sources":["../../../src/shared/lib/is-plain-object.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;EAAgBA,mBAAmB,WAAAA,CAAA;WAAnBA,mBAAA;;EAIAC,aAAa,WAAAA,CAAA;WAAbA,aAAA;;;AAJT,SAASD,oBAAoBE,KAAU;EAC5C,OAAOC,MAAA,CAAOC,SAAS,CAACC,QAAQ,CAACC,IAAI,CAACJ,KAAA;AACxC;AAEO,SAASD,cAAcC,KAAU;EACtC,IAAIF,mBAAA,CAAoBE,KAAA,MAAW,mBAAmB;IACpD,OAAO;EACT;EAEA,MAAME,SAAA,GAAYD,MAAA,CAAOI,cAAc,CAACL,KAAA;EAExC;;;;;;;;;EASA,OAAOE,SAAA,KAAc,QAAQA,SAAA,CAAUI,cAAc,CAAC;AACxD"},"metadata":{},"sourceType":"script","externalDependencies":[]}