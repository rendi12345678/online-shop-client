{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n0 && (module.exports = {\n  buildCustomRoute: null,\n  setupFsCheck: null\n});\nfunction _export(target, all) {\n  for (var name in all) Object.defineProperty(target, name, {\n    enumerable: true,\n    get: all[name]\n  });\n}\n_export(exports, {\n  buildCustomRoute: function () {\n    return buildCustomRoute;\n  },\n  setupFsCheck: function () {\n    return setupFsCheck;\n  }\n});\nconst _path = /*#__PURE__*/_interop_require_default(require(\"path\"));\nconst _promises = /*#__PURE__*/_interop_require_default(require(\"fs/promises\"));\nconst _log = /*#__PURE__*/_interop_require_wildcard(require(\"../../../build/output/log\"));\nconst _debug = /*#__PURE__*/_interop_require_default(require(\"next/dist/compiled/debug\"));\nconst _lrucache = /*#__PURE__*/_interop_require_default(require(\"next/dist/compiled/lru-cache\"));\nconst _loadcustomroutes = /*#__PURE__*/_interop_require_default(require(\"../../../lib/load-custom-routes\"));\nconst _redirectstatus = require(\"../../../lib/redirect-status\");\nconst _fileexists = require(\"../../../lib/file-exists\");\nconst _recursivereaddir = require(\"../../../lib/recursive-readdir\");\nconst _utils = require(\"../../../shared/lib/router/utils\");\nconst _escaperegexp = require(\"../../../shared/lib/escape-regexp\");\nconst _pathmatch = require(\"../../../shared/lib/router/utils/path-match\");\nconst _routeregex = require(\"../../../shared/lib/router/utils/route-regex\");\nconst _routematcher = require(\"../../../shared/lib/router/utils/route-matcher\");\nconst _pathhasprefix = require(\"../../../shared/lib/router/utils/path-has-prefix\");\nconst _normalizelocalepath = require(\"../../../shared/lib/i18n/normalize-locale-path\");\nconst _removepathprefix = require(\"../../../shared/lib/router/utils/remove-path-prefix\");\nconst _middlewareroutematcher = require(\"../../../shared/lib/router/utils/middleware-route-matcher\");\nconst _constants = require(\"../../../shared/lib/constants\");\nconst _normalizepathsep = require(\"../../../shared/lib/page-path/normalize-path-sep\");\nconst _getmetadataroute = require(\"../../../lib/metadata/get-metadata-route\");\nconst _rsc = require(\"../../future/normalizers/request/rsc\");\nconst _postponed = require(\"../../future/normalizers/request/postponed\");\nfunction _interop_require_default(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interop_require_wildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nconst debug = (0, _debug.default)(\"next:router-server:filesystem\");\nconst buildCustomRoute = (type, item, basePath, caseSensitive) => {\n  const restrictedRedirectPaths = [\"/_next\"].map(p => basePath ? `${basePath}${p}` : p);\n  const match = (0, _pathmatch.getPathMatch)(item.source, {\n    strict: true,\n    removeUnnamedParams: true,\n    regexModifier: !item.internal ? regex => (0, _redirectstatus.modifyRouteRegex)(regex, type === \"redirect\" ? restrictedRedirectPaths : undefined) : undefined,\n    sensitive: caseSensitive\n  });\n  return {\n    ...item,\n    ...(type === \"rewrite\" ? {\n      check: true\n    } : {}),\n    match\n  };\n};\nasync function setupFsCheck(opts) {\n  const getItemsLru = !opts.dev ? new _lrucache.default({\n    max: 1024 * 1024,\n    length(value, key) {\n      if (!value) return (key == null ? void 0 : key.length) || 0;\n      return (key || \"\").length + (value.fsPath || \"\").length + value.itemPath.length + value.type.length;\n    }\n  }) : undefined;\n  // routes that have _next/data endpoints (SSG/SSP)\n  const nextDataRoutes = new Set();\n  const publicFolderItems = new Set();\n  const nextStaticFolderItems = new Set();\n  const legacyStaticFolderItems = new Set();\n  const appFiles = new Set();\n  const pageFiles = new Set();\n  let dynamicRoutes = [];\n  let middlewareMatcher = () => false;\n  const distDir = _path.default.join(opts.dir, opts.config.distDir);\n  const publicFolderPath = _path.default.join(opts.dir, \"public\");\n  const nextStaticFolderPath = _path.default.join(distDir, \"static\");\n  const legacyStaticFolderPath = _path.default.join(opts.dir, \"static\");\n  let customRoutes = {\n    redirects: [],\n    rewrites: {\n      beforeFiles: [],\n      afterFiles: [],\n      fallback: []\n    },\n    headers: []\n  };\n  let buildId = \"development\";\n  let prerenderManifest;\n  if (!opts.dev) {\n    var _middlewareManifest_middleware_, _middlewareManifest_middleware;\n    const buildIdPath = _path.default.join(opts.dir, opts.config.distDir, _constants.BUILD_ID_FILE);\n    buildId = await _promises.default.readFile(buildIdPath, \"utf8\");\n    try {\n      for (const file of await (0, _recursivereaddir.recursiveReadDir)(publicFolderPath)) {\n        // Ensure filename is encoded and normalized.\n        publicFolderItems.add(encodeURI((0, _normalizepathsep.normalizePathSep)(file)));\n      }\n    } catch (err) {\n      if (err.code !== \"ENOENT\") {\n        throw err;\n      }\n    }\n    try {\n      for (const file of await (0, _recursivereaddir.recursiveReadDir)(legacyStaticFolderPath)) {\n        // Ensure filename is encoded and normalized.\n        legacyStaticFolderItems.add(encodeURI((0, _normalizepathsep.normalizePathSep)(file)));\n      }\n      _log.warn(`The static directory has been deprecated in favor of the public directory. https://nextjs.org/docs/messages/static-dir-deprecated`);\n    } catch (err) {\n      if (err.code !== \"ENOENT\") {\n        throw err;\n      }\n    }\n    try {\n      for (const file of await (0, _recursivereaddir.recursiveReadDir)(nextStaticFolderPath)) {\n        // Ensure filename is encoded and normalized.\n        nextStaticFolderItems.add(_path.default.posix.join(\"/_next/static\", encodeURI((0, _normalizepathsep.normalizePathSep)(file))));\n      }\n    } catch (err) {\n      if (opts.config.output !== \"standalone\") throw err;\n    }\n    const routesManifestPath = _path.default.join(distDir, _constants.ROUTES_MANIFEST);\n    const prerenderManifestPath = _path.default.join(distDir, _constants.PRERENDER_MANIFEST);\n    const middlewareManifestPath = _path.default.join(distDir, \"server\", _constants.MIDDLEWARE_MANIFEST);\n    const pagesManifestPath = _path.default.join(distDir, \"server\", _constants.PAGES_MANIFEST);\n    const appRoutesManifestPath = _path.default.join(distDir, _constants.APP_PATH_ROUTES_MANIFEST);\n    const routesManifest = JSON.parse(await _promises.default.readFile(routesManifestPath, \"utf8\"));\n    prerenderManifest = JSON.parse(await _promises.default.readFile(prerenderManifestPath, \"utf8\"));\n    const middlewareManifest = JSON.parse(await _promises.default.readFile(middlewareManifestPath, \"utf8\").catch(() => \"{}\"));\n    const pagesManifest = JSON.parse(await _promises.default.readFile(pagesManifestPath, \"utf8\"));\n    const appRoutesManifest = JSON.parse(await _promises.default.readFile(appRoutesManifestPath, \"utf8\").catch(() => \"{}\"));\n    for (const key of Object.keys(pagesManifest)) {\n      // ensure the non-locale version is in the set\n      if (opts.config.i18n) {\n        pageFiles.add((0, _normalizelocalepath.normalizeLocalePath)(key, opts.config.i18n.locales).pathname);\n      } else {\n        pageFiles.add(key);\n      }\n    }\n    for (const key of Object.keys(appRoutesManifest)) {\n      appFiles.add(appRoutesManifest[key]);\n    }\n    const escapedBuildId = (0, _escaperegexp.escapeStringRegexp)(buildId);\n    for (const route of routesManifest.dataRoutes) {\n      if ((0, _utils.isDynamicRoute)(route.page)) {\n        const routeRegex = (0, _routeregex.getRouteRegex)(route.page);\n        dynamicRoutes.push({\n          ...route,\n          regex: routeRegex.re.toString(),\n          match: (0, _routematcher.getRouteMatcher)({\n            // TODO: fix this in the manifest itself, must also be fixed in\n            // upstream builder that relies on this\n            re: opts.config.i18n ? new RegExp(route.dataRouteRegex.replace(`/${escapedBuildId}/`, `/${escapedBuildId}/(?<nextLocale>[^/]+?)/`)) : new RegExp(route.dataRouteRegex),\n            groups: routeRegex.groups\n          })\n        });\n      }\n      nextDataRoutes.add(route.page);\n    }\n    for (const route of routesManifest.dynamicRoutes) {\n      dynamicRoutes.push({\n        ...route,\n        match: (0, _routematcher.getRouteMatcher)((0, _routeregex.getRouteRegex)(route.page))\n      });\n    }\n    if ((_middlewareManifest_middleware = middlewareManifest.middleware) == null ? void 0 : (_middlewareManifest_middleware_ = _middlewareManifest_middleware[\"/\"]) == null ? void 0 : _middlewareManifest_middleware_.matchers) {\n      var _middlewareManifest_middleware_1, _middlewareManifest_middleware1;\n      middlewareMatcher = (0, _middlewareroutematcher.getMiddlewareRouteMatcher)((_middlewareManifest_middleware1 = middlewareManifest.middleware) == null ? void 0 : (_middlewareManifest_middleware_1 = _middlewareManifest_middleware1[\"/\"]) == null ? void 0 : _middlewareManifest_middleware_1.matchers);\n    }\n    customRoutes = {\n      redirects: routesManifest.redirects,\n      rewrites: routesManifest.rewrites ? Array.isArray(routesManifest.rewrites) ? {\n        beforeFiles: [],\n        afterFiles: routesManifest.rewrites,\n        fallback: []\n      } : routesManifest.rewrites : {\n        beforeFiles: [],\n        afterFiles: [],\n        fallback: []\n      },\n      headers: routesManifest.headers\n    };\n  } else {\n    // dev handling\n    customRoutes = await (0, _loadcustomroutes.default)(opts.config);\n    prerenderManifest = {\n      version: 4,\n      routes: {},\n      dynamicRoutes: {},\n      notFoundRoutes: [],\n      preview: {\n        previewModeId: require(\"crypto\").randomBytes(16).toString(\"hex\"),\n        previewModeSigningKey: require(\"crypto\").randomBytes(32).toString(\"hex\"),\n        previewModeEncryptionKey: require(\"crypto\").randomBytes(32).toString(\"hex\")\n      }\n    };\n  }\n  const headers = customRoutes.headers.map(item => buildCustomRoute(\"header\", item, opts.config.basePath, opts.config.experimental.caseSensitiveRoutes));\n  const redirects = customRoutes.redirects.map(item => buildCustomRoute(\"redirect\", item, opts.config.basePath, opts.config.experimental.caseSensitiveRoutes));\n  const rewrites = {\n    // TODO: add interception routes generateInterceptionRoutesRewrites()\n    beforeFiles: customRoutes.rewrites.beforeFiles.map(item => buildCustomRoute(\"before_files_rewrite\", item)),\n    afterFiles: customRoutes.rewrites.afterFiles.map(item => buildCustomRoute(\"rewrite\", item, opts.config.basePath, opts.config.experimental.caseSensitiveRoutes)),\n    fallback: customRoutes.rewrites.fallback.map(item => buildCustomRoute(\"rewrite\", item, opts.config.basePath, opts.config.experimental.caseSensitiveRoutes))\n  };\n  const {\n    i18n\n  } = opts.config;\n  const handleLocale = (pathname, locales) => {\n    let locale;\n    if (i18n) {\n      const i18nResult = (0, _normalizelocalepath.normalizeLocalePath)(pathname, locales || i18n.locales);\n      pathname = i18nResult.pathname;\n      locale = i18nResult.detectedLocale;\n    }\n    return {\n      locale,\n      pathname\n    };\n  };\n  debug(\"nextDataRoutes\", nextDataRoutes);\n  debug(\"dynamicRoutes\", dynamicRoutes);\n  debug(\"pageFiles\", pageFiles);\n  debug(\"appFiles\", appFiles);\n  let ensureFn;\n  const normalizers = {\n    // Because we can't know if the app directory is enabled or not at this\n    // stage, we assume that it is.\n    rsc: new _rsc.RSCPathnameNormalizer(true),\n    postponed: new _postponed.PostponedPathnameNormalizer(opts.config.experimental.ppr)\n  };\n  return {\n    headers,\n    rewrites,\n    redirects,\n    buildId,\n    handleLocale,\n    appFiles,\n    pageFiles,\n    dynamicRoutes,\n    nextDataRoutes,\n    interceptionRoutes: undefined,\n    devVirtualFsItems: new Set(),\n    prerenderManifest,\n    middlewareMatcher: middlewareMatcher,\n    ensureCallback(fn) {\n      ensureFn = fn;\n    },\n    async getItem(itemPath) {\n      const originalItemPath = itemPath;\n      const itemKey = originalItemPath;\n      const lruResult = getItemsLru == null ? void 0 : getItemsLru.get(itemKey);\n      if (lruResult) {\n        return lruResult;\n      }\n      const {\n        basePath\n      } = opts.config;\n      if (basePath && !(0, _pathhasprefix.pathHasPrefix)(itemPath, basePath)) {\n        return null;\n      }\n      itemPath = (0, _removepathprefix.removePathPrefix)(itemPath, basePath) || \"/\";\n      // Simulate minimal mode requests by normalizing RSC and postponed\n      // requests.\n      if (opts.minimalMode) {\n        if (normalizers.rsc.match(itemPath)) {\n          itemPath = normalizers.rsc.normalize(itemPath, true);\n        } else if (normalizers.postponed.match(itemPath)) {\n          itemPath = normalizers.postponed.normalize(itemPath, true);\n        }\n      }\n      if (itemPath !== \"/\" && itemPath.endsWith(\"/\")) {\n        itemPath = itemPath.substring(0, itemPath.length - 1);\n      }\n      let decodedItemPath = itemPath;\n      try {\n        decodedItemPath = decodeURIComponent(itemPath);\n      } catch {}\n      if (itemPath === \"/_next/image\") {\n        return {\n          itemPath,\n          type: \"nextImage\"\n        };\n      }\n      const itemsToCheck = [[this.devVirtualFsItems, \"devVirtualFsItem\"], [nextStaticFolderItems, \"nextStaticFolder\"], [legacyStaticFolderItems, \"legacyStaticFolder\"], [publicFolderItems, \"publicFolder\"], [appFiles, \"appFile\"], [pageFiles, \"pageFile\"]];\n      for (let [items, type] of itemsToCheck) {\n        let locale;\n        let curItemPath = itemPath;\n        let curDecodedItemPath = decodedItemPath;\n        const isDynamicOutput = type === \"pageFile\" || type === \"appFile\";\n        if (i18n) {\n          const localeResult = handleLocale(itemPath,\n          // legacy behavior allows visiting static assets under\n          // default locale but no other locale\n          isDynamicOutput ? undefined : [i18n == null ? void 0 : i18n.defaultLocale]);\n          if (localeResult.pathname !== curItemPath) {\n            curItemPath = localeResult.pathname;\n            locale = localeResult.locale;\n            try {\n              curDecodedItemPath = decodeURIComponent(curItemPath);\n            } catch {}\n          }\n        }\n        if (type === \"legacyStaticFolder\") {\n          if (!(0, _pathhasprefix.pathHasPrefix)(curItemPath, \"/static\")) {\n            continue;\n          }\n          curItemPath = curItemPath.substring(\"/static\".length);\n          try {\n            curDecodedItemPath = decodeURIComponent(curItemPath);\n          } catch {}\n        }\n        if (type === \"nextStaticFolder\" && !(0, _pathhasprefix.pathHasPrefix)(curItemPath, \"/_next/static\")) {\n          continue;\n        }\n        const nextDataPrefix = `/_next/data/${buildId}/`;\n        if (type === \"pageFile\" && curItemPath.startsWith(nextDataPrefix) && curItemPath.endsWith(\".json\")) {\n          items = nextDataRoutes;\n          // remove _next/data/<build-id> prefix\n          curItemPath = curItemPath.substring(nextDataPrefix.length - 1);\n          // remove .json postfix\n          curItemPath = curItemPath.substring(0, curItemPath.length - \".json\".length);\n          const curLocaleResult = handleLocale(curItemPath);\n          curItemPath = curLocaleResult.pathname === \"/index\" ? \"/\" : curLocaleResult.pathname;\n          locale = curLocaleResult.locale;\n          try {\n            curDecodedItemPath = decodeURIComponent(curItemPath);\n          } catch {}\n        }\n        let matchedItem = items.has(curItemPath);\n        // check decoded variant as well\n        if (!matchedItem && !opts.dev) {\n          matchedItem = items.has(curItemPath);\n          if (matchedItem) curItemPath = curDecodedItemPath;else {\n            // x-ref: https://github.com/vercel/next.js/issues/54008\n            // There're cases that urls get decoded before requests, we should support both encoded and decoded ones.\n            // e.g. nginx could decode the proxy urls, the below ones should be treated as the same:\n            // decoded version: `/_next/static/chunks/pages/blog/[slug]-d4858831b91b69f6.js`\n            // encoded version: `/_next/static/chunks/pages/blog/%5Bslug%5D-d4858831b91b69f6.js`\n            try {\n              // encode the special characters in the path and retrieve again to determine if path exists.\n              const encodedCurItemPath = encodeURI(curItemPath);\n              matchedItem = items.has(encodedCurItemPath);\n            } catch {}\n          }\n        }\n        if (matchedItem || opts.dev) {\n          let fsPath;\n          let itemsRoot;\n          switch (type) {\n            case \"nextStaticFolder\":\n              {\n                itemsRoot = nextStaticFolderPath;\n                curItemPath = curItemPath.substring(\"/_next/static\".length);\n                break;\n              }\n            case \"legacyStaticFolder\":\n              {\n                itemsRoot = legacyStaticFolderPath;\n                break;\n              }\n            case \"publicFolder\":\n              {\n                itemsRoot = publicFolderPath;\n                break;\n              }\n            default:\n              {\n                break;\n              }\n          }\n          if (itemsRoot && curItemPath) {\n            fsPath = _path.default.posix.join(itemsRoot, curItemPath);\n          }\n          // dynamically check fs in development so we don't\n          // have to wait on the watcher\n          if (!matchedItem && opts.dev) {\n            const isStaticAsset = [\"nextStaticFolder\", \"publicFolder\", \"legacyStaticFolder\"].includes(type);\n            if (isStaticAsset && itemsRoot) {\n              let found = fsPath && (await (0, _fileexists.fileExists)(fsPath, _fileexists.FileType.File));\n              if (!found) {\n                try {\n                  // In dev, we ensure encoded paths match\n                  // decoded paths on the filesystem so check\n                  // that variation as well\n                  const tempItemPath = decodeURIComponent(curItemPath);\n                  fsPath = _path.default.posix.join(itemsRoot, tempItemPath);\n                  found = await (0, _fileexists.fileExists)(fsPath, _fileexists.FileType.File);\n                } catch {}\n                if (!found) {\n                  continue;\n                }\n              }\n            } else if (type === \"pageFile\" || type === \"appFile\") {\n              var _ensureFn;\n              const isAppFile = type === \"appFile\";\n              if (ensureFn && (await ((_ensureFn = ensureFn({\n                type,\n                itemPath: isAppFile ? (0, _getmetadataroute.normalizeMetadataRoute)(curItemPath) : curItemPath\n              })) == null ? void 0 : _ensureFn.catch(() => \"ENSURE_FAILED\"))) === \"ENSURE_FAILED\") {\n                continue;\n              }\n            } else {\n              continue;\n            }\n          }\n          // i18n locales aren't matched for app dir\n          if (type === \"appFile\" && locale && locale !== (i18n == null ? void 0 : i18n.defaultLocale)) {\n            continue;\n          }\n          const itemResult = {\n            type,\n            fsPath,\n            locale,\n            itemsRoot,\n            itemPath: curItemPath\n          };\n          getItemsLru == null ? void 0 : getItemsLru.set(itemKey, itemResult);\n          return itemResult;\n        }\n      }\n      getItemsLru == null ? void 0 : getItemsLru.set(itemKey, null);\n      return null;\n    },\n    getDynamicRoutes() {\n      // this should include data routes\n      return this.dynamicRoutes;\n    },\n    getMiddlewareMatchers() {\n      return this.middlewareMatcher;\n    }\n  };\n}","map":{"version":3,"names":["buildCustomRoute","setupFsCheck","debug","_debug","default","type","item","basePath","caseSensitive","restrictedRedirectPaths","map","p","match","_pathmatch","getPathMatch","source","strict","removeUnnamedParams","regexModifier","internal","regex","_redirectstatus","modifyRouteRegex","undefined","sensitive","check","opts","getItemsLru","dev","_lrucache","max","length","value","key","fsPath","itemPath","nextDataRoutes","Set","publicFolderItems","nextStaticFolderItems","legacyStaticFolderItems","appFiles","pageFiles","dynamicRoutes","middlewareMatcher","distDir","_path","join","dir","config","publicFolderPath","nextStaticFolderPath","legacyStaticFolderPath","customRoutes","redirects","rewrites","beforeFiles","afterFiles","fallback","headers","buildId","prerenderManifest","_middlewareManifest_middleware_","_middlewareManifest_middleware","buildIdPath","_constants","BUILD_ID_FILE","_promises","readFile","file","_recursivereaddir","recursiveReadDir","add","encodeURI","_normalizepathsep","normalizePathSep","err","code","_log","warn","posix","output","routesManifestPath","ROUTES_MANIFEST","prerenderManifestPath","PRERENDER_MANIFEST","middlewareManifestPath","MIDDLEWARE_MANIFEST","pagesManifestPath","PAGES_MANIFEST","appRoutesManifestPath","APP_PATH_ROUTES_MANIFEST","routesManifest","JSON","parse","middlewareManifest","catch","pagesManifest","appRoutesManifest","Object","keys","i18n","_normalizelocalepath","normalizeLocalePath","locales","pathname","escapedBuildId","_escaperegexp","escapeStringRegexp","route","dataRoutes","_utils","isDynamicRoute","page","routeRegex","_routeregex","getRouteRegex","push","re","toString","_routematcher","getRouteMatcher","RegExp","dataRouteRegex","replace","groups","middleware","matchers","_middlewareManifest_middleware_1","_middlewareManifest_middleware1","_middlewareroutematcher","getMiddlewareRouteMatcher","Array","isArray","_loadcustomroutes","version","routes","notFoundRoutes","preview","previewModeId","require","randomBytes","previewModeSigningKey","previewModeEncryptionKey","experimental","caseSensitiveRoutes","handleLocale","locale","i18nResult","detectedLocale","ensureFn","normalizers","rsc","_rsc","RSCPathnameNormalizer","postponed","_postponed","PostponedPathnameNormalizer","ppr","interceptionRoutes","devVirtualFsItems","ensureCallback","fn","getItem","originalItemPath","itemKey","lruResult","get","_pathhasprefix","pathHasPrefix","_removepathprefix","removePathPrefix","minimalMode","normalize","endsWith","substring","decodedItemPath","decodeURIComponent","itemsToCheck","items","curItemPath","curDecodedItemPath","isDynamicOutput","localeResult","defaultLocale","nextDataPrefix","startsWith","curLocaleResult","matchedItem","has","encodedCurItemPath","itemsRoot","isStaticAsset","includes","found","_fileexists","fileExists","FileType","File","tempItemPath","_ensureFn","isAppFile","_getmetadataroute","normalizeMetadataRoute","itemResult","set","getDynamicRoutes","getMiddlewareMatchers"],"sources":["../../../../src/server/lib/router-utils/filesystem.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}