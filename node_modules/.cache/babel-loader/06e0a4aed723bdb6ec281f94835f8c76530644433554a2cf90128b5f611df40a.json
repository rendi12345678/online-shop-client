{"ast":null,"code":"// ISC License\n// Copyright (c) 2021 Alexey Raspopov, Kostiantyn Denysov, Anton Verinov\n// Permission to use, copy, modify, and/or distribute this software for any\n// purpose with or without fee is hereby granted, provided that the above\n// copyright notice and this permission notice appear in all copies.\n// THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n//\n// https://github.com/alexeyraspopov/picocolors/blob/b6261487e7b81aaab2440e397a356732cad9e342/picocolors.js#L1\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n0 && (module.exports = {\n  reset: null,\n  bold: null,\n  dim: null,\n  italic: null,\n  underline: null,\n  inverse: null,\n  hidden: null,\n  strikethrough: null,\n  black: null,\n  red: null,\n  green: null,\n  yellow: null,\n  blue: null,\n  magenta: null,\n  purple: null,\n  cyan: null,\n  white: null,\n  gray: null,\n  bgBlack: null,\n  bgRed: null,\n  bgGreen: null,\n  bgYellow: null,\n  bgBlue: null,\n  bgMagenta: null,\n  bgCyan: null,\n  bgWhite: null\n});\nfunction _export(target, all) {\n  for (var name in all) Object.defineProperty(target, name, {\n    enumerable: true,\n    get: all[name]\n  });\n}\n_export(exports, {\n  reset: function () {\n    return reset;\n  },\n  bold: function () {\n    return bold;\n  },\n  dim: function () {\n    return dim;\n  },\n  italic: function () {\n    return italic;\n  },\n  underline: function () {\n    return underline;\n  },\n  inverse: function () {\n    return inverse;\n  },\n  hidden: function () {\n    return hidden;\n  },\n  strikethrough: function () {\n    return strikethrough;\n  },\n  black: function () {\n    return black;\n  },\n  red: function () {\n    return red;\n  },\n  green: function () {\n    return green;\n  },\n  yellow: function () {\n    return yellow;\n  },\n  blue: function () {\n    return blue;\n  },\n  magenta: function () {\n    return magenta;\n  },\n  purple: function () {\n    return purple;\n  },\n  cyan: function () {\n    return cyan;\n  },\n  white: function () {\n    return white;\n  },\n  gray: function () {\n    return gray;\n  },\n  bgBlack: function () {\n    return bgBlack;\n  },\n  bgRed: function () {\n    return bgRed;\n  },\n  bgGreen: function () {\n    return bgGreen;\n  },\n  bgYellow: function () {\n    return bgYellow;\n  },\n  bgBlue: function () {\n    return bgBlue;\n  },\n  bgMagenta: function () {\n    return bgMagenta;\n  },\n  bgCyan: function () {\n    return bgCyan;\n  },\n  bgWhite: function () {\n    return bgWhite;\n  }\n});\nvar _globalThis;\nconst {\n  env,\n  stdout\n} = ((_globalThis = globalThis) == null ? void 0 : _globalThis.process) ?? {};\nconst enabled = env && !env.NO_COLOR && (env.FORCE_COLOR || (stdout == null ? void 0 : stdout.isTTY) && !env.CI && env.TERM !== \"dumb\");\nconst replaceClose = (str, close, replace, index) => {\n  const start = str.substring(0, index) + replace;\n  const end = str.substring(index + close.length);\n  const nextIndex = end.indexOf(close);\n  return ~nextIndex ? start + replaceClose(end, close, replace, nextIndex) : start + end;\n};\nconst formatter = (open, close, replace = open) => input => {\n  const string = \"\" + input;\n  const index = string.indexOf(close, open.length);\n  return ~index ? open + replaceClose(string, close, replace, index) + close : open + string + close;\n};\nconst reset = enabled ? s => `\\x1b[0m${s}\\x1b[0m` : String;\nconst bold = enabled ? formatter(\"\\x1b[1m\", \"\\x1b[22m\", \"\\x1b[22m\\x1b[1m\") : String;\nconst dim = enabled ? formatter(\"\\x1b[2m\", \"\\x1b[22m\", \"\\x1b[22m\\x1b[2m\") : String;\nconst italic = enabled ? formatter(\"\\x1b[3m\", \"\\x1b[23m\") : String;\nconst underline = enabled ? formatter(\"\\x1b[4m\", \"\\x1b[24m\") : String;\nconst inverse = enabled ? formatter(\"\\x1b[7m\", \"\\x1b[27m\") : String;\nconst hidden = enabled ? formatter(\"\\x1b[8m\", \"\\x1b[28m\") : String;\nconst strikethrough = enabled ? formatter(\"\\x1b[9m\", \"\\x1b[29m\") : String;\nconst black = enabled ? formatter(\"\\x1b[30m\", \"\\x1b[39m\") : String;\nconst red = enabled ? formatter(\"\\x1b[31m\", \"\\x1b[39m\") : String;\nconst green = enabled ? formatter(\"\\x1b[32m\", \"\\x1b[39m\") : String;\nconst yellow = enabled ? formatter(\"\\x1b[33m\", \"\\x1b[39m\") : String;\nconst blue = enabled ? formatter(\"\\x1b[34m\", \"\\x1b[39m\") : String;\nconst magenta = enabled ? formatter(\"\\x1b[35m\", \"\\x1b[39m\") : String;\nconst purple = enabled ? formatter(\"\\x1b[38;2;173;127;168m\", \"\\x1b[39m\") : String;\nconst cyan = enabled ? formatter(\"\\x1b[36m\", \"\\x1b[39m\") : String;\nconst white = enabled ? formatter(\"\\x1b[37m\", \"\\x1b[39m\") : String;\nconst gray = enabled ? formatter(\"\\x1b[90m\", \"\\x1b[39m\") : String;\nconst bgBlack = enabled ? formatter(\"\\x1b[40m\", \"\\x1b[49m\") : String;\nconst bgRed = enabled ? formatter(\"\\x1b[41m\", \"\\x1b[49m\") : String;\nconst bgGreen = enabled ? formatter(\"\\x1b[42m\", \"\\x1b[49m\") : String;\nconst bgYellow = enabled ? formatter(\"\\x1b[43m\", \"\\x1b[49m\") : String;\nconst bgBlue = enabled ? formatter(\"\\x1b[44m\", \"\\x1b[49m\") : String;\nconst bgMagenta = enabled ? formatter(\"\\x1b[45m\", \"\\x1b[49m\") : String;\nconst bgCyan = enabled ? formatter(\"\\x1b[46m\", \"\\x1b[49m\") : String;\nconst bgWhite = enabled ? formatter(\"\\x1b[47m\", \"\\x1b[49m\") : String;","map":{"version":3,"names":["reset","bold","dim","italic","underline","inverse","hidden","strikethrough","black","red","green","yellow","blue","magenta","purple","cyan","white","gray","bgBlack","bgRed","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite","_globalThis","env","stdout","globalThis","process","enabled","NO_COLOR","FORCE_COLOR","isTTY","CI","TERM","replaceClose","str","close","replace","index","start","substring","end","length","nextIndex","indexOf","formatter","open","input","string","s","String"],"sources":["../../src/lib/picocolors.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}