{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"DevAppPageRouteMatcherProvider\", {\n  enumerable: true,\n  get: function () {\n    return DevAppPageRouteMatcherProvider;\n  }\n});\nconst _apppageroutematcher = require(\"../../route-matchers/app-page-route-matcher\");\nconst _routekind = require(\"../../route-kind\");\nconst _filecacheroutematcherprovider = require(\"./file-cache-route-matcher-provider\");\nconst _app = require(\"../../normalizers/built/app\");\nclass DevAppPageRouteMatcherProvider extends _filecacheroutematcherprovider.FileCacheRouteMatcherProvider {\n  constructor(appDir, extensions, reader) {\n    super(appDir, reader);\n    this.normalizers = new _app.DevAppNormalizers(appDir, extensions);\n    // Match any page file that ends with `/page.${extension}` under the app\n    // directory.\n    this.expression = new RegExp(`[/\\\\\\\\]page\\\\.(?:${extensions.join(\"|\")})$`);\n  }\n  async transform(files) {\n    // Collect all the app paths for each page. This could include any parallel\n    // routes.\n    const cache = new Map();\n    const routeFilenames = new Array();\n    const appPaths = {};\n    for (const filename of files) {\n      // If the file isn't a match for this matcher, then skip it.\n      if (!this.expression.test(filename)) continue;\n      const page = this.normalizers.page.normalize(filename);\n      // Validate that this is not an ignored page.\n      if (page.includes(\"/_\")) continue;\n      // This is a valid file that we want to create a matcher for.\n      routeFilenames.push(filename);\n      const pathname = this.normalizers.pathname.normalize(filename);\n      const bundlePath = this.normalizers.bundlePath.normalize(filename);\n      // Save the normalization results.\n      cache.set(filename, {\n        page,\n        pathname,\n        bundlePath\n      });\n      if (pathname in appPaths) appPaths[pathname].push(page);else appPaths[pathname] = [page];\n    }\n    const matchers = [];\n    for (const filename of routeFilenames) {\n      // Grab the cached values (and the appPaths).\n      const cached = cache.get(filename);\n      if (!cached) {\n        throw new Error(\"Invariant: expected filename to exist in cache\");\n      }\n      const {\n        pathname,\n        page,\n        bundlePath\n      } = cached;\n      matchers.push(new _apppageroutematcher.AppPageRouteMatcher({\n        kind: _routekind.RouteKind.APP_PAGE,\n        pathname,\n        page,\n        bundlePath,\n        filename,\n        appPaths: appPaths[pathname]\n      }));\n    }\n    return matchers;\n  }\n}","map":{"version":3,"names":["DevAppPageRouteMatcherProvider","_filecacheroutematcherprovider","FileCacheRouteMatcherProvider","constructor","appDir","extensions","reader","normalizers","_app","DevAppNormalizers","expression","RegExp","join","transform","files","cache","Map","routeFilenames","Array","appPaths","filename","test","page","normalize","includes","push","pathname","bundlePath","set","matchers","cached","get","Error","_apppageroutematcher","AppPageRouteMatcher","kind","_routekind","RouteKind","APP_PAGE"],"sources":["../../../../../src/server/future/route-matcher-providers/dev/dev-app-page-route-matcher-provider.ts"],"sourcesContent":[null],"mappings":";;;;;+BAOa;;;WAAAA,8BAAA;;;qCANuB;2BACV;+CACoB;qBAEZ;AAE3B,MAAMA,8BAAA,SAAuCC,8BAAA,CAAAC,6BAA6B;EAI/EC,YACEC,MAAc,EACdC,UAAiC,EACjCC,MAAkB,EAClB;IACA,KAAK,CAACF,MAAA,EAAQE,MAAA;IAEd,IAAI,CAACC,WAAW,GAAG,IAAIC,IAAA,CAAAC,iBAAiB,CAACL,MAAA,EAAQC,UAAA;IAEjD;IACA;IACA,IAAI,CAACK,UAAU,GAAG,IAAIC,MAAA,CAAQ,oBAAmBN,UAAA,CAAWO,IAAI,CAAC,IAAK,IAAG;EAC3E;EAEA,MAAgBC,UACdC,KAA4B,EACiB;IAC7C;IACA;IACA,MAAMC,KAAA,GAAQ,IAAIC,GAAA;IAIlB,MAAMC,cAAA,GAAiB,IAAIC,KAAA;IAC3B,MAAMC,QAAA,GAAqC,CAAC;IAC5C,KAAK,MAAMC,QAAA,IAAYN,KAAA,EAAO;MAC5B;MACA,IAAI,CAAC,IAAI,CAACJ,UAAU,CAACW,IAAI,CAACD,QAAA,GAAW;MAErC,MAAME,IAAA,GAAO,IAAI,CAACf,WAAW,CAACe,IAAI,CAACC,SAAS,CAACH,QAAA;MAE7C;MACA,IAAIE,IAAA,CAAKE,QAAQ,CAAC,OAAO;MAEzB;MACAP,cAAA,CAAeQ,IAAI,CAACL,QAAA;MAEpB,MAAMM,QAAA,GAAW,IAAI,CAACnB,WAAW,CAACmB,QAAQ,CAACH,SAAS,CAACH,QAAA;MACrD,MAAMO,UAAA,GAAa,IAAI,CAACpB,WAAW,CAACoB,UAAU,CAACJ,SAAS,CAACH,QAAA;MAEzD;MACAL,KAAA,CAAMa,GAAG,CAACR,QAAA,EAAU;QAAEE,IAAA;QAAMI,QAAA;QAAUC;MAAW;MAEjD,IAAID,QAAA,IAAYP,QAAA,EAAUA,QAAQ,CAACO,QAAA,CAAS,CAACD,IAAI,CAACH,IAAA,OAC7CH,QAAQ,CAACO,QAAA,CAAS,GAAG,CAACJ,IAAA,CAAK;IAClC;IAEA,MAAMO,QAAA,GAAuC,EAAE;IAC/C,KAAK,MAAMT,QAAA,IAAYH,cAAA,EAAgB;MACrC;MACA,MAAMa,MAAA,GAASf,KAAA,CAAMgB,GAAG,CAACX,QAAA;MACzB,IAAI,CAACU,MAAA,EAAQ;QACX,MAAM,IAAIE,KAAA,CAAM;MAClB;MACA,MAAM;QAAEN,QAAQ;QAAEJ,IAAI;QAAEK;MAAU,CAAE,GAAGG,MAAA;MAEvCD,QAAA,CAASJ,IAAI,CACX,IAAIQ,oBAAA,CAAAC,mBAAmB,CAAC;QACtBC,IAAA,EAAMC,UAAA,CAAAC,SAAS,CAACC,QAAQ;QACxBZ,QAAA;QACAJ,IAAA;QACAK,UAAA;QACAP,QAAA;QACAD,QAAA,EAAUA,QAAQ,CAACO,QAAA;MACrB;IAEJ;IACA,OAAOG,QAAA;EACT;AACF"},"metadata":{},"sourceType":"script","externalDependencies":[]}