{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n0 && (module.exports = {\n  clearModuleContext: null,\n  deleteAppClientCache: null,\n  deleteCache: null,\n  propagateServerField: null,\n  initialize: null\n});\nfunction _export(target, all) {\n  for (var name in all) Object.defineProperty(target, name, {\n    enumerable: true,\n    get: all[name]\n  });\n}\n_export(exports, {\n  clearModuleContext: function () {\n    return clearModuleContext;\n  },\n  deleteAppClientCache: function () {\n    return deleteAppClientCache;\n  },\n  deleteCache: function () {\n    return deleteCache;\n  },\n  propagateServerField: function () {\n    return propagateServerField;\n  },\n  initialize: function () {\n    return initialize;\n  }\n});\nconst _next = /*#__PURE__*/_interop_require_default(require(\"../next\"));\nfunction _interop_require_default(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nlet initializations = {};\nlet sandboxContext;\nlet requireCacheHotReloader;\nif (process.env.NODE_ENV !== \"production\") {\n  sandboxContext = require(\"../web/sandbox/context\");\n  requireCacheHotReloader = require(\"../../build/webpack/plugins/nextjs-require-cache-hot-reloader\");\n}\nfunction clearModuleContext(target) {\n  return sandboxContext == null ? void 0 : sandboxContext.clearModuleContext(target);\n}\nfunction deleteAppClientCache() {\n  return requireCacheHotReloader == null ? void 0 : requireCacheHotReloader.deleteAppClientCache();\n}\nfunction deleteCache(filePaths) {\n  for (const filePath of filePaths) {\n    requireCacheHotReloader == null ? void 0 : requireCacheHotReloader.deleteCache(filePath);\n  }\n}\nasync function propagateServerField(dir, field, value) {\n  const initialization = await initializations[dir];\n  if (!initialization) {\n    throw new Error(\"Invariant cant propagate server field, no app initialized\");\n  }\n  const {\n    app\n  } = initialization;\n  let appField = app.server;\n  if (appField) {\n    if (typeof appField[field] === \"function\") {\n      await appField[field].apply(app.server, Array.isArray(value) ? value : []);\n    } else {\n      appField[field] = value;\n    }\n  }\n}\nasync function initializeImpl(opts) {\n  const type = process.env.__NEXT_PRIVATE_RENDER_WORKER;\n  if (type) {\n    process.title = \"next-render-worker-\" + type;\n  }\n  let requestHandler;\n  let upgradeHandler;\n  const app = (0, _next.default)({\n    ...opts,\n    hostname: opts.hostname || \"localhost\",\n    customServer: false,\n    httpServer: opts.server,\n    port: opts.port,\n    isNodeDebugging: opts.isNodeDebugging\n  });\n  requestHandler = app.getRequestHandler();\n  upgradeHandler = app.getUpgradeHandler();\n  await app.prepare(opts.serverFields);\n  return {\n    requestHandler,\n    upgradeHandler,\n    app\n  };\n}\nasync function initialize(opts) {\n  // if we already setup the server return as we only need to do\n  // this on first worker boot\n  if (initializations[opts.dir]) {\n    return initializations[opts.dir];\n  }\n  return initializations[opts.dir] = initializeImpl(opts);\n}","map":{"version":3,"names":["clearModuleContext","deleteAppClientCache","deleteCache","propagateServerField","initialize","initializations","sandboxContext","requireCacheHotReloader","process","env","NODE_ENV","require","target","filePaths","filePath","dir","field","value","initialization","Error","app","appField","server","apply","Array","isArray","initializeImpl","opts","type","__NEXT_PRIVATE_RENDER_WORKER","title","requestHandler","upgradeHandler","_next","default","hostname","customServer","httpServer","port","isNodeDebugging","getRequestHandler","getUpgradeHandler","prepare","serverFields"],"sources":["../../../src/server/lib/render-server.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;;EA8BgBA,kBAAkB,WAAAA,CAAA;WAAlBA,kBAAA;;EAIAC,oBAAoB,WAAAA,CAAA;WAApBA,oBAAA;;EAIAC,WAAW,WAAAA,CAAA;WAAXA,WAAA;;EAMMC,oBAAoB,WAAAA,CAAA;WAApBA,oBAAA;;EAoEAC,UAAU,WAAAA,CAAA;WAAVA,UAAA;;;4DA5GL;;;;;;AAEjB,IAAIC,eAAA,GAYA,CAAC;AAEL,IAAIC,cAAA;AACJ,IAAIC,uBAAA;AAIJ,IAAIC,OAAA,CAAQC,GAAG,CAACC,QAAQ,KAAK,cAAc;EACzCJ,cAAA,GAAiBK,OAAA,CAAQ;EACzBJ,uBAAA,GAA0BI,OAAA,CAAQ;AACpC;AAEO,SAASX,mBAAmBY,MAAc;EAC/C,OAAON,cAAA,oBAAAA,cAAA,CAAgBN,kBAAkB,CAACY,MAAA;AAC5C;AAEO,SAASX,qBAAA;EACd,OAAOM,uBAAA,oBAAAA,uBAAA,CAAyBN,oBAAoB;AACtD;AAEO,SAASC,YAAYW,SAAmB;EAC7C,KAAK,MAAMC,QAAA,IAAYD,SAAA,EAAW;IAChCN,uBAAA,oBAAAA,uBAAA,CAAyBL,WAAW,CAACY,QAAA;EACvC;AACF;AAEO,eAAeX,qBACpBY,GAAW,EACXC,KAA8B,EAC9BC,KAAU;EAEV,MAAMC,cAAA,GAAiB,MAAMb,eAAe,CAACU,GAAA,CAAI;EACjD,IAAI,CAACG,cAAA,EAAgB;IACnB,MAAM,IAAIC,KAAA,CAAM;EAClB;EACA,MAAM;IAAEC;EAAG,CAAE,GAAGF,cAAA;EAChB,IAAIG,QAAA,GAAWD,GAAC,CAAYE,MAAM;EAElC,IAAID,QAAA,EAAU;IACZ,IAAI,OAAOA,QAAQ,CAACL,KAAA,CAAM,KAAK,YAAY;MACzC,MAAMK,QAAQ,CAACL,KAAA,CAAM,CAACO,KAAK,CACzBH,GAAC,CAAYE,MAAM,EACnBE,KAAA,CAAMC,OAAO,CAACR,KAAA,IAASA,KAAA,GAAQ,EAAE;IAErC,OAAO;MACLI,QAAQ,CAACL,KAAA,CAAM,GAAGC,KAAA;IACpB;EACF;AACF;AAEA,eAAeS,eAAeC,IAe7B;EACC,MAAMC,IAAA,GAAOpB,OAAA,CAAQC,GAAG,CAACoB,4BAA4B;EACrD,IAAID,IAAA,EAAM;IACRpB,OAAA,CAAQsB,KAAK,GAAG,wBAAwBF,IAAA;EAC1C;EAEA,IAAIG,cAAA;EACJ,IAAIC,cAAA;EAEJ,MAAMZ,GAAA,GAAM,IAAAa,KAAA,CAAAC,OAAI,EAAC;IACf,GAAGP,IAAI;IACPQ,QAAA,EAAUR,IAAA,CAAKQ,QAAQ,IAAI;IAC3BC,YAAA,EAAc;IACdC,UAAA,EAAYV,IAAA,CAAKL,MAAM;IACvBgB,IAAA,EAAMX,IAAA,CAAKW,IAAI;IACfC,eAAA,EAAiBZ,IAAA,CAAKY;EACxB;EACAR,cAAA,GAAiBX,GAAA,CAAIoB,iBAAiB;EACtCR,cAAA,GAAiBZ,GAAA,CAAIqB,iBAAiB;EAEtC,MAAMrB,GAAA,CAAIsB,OAAO,CAACf,IAAA,CAAKgB,YAAY;EAEnC,OAAO;IACLZ,cAAA;IACAC,cAAA;IACAZ;EACF;AACF;AAEO,eAAehB,WACpBuB,IAA0C;EAS1C;EACA;EACA,IAAItB,eAAe,CAACsB,IAAA,CAAKZ,GAAG,CAAC,EAAE;IAC7B,OAAOV,eAAe,CAACsB,IAAA,CAAKZ,GAAG,CAAC;EAClC;EACA,OAAQV,eAAe,CAACsB,IAAA,CAAKZ,GAAG,CAAC,GAAGW,cAAA,CAAeC,IAAA;AACrD"},"metadata":{},"sourceType":"script","externalDependencies":[]}