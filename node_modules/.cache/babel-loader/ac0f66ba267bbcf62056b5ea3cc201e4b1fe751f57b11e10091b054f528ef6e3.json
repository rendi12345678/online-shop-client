{"ast":null,"code":"/**\n * Contains predefined constants for the trace span name in next/server.\n *\n * Currently, next/server/tracer is internal implementation only for tracking\n * next.js's implementation only with known span names defined here.\n **/ // eslint typescript has a bug with TS enums\n/* eslint-disable no-shadow */\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n0 && (module.exports = {\n  NextVanillaSpanAllowlist: null,\n  BaseServerSpan: null,\n  LoadComponentsSpan: null,\n  NextServerSpan: null,\n  NextNodeServerSpan: null,\n  StartServerSpan: null,\n  RenderSpan: null,\n  RouterSpan: null,\n  AppRenderSpan: null,\n  NodeSpan: null,\n  AppRouteRouteHandlersSpan: null,\n  ResolveMetadataSpan: null\n});\nfunction _export(target, all) {\n  for (var name in all) Object.defineProperty(target, name, {\n    enumerable: true,\n    get: all[name]\n  });\n}\n_export(exports, {\n  NextVanillaSpanAllowlist: function () {\n    return NextVanillaSpanAllowlist;\n  },\n  BaseServerSpan: function () {\n    return BaseServerSpan;\n  },\n  LoadComponentsSpan: function () {\n    return LoadComponentsSpan;\n  },\n  NextServerSpan: function () {\n    return NextServerSpan;\n  },\n  NextNodeServerSpan: function () {\n    return NextNodeServerSpan;\n  },\n  StartServerSpan: function () {\n    return StartServerSpan;\n  },\n  RenderSpan: function () {\n    return RenderSpan;\n  },\n  RouterSpan: function () {\n    return RouterSpan;\n  },\n  AppRenderSpan: function () {\n    return AppRenderSpan;\n  },\n  NodeSpan: function () {\n    return NodeSpan;\n  },\n  AppRouteRouteHandlersSpan: function () {\n    return AppRouteRouteHandlersSpan;\n  },\n  ResolveMetadataSpan: function () {\n    return ResolveMetadataSpan;\n  }\n});\nvar BaseServerSpan;\n(function (BaseServerSpan) {\n  BaseServerSpan[\"handleRequest\"] = \"BaseServer.handleRequest\";\n  BaseServerSpan[\"run\"] = \"BaseServer.run\";\n  BaseServerSpan[\"pipe\"] = \"BaseServer.pipe\";\n  BaseServerSpan[\"getStaticHTML\"] = \"BaseServer.getStaticHTML\";\n  BaseServerSpan[\"render\"] = \"BaseServer.render\";\n  BaseServerSpan[\"renderToResponseWithComponents\"] = \"BaseServer.renderToResponseWithComponents\";\n  BaseServerSpan[\"renderToResponse\"] = \"BaseServer.renderToResponse\";\n  BaseServerSpan[\"renderToHTML\"] = \"BaseServer.renderToHTML\";\n  BaseServerSpan[\"renderError\"] = \"BaseServer.renderError\";\n  BaseServerSpan[\"renderErrorToResponse\"] = \"BaseServer.renderErrorToResponse\";\n  BaseServerSpan[\"renderErrorToHTML\"] = \"BaseServer.renderErrorToHTML\";\n  BaseServerSpan[\"render404\"] = \"BaseServer.render404\";\n})(BaseServerSpan || (BaseServerSpan = {}));\nvar LoadComponentsSpan;\n(function (LoadComponentsSpan) {\n  LoadComponentsSpan[\"loadDefaultErrorComponents\"] = \"LoadComponents.loadDefaultErrorComponents\";\n  LoadComponentsSpan[\"loadComponents\"] = \"LoadComponents.loadComponents\";\n})(LoadComponentsSpan || (LoadComponentsSpan = {}));\nvar NextServerSpan;\n(function (NextServerSpan) {\n  NextServerSpan[\"getRequestHandler\"] = \"NextServer.getRequestHandler\";\n  NextServerSpan[\"getServer\"] = \"NextServer.getServer\";\n  NextServerSpan[\"getServerRequestHandler\"] = \"NextServer.getServerRequestHandler\";\n  NextServerSpan[\"createServer\"] = \"createServer.createServer\";\n})(NextServerSpan || (NextServerSpan = {}));\nvar NextNodeServerSpan;\n(function (NextNodeServerSpan) {\n  NextNodeServerSpan[\"compression\"] = \"NextNodeServer.compression\";\n  NextNodeServerSpan[\"getBuildId\"] = \"NextNodeServer.getBuildId\";\n  NextNodeServerSpan[\"generateStaticRoutes\"] = \"NextNodeServer.generateStaticRoutes\";\n  NextNodeServerSpan[\"generateFsStaticRoutes\"] = \"NextNodeServer.generateFsStaticRoutes\";\n  NextNodeServerSpan[\"generatePublicRoutes\"] = \"NextNodeServer.generatePublicRoutes\";\n  NextNodeServerSpan[\"generateImageRoutes\"] = \"NextNodeServer.generateImageRoutes.route\";\n  NextNodeServerSpan[\"sendRenderResult\"] = \"NextNodeServer.sendRenderResult\";\n  NextNodeServerSpan[\"proxyRequest\"] = \"NextNodeServer.proxyRequest\";\n  NextNodeServerSpan[\"runApi\"] = \"NextNodeServer.runApi\";\n  NextNodeServerSpan[\"render\"] = \"NextNodeServer.render\";\n  NextNodeServerSpan[\"renderHTML\"] = \"NextNodeServer.renderHTML\";\n  NextNodeServerSpan[\"imageOptimizer\"] = \"NextNodeServer.imageOptimizer\";\n  NextNodeServerSpan[\"getPagePath\"] = \"NextNodeServer.getPagePath\";\n  NextNodeServerSpan[\"getRoutesManifest\"] = \"NextNodeServer.getRoutesManifest\";\n  NextNodeServerSpan[\"findPageComponents\"] = \"NextNodeServer.findPageComponents\";\n  NextNodeServerSpan[\"getFontManifest\"] = \"NextNodeServer.getFontManifest\";\n  NextNodeServerSpan[\"getServerComponentManifest\"] = \"NextNodeServer.getServerComponentManifest\";\n  NextNodeServerSpan[\"getRequestHandler\"] = \"NextNodeServer.getRequestHandler\";\n  NextNodeServerSpan[\"renderToHTML\"] = \"NextNodeServer.renderToHTML\";\n  NextNodeServerSpan[\"renderError\"] = \"NextNodeServer.renderError\";\n  NextNodeServerSpan[\"renderErrorToHTML\"] = \"NextNodeServer.renderErrorToHTML\";\n  NextNodeServerSpan[\"render404\"] = \"NextNodeServer.render404\";\n  NextNodeServerSpan[\n  // nested inner span, does not require parent scope name\n  \"route\"] = \"route\";\n  NextNodeServerSpan[\"onProxyReq\"] = \"onProxyReq\";\n  NextNodeServerSpan[\"apiResolver\"] = \"apiResolver\";\n  NextNodeServerSpan[\"internalFetch\"] = \"internalFetch\";\n})(NextNodeServerSpan || (NextNodeServerSpan = {}));\nvar StartServerSpan;\n(function (StartServerSpan) {\n  StartServerSpan[\"startServer\"] = \"startServer.startServer\";\n})(StartServerSpan || (StartServerSpan = {}));\nvar RenderSpan;\n(function (RenderSpan) {\n  RenderSpan[\"getServerSideProps\"] = \"Render.getServerSideProps\";\n  RenderSpan[\"getStaticProps\"] = \"Render.getStaticProps\";\n  RenderSpan[\"renderToString\"] = \"Render.renderToString\";\n  RenderSpan[\"renderDocument\"] = \"Render.renderDocument\";\n  RenderSpan[\"createBodyResult\"] = \"Render.createBodyResult\";\n})(RenderSpan || (RenderSpan = {}));\nvar AppRenderSpan;\n(function (AppRenderSpan) {\n  AppRenderSpan[\"renderToString\"] = \"AppRender.renderToString\";\n  AppRenderSpan[\"renderToReadableStream\"] = \"AppRender.renderToReadableStream\";\n  AppRenderSpan[\"getBodyResult\"] = \"AppRender.getBodyResult\";\n  AppRenderSpan[\"fetch\"] = \"AppRender.fetch\";\n})(AppRenderSpan || (AppRenderSpan = {}));\nvar RouterSpan;\n(function (RouterSpan) {\n  RouterSpan[\"executeRoute\"] = \"Router.executeRoute\";\n})(RouterSpan || (RouterSpan = {}));\nvar NodeSpan;\n(function (NodeSpan) {\n  NodeSpan[\"runHandler\"] = \"Node.runHandler\";\n})(NodeSpan || (NodeSpan = {}));\nvar AppRouteRouteHandlersSpan;\n(function (AppRouteRouteHandlersSpan) {\n  AppRouteRouteHandlersSpan[\"runHandler\"] = \"AppRouteRouteHandlers.runHandler\";\n})(AppRouteRouteHandlersSpan || (AppRouteRouteHandlersSpan = {}));\nvar ResolveMetadataSpan;\n(function (ResolveMetadataSpan) {\n  ResolveMetadataSpan[\"generateMetadata\"] = \"ResolveMetadata.generateMetadata\";\n  ResolveMetadataSpan[\"generateViewport\"] = \"ResolveMetadata.generateViewport\";\n})(ResolveMetadataSpan || (ResolveMetadataSpan = {}));\nconst NextVanillaSpanAllowlist = [\"BaseServer.handleRequest\", \"Render.getServerSideProps\", \"Render.getStaticProps\", \"AppRender.fetch\", \"AppRender.getBodyResult\", \"Render.renderDocument\", \"Node.runHandler\", \"AppRouteRouteHandlers.runHandler\", \"ResolveMetadata.generateMetadata\", \"ResolveMetadata.generateViewport\"];","map":{"version":3,"names":["NextVanillaSpanAllowlist","BaseServerSpan","LoadComponentsSpan","NextServerSpan","NextNodeServerSpan","StartServerSpan","RenderSpan","RouterSpan","AppRenderSpan","NodeSpan","AppRouteRouteHandlersSpan","ResolveMetadataSpan"],"sources":["../../../../src/server/lib/trace/constants.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}