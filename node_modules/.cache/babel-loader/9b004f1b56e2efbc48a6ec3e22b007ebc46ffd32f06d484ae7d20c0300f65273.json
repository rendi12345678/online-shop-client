{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"PagesRouteMatcherProvider\", {\n  enumerable: true,\n  get: function () {\n    return PagesRouteMatcherProvider;\n  }\n});\nconst _isapiroute = require(\"../../../lib/is-api-route\");\nconst _constants = require(\"../../../shared/lib/constants\");\nconst _routekind = require(\"../route-kind\");\nconst _pagesroutematcher = require(\"../route-matchers/pages-route-matcher\");\nconst _manifestroutematcherprovider = require(\"./manifest-route-matcher-provider\");\nconst _pages = require(\"../normalizers/built/pages\");\nclass PagesRouteMatcherProvider extends _manifestroutematcherprovider.ManifestRouteMatcherProvider {\n  constructor(distDir, manifestLoader, i18nProvider) {\n    super(_constants.PAGES_MANIFEST, manifestLoader);\n    this.i18nProvider = i18nProvider;\n    this.normalizers = new _pages.PagesNormalizers(distDir);\n  }\n  async transform(manifest) {\n    // This matcher is only for Pages routes, not Pages API routes which are\n    // included in this manifest.\n    const pathnames = Object.keys(manifest).filter(pathname => !(0, _isapiroute.isAPIRoute)(pathname)) // Remove any blocked pages (page that can't be routed to, like error or\n    // internal pages).\n    .filter(pathname => {\n      var _this_i18nProvider;\n      const normalized = ((_this_i18nProvider = this.i18nProvider) == null ? void 0 : _this_i18nProvider.analyze(pathname).pathname) ?? pathname;\n      // Skip any blocked pages.\n      if (_constants.BLOCKED_PAGES.includes(normalized)) return false;\n      return true;\n    });\n    const matchers = [];\n    for (const page of pathnames) {\n      if (this.i18nProvider) {\n        // Match the locale on the page name, or default to the default locale.\n        const {\n          detectedLocale,\n          pathname\n        } = this.i18nProvider.analyze(page);\n        matchers.push(new _pagesroutematcher.PagesLocaleRouteMatcher({\n          kind: _routekind.RouteKind.PAGES,\n          pathname,\n          page,\n          bundlePath: this.normalizers.bundlePath.normalize(page),\n          filename: this.normalizers.filename.normalize(manifest[page]),\n          i18n: {\n            locale: detectedLocale\n          }\n        }));\n      } else {\n        matchers.push(new _pagesroutematcher.PagesRouteMatcher({\n          kind: _routekind.RouteKind.PAGES,\n          // In `pages/`, the page is the same as the pathname.\n          pathname: page,\n          page,\n          bundlePath: this.normalizers.bundlePath.normalize(page),\n          filename: this.normalizers.filename.normalize(manifest[page])\n        }));\n      }\n    }\n    return matchers;\n  }\n}","map":{"version":3,"names":["PagesRouteMatcherProvider","_manifestroutematcherprovider","ManifestRouteMatcherProvider","constructor","distDir","manifestLoader","i18nProvider","_constants","PAGES_MANIFEST","normalizers","_pages","PagesNormalizers","transform","manifest","pathnames","Object","keys","filter","pathname","_isapiroute","isAPIRoute","_this_i18nProvider","normalized","analyze","BLOCKED_PAGES","includes","matchers","page","detectedLocale","push","_pagesroutematcher","PagesLocaleRouteMatcher","kind","_routekind","RouteKind","PAGES","bundlePath","normalize","filename","i18n","locale","PagesRouteMatcher"],"sources":["../../../../src/server/future/route-matcher-providers/pages-route-matcher-provider.ts"],"sourcesContent":[null],"mappings":";;;;;+BAea;;;WAAAA,yBAAA;;;4BAfc;2BACmB;2BACpB;mCAInB;8CAKsC;uBAEZ;AAE1B,MAAMA,yBAAA,SAAkCC,6BAAA,CAAAC,4BAA4B;EAGzEC,YACEC,OAAe,EACfC,cAA8B,EACbC,YAAA,EACjB;IACA,KAAK,CAACC,UAAA,CAAAC,cAAc,EAAEH,cAAA;wBAFLC,YAAA;IAIjB,IAAI,CAACG,WAAW,GAAG,IAAIC,MAAA,CAAAC,gBAAgB,CAACP,OAAA;EAC1C;EAEA,MAAgBQ,UACdC,QAAkB,EACyB;IAC3C;IACA;IACA,MAAMC,SAAA,GAAYC,MAAA,CAAOC,IAAI,CAACH,QAAA,EAC3BI,MAAM,CAAEC,QAAA,IAAa,CAAC,IAAAC,WAAA,CAAAC,UAAU,EAACF,QAAA,EAClC;IACA;IAAA,CACCD,MAAM,CAAEC,QAAA;UAELG,kBAAA;MADF,MAAMC,UAAA,GACJ,EAAAD,kBAAA,OAAI,CAACf,YAAY,qBAAjBe,kBAAA,CAAmBE,OAAO,CAACL,QAAA,EAAUA,QAAQ,KAAIA,QAAA;MAEnD;MACA,IAAIX,UAAA,CAAAiB,aAAa,CAACC,QAAQ,CAACH,UAAA,GAAa,OAAO;MAE/C,OAAO;IACT;IAEF,MAAMI,QAAA,GAAqC,EAAE;IAC7C,KAAK,MAAMC,IAAA,IAAQb,SAAA,EAAW;MAC5B,IAAI,IAAI,CAACR,YAAY,EAAE;QACrB;QACA,MAAM;UAAEsB,cAAc;UAAEV;QAAQ,CAAE,GAAG,IAAI,CAACZ,YAAY,CAACiB,OAAO,CAACI,IAAA;QAE/DD,QAAA,CAASG,IAAI,CACX,IAAIC,kBAAA,CAAAC,uBAAuB,CAAC;UAC1BC,IAAA,EAAMC,UAAA,CAAAC,SAAS,CAACC,KAAK;UACrBjB,QAAA;UACAS,IAAA;UACAS,UAAA,EAAY,IAAI,CAAC3B,WAAW,CAAC2B,UAAU,CAACC,SAAS,CAACV,IAAA;UAClDW,QAAA,EAAU,IAAI,CAAC7B,WAAW,CAAC6B,QAAQ,CAACD,SAAS,CAACxB,QAAQ,CAACc,IAAA,CAAK;UAC5DY,IAAA,EAAM;YACJC,MAAA,EAAQZ;UACV;QACF;MAEJ,OAAO;QACLF,QAAA,CAASG,IAAI,CACX,IAAIC,kBAAA,CAAAW,iBAAiB,CAAC;UACpBT,IAAA,EAAMC,UAAA,CAAAC,SAAS,CAACC,KAAK;UACrB;UACAjB,QAAA,EAAUS,IAAA;UACVA,IAAA;UACAS,UAAA,EAAY,IAAI,CAAC3B,WAAW,CAAC2B,UAAU,CAACC,SAAS,CAACV,IAAA;UAClDW,QAAA,EAAU,IAAI,CAAC7B,WAAW,CAAC6B,QAAQ,CAACD,SAAS,CAACxB,QAAQ,CAACc,IAAA,CAAK;QAC9D;MAEJ;IACF;IAEA,OAAOD,QAAA;EACT;AACF"},"metadata":{},"sourceType":"script","externalDependencies":[]}