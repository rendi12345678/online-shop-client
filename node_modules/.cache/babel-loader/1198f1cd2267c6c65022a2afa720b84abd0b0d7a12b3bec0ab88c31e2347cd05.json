{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"setupDevBundler\", {\n  enumerable: true,\n  get: function () {\n    return setupDevBundler;\n  }\n});\nconst _ws = /*#__PURE__*/_interop_require_default(require(\"next/dist/compiled/ws\"));\nconst _swc = require(\"../../../build/swc\");\nconst _fs = /*#__PURE__*/_interop_require_default(require(\"fs\"));\nconst _url = /*#__PURE__*/_interop_require_default(require(\"url\"));\nconst _path = /*#__PURE__*/_interop_require_default(require(\"path\"));\nconst _querystring = /*#__PURE__*/_interop_require_default(require(\"querystring\"));\nconst _watchpack = /*#__PURE__*/_interop_require_default(require(\"watchpack\"));\nconst _env = require(\"@next/env\");\nconst _iserror = /*#__PURE__*/_interop_require_default(require(\"../../../lib/is-error\"));\nconst _findup = /*#__PURE__*/_interop_require_default(require(\"next/dist/compiled/find-up\"));\nconst _filesystem = require(\"./filesystem\");\nconst _log = /*#__PURE__*/_interop_require_wildcard(require(\"../../../build/output/log\"));\nconst _hotreloaderwebpack = /*#__PURE__*/_interop_require_wildcard(require(\"../../dev/hot-reloader-webpack\"));\nconst _shared = require(\"../../../trace/shared\");\nconst _loadjsconfig = /*#__PURE__*/_interop_require_default(require(\"../../../build/load-jsconfig\"));\nconst _findpagefile = require(\"../find-page-file\");\nconst _events = require(\"../../../telemetry/events\");\nconst _defineenvplugin = require(\"../../../build/webpack/plugins/define-env-plugin\");\nconst _logappdirerror = require(\"../../dev/log-app-dir-error\");\nconst _utils = require(\"../../../shared/lib/router/utils\");\nconst _entries = require(\"../../../build/entries\");\nconst _verifytypescriptsetup = require(\"../../../lib/verify-typescript-setup\");\nconst _verifypartytownsetup = require(\"../../../lib/verify-partytown-setup\");\nconst _routeregex = require(\"../../../shared/lib/router/utils/route-regex\");\nconst _apppaths = require(\"../../../shared/lib/router/utils/app-paths\");\nconst _builddataroute = require(\"./build-data-route\");\nconst _routematcher = require(\"../../../shared/lib/router/utils/route-matcher\");\nconst _normalizepathsep = require(\"../../../shared/lib/page-path/normalize-path-sep\");\nconst _createclientrouterfilter = require(\"../../../lib/create-client-router-filter\");\nconst _absolutepathtopage = require(\"../../../shared/lib/page-path/absolute-path-to-page\");\nconst _generateinterceptionroutesrewrites = require(\"../../../lib/generate-interception-routes-rewrites\");\nconst _store = require(\"../../../build/output/store\");\nconst _constants = require(\"../../../shared/lib/constants\");\nconst _middlewareroutematcher = require(\"../../../shared/lib/router/utils/middleware-route-matcher\");\nconst _buildcontext = require(\"../../../build/build-context\");\nconst _worker = require(\"../../../build/worker\");\nconst _middleware = require(\"next/dist/compiled/@next/react-dev-overlay/dist/middleware\");\nconst _middlewareturbopack = require(\"next/dist/compiled/@next/react-dev-overlay/dist/middleware-turbopack\");\nconst _promises = require(\"fs/promises\");\nconst _utils1 = require(\"../../../shared/lib/utils\");\nconst _buildmanifestplugin = require(\"../../../build/webpack/plugins/build-manifest-plugin\");\nconst _shared1 = require(\"../../../build/webpack/plugins/next-types-plugin/shared\");\nconst _pathtoregexp = require(\"next/dist/compiled/path-to-regexp\");\nconst _hotreloadertypes = require(\"../../dev/hot-reloader-types\");\nconst _utils2 = require(\"../../utils\");\nconst _nextjsrequirecachehotreloader = require(\"../../../build/webpack/plugins/nextjs-require-cache-hot-reloader\");\nconst _getmetadataroute = require(\"../../../lib/metadata/get-metadata-route\");\nconst _renderserver = require(\"../render-server\");\nconst _denormalizepagepath = require(\"../../../shared/lib/page-path/denormalize-page-path\");\nconst _actionencryptionutils = require(\"../../app-render/action-encryption-utils\");\nfunction _interop_require_default(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interop_require_wildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nconst wsServer = new _ws.default.Server({\n  noServer: true\n});\nasync function verifyTypeScript(opts) {\n  let usingTypeScript = false;\n  const verifyResult = await (0, _verifytypescriptsetup.verifyTypeScriptSetup)({\n    dir: opts.dir,\n    distDir: opts.nextConfig.distDir,\n    intentDirs: [opts.pagesDir, opts.appDir].filter(Boolean),\n    typeCheckPreflight: false,\n    tsconfigPath: opts.nextConfig.typescript.tsconfigPath,\n    disableStaticImages: opts.nextConfig.images.disableStaticImages,\n    hasAppDir: !!opts.appDir,\n    hasPagesDir: !!opts.pagesDir\n  });\n  if (verifyResult.version) {\n    usingTypeScript = true;\n  }\n  return usingTypeScript;\n}\nasync function startWatcher(opts) {\n  const {\n    nextConfig,\n    appDir,\n    pagesDir,\n    dir\n  } = opts;\n  const {\n    useFileSystemPublicRoutes\n  } = nextConfig;\n  const usingTypeScript = await verifyTypeScript(opts);\n  const distDir = _path.default.join(opts.dir, opts.nextConfig.distDir);\n  (0, _shared.setGlobal)(\"distDir\", distDir);\n  (0, _shared.setGlobal)(\"phase\", _constants.PHASE_DEVELOPMENT_SERVER);\n  const validFileMatcher = (0, _findpagefile.createValidFileMatcher)(nextConfig.pageExtensions, appDir);\n  async function propagateServerField(field, args) {\n    var _opts_renderServer_instance, _opts_renderServer;\n    await ((_opts_renderServer = opts.renderServer) == null ? void 0 : (_opts_renderServer_instance = _opts_renderServer.instance) == null ? void 0 : _opts_renderServer_instance.propagateServerField(opts.dir, field, args));\n  }\n  const serverFields = {};\n  let hotReloader;\n  let project;\n  if (opts.turbo) {\n    const {\n      loadBindings\n    } = require(\"../../../build/swc\");\n    let bindings = await loadBindings();\n    const {\n      jsConfig\n    } = await (0, _loadjsconfig.default)(dir, opts.nextConfig);\n    // For the debugging purpose, check if createNext or equivalent next instance setup in test cases\n    // works correctly. Normally `run-test` hides output so only will be visible when `--debug` flag is used.\n    if (process.env.TURBOPACK && process.env.NEXT_TEST_MODE) {\n      require(\"console\").log(\"Creating turbopack project\", {\n        dir,\n        testMode: process.env.NEXT_TEST_MODE\n      });\n    }\n    const hasRewrites = opts.fsChecker.rewrites.afterFiles.length > 0 || opts.fsChecker.rewrites.beforeFiles.length > 0 || opts.fsChecker.rewrites.fallback.length > 0;\n    project = await bindings.turbo.createProject({\n      projectPath: dir,\n      rootPath: opts.nextConfig.experimental.outputFileTracingRoot || dir,\n      nextConfig: opts.nextConfig,\n      jsConfig: jsConfig ?? {\n        compilerOptions: {}\n      },\n      watch: true,\n      env: process.env,\n      defineEnv: (0, _swc.createDefineEnv)({\n        isTurbopack: true,\n        allowedRevalidateHeaderKeys: undefined,\n        clientRouterFilters: undefined,\n        config: nextConfig,\n        dev: true,\n        distDir,\n        fetchCacheKeyPrefix: undefined,\n        hasRewrites,\n        middlewareMatchers: undefined,\n        previewModeId: undefined\n      }),\n      serverAddr: `127.0.0.1:${opts.port}`\n    });\n    const iter = project.entrypointsSubscribe();\n    const curEntries = new Map();\n    const changeSubscriptions = new Map();\n    let prevMiddleware = undefined;\n    const globalEntries = {\n      app: undefined,\n      document: undefined,\n      error: undefined\n    };\n    let currentEntriesHandlingResolve;\n    let currentEntriesHandling = new Promise(resolve => currentEntriesHandlingResolve = resolve);\n    const hmrPayloads = new Map();\n    const turbopackUpdates = [];\n    let hmrBuilding = false;\n    const issues = new Map();\n    function issueKey(issue) {\n      return `${issue.severity} - ${issue.filePath} - ${issue.title}\\n${issue.description}\\n\\n`;\n    }\n    function formatIssue(issue) {\n      const {\n        filePath,\n        title,\n        description,\n        source,\n        detail\n      } = issue;\n      let formattedTitle = title.replace(/\\n/g, \"\\n    \");\n      let message = \"\";\n      let formattedFilePath = filePath.replace(\"[project]/\", \"\").replaceAll(\"/./\", \"/\").replace(\"\\\\\\\\?\\\\\", \"\");\n      if (source) {\n        const {\n          start,\n          end\n        } = source;\n        message = `${issue.severity} - ${formattedFilePath}:${start.line + 1}:${start.column}  ${formattedTitle}`;\n        if (source.source.content) {\n          const {\n            codeFrameColumns\n          } = require(\"next/dist/compiled/babel/code-frame\");\n          message += \"\\n\\n\" + codeFrameColumns(source.source.content, {\n            start: {\n              line: start.line + 1,\n              column: start.column + 1\n            },\n            end: {\n              line: end.line + 1,\n              column: end.column + 1\n            }\n          }, {\n            forceColor: true\n          });\n        }\n      } else {\n        message = `${formattedTitle}`;\n      }\n      if (description) {\n        message += `\\n${description.replace(/\\n/g, \"\\n    \")}`;\n      }\n      if (detail) {\n        message += `\\n${detail.replace(/\\n/g, \"\\n    \")}`;\n      }\n      return message;\n    }\n    class ModuleBuildError extends Error {}\n    function processIssues(displayName, name, result, throwIssue = false) {\n      const oldSet = issues.get(name) ?? new Map();\n      const newSet = new Map();\n      issues.set(name, newSet);\n      const relevantIssues = new Set();\n      for (const issue of result.issues) {\n        // TODO better formatting\n        if (issue.severity !== \"error\" && issue.severity !== \"fatal\") continue;\n        const key = issueKey(issue);\n        const formatted = formatIssue(issue);\n        if (!oldSet.has(key) && !newSet.has(key)) {\n          console.error(`  ⚠ ${displayName} ${key} ${formatted}\\n\\n`);\n        }\n        newSet.set(key, issue);\n        relevantIssues.add(formatted);\n      }\n      // TODO: Format these messages correctly.\n      // for (const issue of oldSet.keys()) {\n      //   if (!newSet.has(issue)) {\n      //     console.error(`✅ ${displayName} fixed ${issue}`)\n      //   }\n      // }\n      if (relevantIssues.size && throwIssue) {\n        throw new ModuleBuildError([...relevantIssues].join(\"\\n\\n\"));\n      }\n    }\n    const serverPathState = new Map();\n    async function processResult(id, result) {\n      // Figure out if the server files have changed\n      let hasChange = false;\n      for (const {\n        path: p,\n        contentHash\n      } of result.serverPaths) {\n        // We ignore source maps\n        if (p.endsWith(\".map\")) continue;\n        let key = `${id}:${p}`;\n        const localHash = serverPathState.get(key);\n        const globaHash = serverPathState.get(p);\n        if (localHash && localHash !== contentHash || globaHash && globaHash !== contentHash) {\n          hasChange = true;\n          serverPathState.set(key, contentHash);\n          serverPathState.set(p, contentHash);\n        } else {\n          if (!localHash) {\n            serverPathState.set(key, contentHash);\n          }\n          if (!globaHash) {\n            serverPathState.set(p, contentHash);\n          }\n        }\n      }\n      if (!hasChange) {\n        return result;\n      }\n      const hasAppPaths = result.serverPaths.some(({\n        path: p\n      }) => p.startsWith(\"server/app\"));\n      if (hasAppPaths) {\n        (0, _nextjsrequirecachehotreloader.deleteAppClientCache)();\n      }\n      const serverPaths = result.serverPaths.map(({\n        path: p\n      }) => _path.default.join(distDir, p));\n      for (const file of serverPaths) {\n        (0, _renderserver.clearModuleContext)(file);\n        (0, _nextjsrequirecachehotreloader.deleteCache)(file);\n      }\n      return result;\n    }\n    const buildingIds = new Set();\n    const readyIds = new Set();\n    function startBuilding(id, forceRebuild = false) {\n      if (!forceRebuild && readyIds.has(id)) {\n        return () => {};\n      }\n      if (buildingIds.size === 0) {\n        _store.store.setState({\n          loading: true,\n          trigger: id\n        }, true);\n        hotReloader.send({\n          action: _hotreloadertypes.HMR_ACTIONS_SENT_TO_BROWSER.BUILDING\n        });\n      }\n      buildingIds.add(id);\n      return function finishBuilding() {\n        if (buildingIds.size === 0) {\n          return;\n        }\n        readyIds.add(id);\n        buildingIds.delete(id);\n        if (buildingIds.size === 0) {\n          hotReloader.send({\n            action: _hotreloadertypes.HMR_ACTIONS_SENT_TO_BROWSER.FINISH_BUILDING\n          });\n          _store.store.setState({\n            loading: false\n          }, true);\n        }\n      };\n    }\n    let hmrHash = 0;\n    const sendHmrDebounce = (0, _utils2.debounce)(() => {\n      const errors = new Map();\n      for (const [, issueMap] of issues) {\n        for (const [key, issue] of issueMap) {\n          if (errors.has(key)) continue;\n          const message = formatIssue(issue);\n          errors.set(key, {\n            message,\n            details: issue.detail\n          });\n        }\n      }\n      hotReloader.send({\n        action: _hotreloadertypes.HMR_ACTIONS_SENT_TO_BROWSER.BUILT,\n        hash: String(++hmrHash),\n        errors: [...errors.values()],\n        warnings: []\n      });\n      hmrBuilding = false;\n      if (errors.size === 0) {\n        for (const payload of hmrPayloads.values()) {\n          hotReloader.send(payload);\n        }\n        hmrPayloads.clear();\n        if (turbopackUpdates.length > 0) {\n          hotReloader.send({\n            type: _hotreloadertypes.HMR_ACTIONS_SENT_TO_BROWSER.TURBOPACK_MESSAGE,\n            data: turbopackUpdates\n          });\n          turbopackUpdates.length = 0;\n        }\n      }\n    }, 2);\n    function sendHmr(key, id, payload) {\n      // We've detected a change in some part of the graph. If nothing has\n      // been inserted into building yet, then this is the first change\n      // emitted, but their may be many more coming.\n      if (!hmrBuilding) {\n        hotReloader.send({\n          action: _hotreloadertypes.HMR_ACTIONS_SENT_TO_BROWSER.BUILDING\n        });\n        hmrBuilding = true;\n      }\n      hmrPayloads.set(`${key}:${id}`, payload);\n      hmrEventHappend = true;\n      sendHmrDebounce();\n    }\n    function sendTurbopackMessage(payload) {\n      // We've detected a change in some part of the graph. If nothing has\n      // been inserted into building yet, then this is the first change\n      // emitted, but their may be many more coming.\n      if (!hmrBuilding) {\n        hotReloader.send({\n          action: _hotreloadertypes.HMR_ACTIONS_SENT_TO_BROWSER.BUILDING\n        });\n        hmrBuilding = true;\n      }\n      turbopackUpdates.push(payload);\n      hmrEventHappend = true;\n      sendHmrDebounce();\n    }\n    async function loadPartialManifest(name, pageName, type = \"pages\") {\n      const manifestPath = _path.default.posix.join(distDir, `server`, type === \"app-route\" ? \"app\" : type, type === \"middleware\" ? \"\" : pageName === \"/\" ? \"index\" : pageName === \"/index\" || pageName.startsWith(\"/index/\") ? `/index${pageName}` : pageName, type === \"app\" ? \"page\" : type === \"app-route\" ? \"route\" : \"\", name);\n      return JSON.parse(await (0, _promises.readFile)(_path.default.posix.join(manifestPath), \"utf-8\"));\n    }\n    const buildManifests = new Map();\n    const appBuildManifests = new Map();\n    const pagesManifests = new Map();\n    const appPathsManifests = new Map();\n    const middlewareManifests = new Map();\n    const actionManifests = new Map();\n    const clientToHmrSubscription = new Map();\n    const loadbleManifests = new Map();\n    const clients = new Set();\n    async function loadMiddlewareManifest(pageName, type) {\n      middlewareManifests.set(pageName, await loadPartialManifest(_constants.MIDDLEWARE_MANIFEST, pageName, type));\n    }\n    async function loadBuildManifest(pageName, type = \"pages\") {\n      buildManifests.set(pageName, await loadPartialManifest(_constants.BUILD_MANIFEST, pageName, type));\n    }\n    async function loadAppBuildManifest(pageName) {\n      appBuildManifests.set(pageName, await loadPartialManifest(_constants.APP_BUILD_MANIFEST, pageName, \"app\"));\n    }\n    async function loadPagesManifest(pageName) {\n      pagesManifests.set(pageName, await loadPartialManifest(_constants.PAGES_MANIFEST, pageName));\n    }\n    async function loadAppPathManifest(pageName, type = \"app\") {\n      appPathsManifests.set(pageName, await loadPartialManifest(_constants.APP_PATHS_MANIFEST, pageName, type));\n    }\n    async function loadActionManifest(pageName) {\n      actionManifests.set(pageName, await loadPartialManifest(`${_constants.SERVER_REFERENCE_MANIFEST}.json`, pageName, \"app\"));\n    }\n    async function loadLoadableManifest(pageName, type = \"pages\") {\n      loadbleManifests.set(pageName, await loadPartialManifest(_constants.REACT_LOADABLE_MANIFEST, pageName, type));\n    }\n    async function changeSubscription(page, type, includeIssues, endpoint, makePayload) {\n      const key = `${page} (${type})`;\n      if (!endpoint || changeSubscriptions.has(key)) return;\n      const changedPromise = endpoint[`${type}Changed`](includeIssues);\n      changeSubscriptions.set(key, changedPromise);\n      const changed = await changedPromise;\n      for await (const change of changed) {\n        processIssues(key, page, change);\n        const payload = await makePayload(page, change);\n        if (payload) sendHmr(\"endpoint-change\", key, payload);\n      }\n    }\n    async function clearChangeSubscription(page, type) {\n      const key = `${page} (${type})`;\n      const subscription = await changeSubscriptions.get(key);\n      if (subscription) {\n        subscription.return == null ? void 0 : subscription.return.call(subscription);\n        changeSubscriptions.delete(key);\n      }\n      issues.delete(key);\n    }\n    function mergeBuildManifests(manifests) {\n      const manifest = {\n        pages: {\n          \"/_app\": []\n        },\n        // Something in next.js depends on these to exist even for app dir rendering\n        devFiles: [],\n        ampDevFiles: [],\n        polyfillFiles: [],\n        lowPriorityFiles: [\"static/development/_ssgManifest.js\", \"static/development/_buildManifest.js\"],\n        rootMainFiles: [],\n        ampFirstPages: []\n      };\n      for (const m of manifests) {\n        Object.assign(manifest.pages, m.pages);\n        if (m.rootMainFiles.length) manifest.rootMainFiles = m.rootMainFiles;\n      }\n      return manifest;\n    }\n    function mergeAppBuildManifests(manifests) {\n      const manifest = {\n        pages: {}\n      };\n      for (const m of manifests) {\n        Object.assign(manifest.pages, m.pages);\n      }\n      return manifest;\n    }\n    function mergePagesManifests(manifests) {\n      const manifest = {};\n      for (const m of manifests) {\n        Object.assign(manifest, m);\n      }\n      return manifest;\n    }\n    function mergeMiddlewareManifests(manifests) {\n      const manifest = {\n        version: 2,\n        middleware: {},\n        sortedMiddleware: [],\n        functions: {}\n      };\n      for (const m of manifests) {\n        Object.assign(manifest.functions, m.functions);\n        Object.assign(manifest.middleware, m.middleware);\n      }\n      for (const fun of Object.values(manifest.functions).concat(Object.values(manifest.middleware))) {\n        for (const matcher of fun.matchers) {\n          if (!matcher.regexp) {\n            matcher.regexp = (0, _pathtoregexp.pathToRegexp)(matcher.originalSource, [], {\n              delimiter: \"/\",\n              sensitive: false,\n              strict: true\n            }).source.replaceAll(\"\\\\/\", \"/\");\n          }\n        }\n      }\n      manifest.sortedMiddleware = Object.keys(manifest.middleware);\n      return manifest;\n    }\n    async function mergeActionManifests(manifests) {\n      const manifest = {\n        node: {},\n        edge: {},\n        encryptionKey: await (0, _actionencryptionutils.generateRandomActionKeyRaw)(true)\n      };\n      function mergeActionIds(actionEntries, other) {\n        for (const key in other) {\n          const action = actionEntries[key] ??= {\n            workers: {},\n            layer: {}\n          };\n          Object.assign(action.workers, other[key].workers);\n          Object.assign(action.layer, other[key].layer);\n        }\n      }\n      for (const m of manifests) {\n        mergeActionIds(manifest.node, m.node);\n        mergeActionIds(manifest.edge, m.edge);\n      }\n      return manifest;\n    }\n    function mergeLoadableManifests(manifests) {\n      const manifest = {};\n      for (const m of manifests) {\n        Object.assign(manifest, m);\n      }\n      return manifest;\n    }\n    async function writeFileAtomic(filePath, content) {\n      const tempPath = filePath + \".tmp.\" + Math.random().toString(36).slice(2);\n      try {\n        await (0, _promises.writeFile)(tempPath, content, \"utf-8\");\n        await (0, _promises.rename)(tempPath, filePath);\n      } catch (e) {\n        try {\n          await (0, _promises.unlink)(tempPath);\n        } catch {\n          // ignore\n        }\n        throw e;\n      }\n    }\n    async function writeBuildManifest(rewrites) {\n      const buildManifest = mergeBuildManifests(buildManifests.values());\n      const buildManifestPath = _path.default.join(distDir, _constants.BUILD_MANIFEST);\n      const middlewareBuildManifestPath = _path.default.join(distDir, \"server\", `${_constants.MIDDLEWARE_BUILD_MANIFEST}.js`);\n      (0, _nextjsrequirecachehotreloader.deleteCache)(buildManifestPath);\n      (0, _nextjsrequirecachehotreloader.deleteCache)(middlewareBuildManifestPath);\n      await writeFileAtomic(buildManifestPath, JSON.stringify(buildManifest, null, 2));\n      await writeFileAtomic(middlewareBuildManifestPath, `self.__BUILD_MANIFEST=${JSON.stringify(buildManifest)}`);\n      const content = {\n        __rewrites: rewrites ? (0, _buildmanifestplugin.normalizeRewritesForBuildManifest)(rewrites) : {\n          afterFiles: [],\n          beforeFiles: [],\n          fallback: []\n        },\n        ...Object.fromEntries([...curEntries.keys()].map(pathname => [pathname, `static/chunks/pages${pathname === \"/\" ? \"/index\" : pathname}.js`])),\n        sortedPages: [...curEntries.keys()]\n      };\n      const buildManifestJs = `self.__BUILD_MANIFEST = ${JSON.stringify(content)};self.__BUILD_MANIFEST_CB && self.__BUILD_MANIFEST_CB()`;\n      await writeFileAtomic(_path.default.join(distDir, \"static\", \"development\", \"_buildManifest.js\"), buildManifestJs);\n      await writeFileAtomic(_path.default.join(distDir, \"static\", \"development\", \"_ssgManifest.js\"), _buildmanifestplugin.srcEmptySsgManifest);\n    }\n    async function writeFallbackBuildManifest() {\n      const fallbackBuildManifest = mergeBuildManifests([buildManifests.get(\"_app\"), buildManifests.get(\"_error\")].filter(Boolean));\n      const fallbackBuildManifestPath = _path.default.join(distDir, `fallback-${_constants.BUILD_MANIFEST}`);\n      (0, _nextjsrequirecachehotreloader.deleteCache)(fallbackBuildManifestPath);\n      await writeFileAtomic(fallbackBuildManifestPath, JSON.stringify(fallbackBuildManifest, null, 2));\n    }\n    async function writeAppBuildManifest() {\n      const appBuildManifest = mergeAppBuildManifests(appBuildManifests.values());\n      const appBuildManifestPath = _path.default.join(distDir, _constants.APP_BUILD_MANIFEST);\n      (0, _nextjsrequirecachehotreloader.deleteCache)(appBuildManifestPath);\n      await writeFileAtomic(appBuildManifestPath, JSON.stringify(appBuildManifest, null, 2));\n    }\n    async function writePagesManifest() {\n      const pagesManifest = mergePagesManifests(pagesManifests.values());\n      const pagesManifestPath = _path.default.join(distDir, \"server\", _constants.PAGES_MANIFEST);\n      (0, _nextjsrequirecachehotreloader.deleteCache)(pagesManifestPath);\n      await writeFileAtomic(pagesManifestPath, JSON.stringify(pagesManifest, null, 2));\n    }\n    async function writeAppPathsManifest() {\n      const appPathsManifest = mergePagesManifests(appPathsManifests.values());\n      const appPathsManifestPath = _path.default.join(distDir, \"server\", _constants.APP_PATHS_MANIFEST);\n      (0, _nextjsrequirecachehotreloader.deleteCache)(appPathsManifestPath);\n      await writeFileAtomic(appPathsManifestPath, JSON.stringify(appPathsManifest, null, 2));\n    }\n    async function writeMiddlewareManifest() {\n      const middlewareManifest = mergeMiddlewareManifests(middlewareManifests.values());\n      const middlewareManifestPath = _path.default.join(distDir, \"server\", _constants.MIDDLEWARE_MANIFEST);\n      (0, _nextjsrequirecachehotreloader.deleteCache)(middlewareManifestPath);\n      await writeFileAtomic(middlewareManifestPath, JSON.stringify(middlewareManifest, null, 2));\n    }\n    async function writeActionManifest() {\n      const actionManifest = await mergeActionManifests(actionManifests.values());\n      const actionManifestJsonPath = _path.default.join(distDir, \"server\", `${_constants.SERVER_REFERENCE_MANIFEST}.json`);\n      const actionManifestJsPath = _path.default.join(distDir, \"server\", `${_constants.SERVER_REFERENCE_MANIFEST}.js`);\n      const json = JSON.stringify(actionManifest, null, 2);\n      (0, _nextjsrequirecachehotreloader.deleteCache)(actionManifestJsonPath);\n      (0, _nextjsrequirecachehotreloader.deleteCache)(actionManifestJsPath);\n      await (0, _promises.writeFile)(actionManifestJsonPath, json, \"utf-8\");\n      await (0, _promises.writeFile)(actionManifestJsPath, `self.__RSC_SERVER_MANIFEST=${JSON.stringify(json)}`, \"utf-8\");\n    }\n    async function writeFontManifest() {\n      // TODO: turbopack should write the correct\n      // version of this\n      const fontManifest = {\n        pages: {},\n        app: {},\n        appUsingSizeAdjust: false,\n        pagesUsingSizeAdjust: false\n      };\n      const json = JSON.stringify(fontManifest, null, 2);\n      const fontManifestJsonPath = _path.default.join(distDir, \"server\", `${_constants.NEXT_FONT_MANIFEST}.json`);\n      const fontManifestJsPath = _path.default.join(distDir, \"server\", `${_constants.NEXT_FONT_MANIFEST}.js`);\n      (0, _nextjsrequirecachehotreloader.deleteCache)(fontManifestJsonPath);\n      (0, _nextjsrequirecachehotreloader.deleteCache)(fontManifestJsPath);\n      await writeFileAtomic(fontManifestJsonPath, json);\n      await writeFileAtomic(fontManifestJsPath, `self.__NEXT_FONT_MANIFEST=${JSON.stringify(json)}`);\n    }\n    async function writeLoadableManifest() {\n      const loadableManifest = mergeLoadableManifests(loadbleManifests.values());\n      const loadableManifestPath = _path.default.join(distDir, _constants.REACT_LOADABLE_MANIFEST);\n      const middlewareloadableManifestPath = _path.default.join(distDir, \"server\", `${_constants.MIDDLEWARE_REACT_LOADABLE_MANIFEST}.js`);\n      const json = JSON.stringify(loadableManifest, null, 2);\n      (0, _nextjsrequirecachehotreloader.deleteCache)(loadableManifestPath);\n      (0, _nextjsrequirecachehotreloader.deleteCache)(middlewareloadableManifestPath);\n      await writeFileAtomic(loadableManifestPath, json);\n      await writeFileAtomic(middlewareloadableManifestPath, `self.__REACT_LOADABLE_MANIFEST=${JSON.stringify(json)}`);\n    }\n    async function subscribeToHmrEvents(id, client) {\n      let mapping = clientToHmrSubscription.get(client);\n      if (mapping === undefined) {\n        mapping = new Map();\n        clientToHmrSubscription.set(client, mapping);\n      }\n      if (mapping.has(id)) return;\n      const subscription = project.hmrEvents(id);\n      mapping.set(id, subscription);\n      // The subscription will always emit once, which is the initial\n      // computation. This is not a change, so swallow it.\n      try {\n        await subscription.next();\n        for await (const data of subscription) {\n          processIssues(\"hmr\", id, data);\n          sendTurbopackMessage(data);\n        }\n      } catch (e) {\n        // The client might be using an HMR session from a previous server, tell them\n        // to fully reload the page to resolve the issue. We can't use\n        // `hotReloader.send` since that would force very connected client to\n        // reload, only this client is out of date.\n        const reloadAction = {\n          action: _hotreloadertypes.HMR_ACTIONS_SENT_TO_BROWSER.RELOAD_PAGE\n        };\n        client.send(JSON.stringify(reloadAction));\n        client.close();\n        return;\n      }\n    }\n    function unsubscribeToHmrEvents(id, client) {\n      const mapping = clientToHmrSubscription.get(client);\n      const subscription = mapping == null ? void 0 : mapping.get(id);\n      subscription == null ? void 0 : subscription.return();\n    }\n    try {\n      async function handleEntries() {\n        for await (const entrypoints of iter) {\n          if (!currentEntriesHandlingResolve) {\n            currentEntriesHandling = new Promise(\n            // eslint-disable-next-line no-loop-func\n            resolve => currentEntriesHandlingResolve = resolve);\n          }\n          globalEntries.app = entrypoints.pagesAppEndpoint;\n          globalEntries.document = entrypoints.pagesDocumentEndpoint;\n          globalEntries.error = entrypoints.pagesErrorEndpoint;\n          curEntries.clear();\n          for (const [pathname, route] of entrypoints.routes) {\n            switch (route.type) {\n              case \"page\":\n              case \"page-api\":\n              case \"app-page\":\n              case \"app-route\":\n                {\n                  curEntries.set(pathname, route);\n                  break;\n                }\n              default:\n                _log.info(`skipping ${pathname} (${route.type})`);\n                break;\n            }\n          }\n          for (const [pathname, subscriptionPromise] of changeSubscriptions) {\n            if (pathname === \"\") {\n              continue;\n            }\n            if (!curEntries.has(pathname)) {\n              const subscription = await subscriptionPromise;\n              subscription.return == null ? void 0 : subscription.return.call(subscription);\n              changeSubscriptions.delete(pathname);\n            }\n          }\n          const {\n            middleware\n          } = entrypoints;\n          // We check for explicit true/false, since it's initialized to\n          // undefined during the first loop (middlewareChanges event is\n          // unnecessary during the first serve)\n          if (prevMiddleware === true && !middleware) {\n            // Went from middleware to no middleware\n            await clearChangeSubscription(\"middleware\", \"server\");\n            sendHmr(\"entrypoint-change\", \"middleware\", {\n              event: _hotreloadertypes.HMR_ACTIONS_SENT_TO_BROWSER.MIDDLEWARE_CHANGES\n            });\n          } else if (prevMiddleware === false && middleware) {\n            // Went from no middleware to middleware\n            sendHmr(\"endpoint-change\", \"middleware\", {\n              event: _hotreloadertypes.HMR_ACTIONS_SENT_TO_BROWSER.MIDDLEWARE_CHANGES\n            });\n          }\n          if (middleware) {\n            const processMiddleware = async () => {\n              var _middlewareManifests_get;\n              const writtenEndpoint = await processResult(\"middleware\", await middleware.endpoint.writeToDisk());\n              processIssues(\"middleware\", \"middleware\", writtenEndpoint);\n              await loadMiddlewareManifest(\"middleware\", \"middleware\");\n              serverFields.actualMiddlewareFile = \"middleware\";\n              serverFields.middleware = {\n                match: null,\n                page: \"/\",\n                matchers: (_middlewareManifests_get = middlewareManifests.get(\"middleware\")) == null ? void 0 : _middlewareManifests_get.middleware[\"/\"].matchers\n              };\n            };\n            await processMiddleware();\n            changeSubscription(\"middleware\", \"server\", false, middleware.endpoint, async () => {\n              const finishBuilding = startBuilding(\"middleware\", true);\n              await processMiddleware();\n              await propagateServerField(\"actualMiddlewareFile\", serverFields.actualMiddlewareFile);\n              await propagateServerField(\"middleware\", serverFields.middleware);\n              await writeMiddlewareManifest();\n              finishBuilding();\n              return {\n                event: _hotreloadertypes.HMR_ACTIONS_SENT_TO_BROWSER.MIDDLEWARE_CHANGES\n              };\n            });\n            prevMiddleware = true;\n          } else {\n            middlewareManifests.delete(\"middleware\");\n            serverFields.actualMiddlewareFile = undefined;\n            serverFields.middleware = undefined;\n            prevMiddleware = false;\n          }\n          await propagateServerField(\"actualMiddlewareFile\", serverFields.actualMiddlewareFile);\n          await propagateServerField(\"middleware\", serverFields.middleware);\n          currentEntriesHandlingResolve();\n          currentEntriesHandlingResolve = undefined;\n        }\n      }\n      handleEntries().catch(err => {\n        console.error(err);\n        process.exit(1);\n      });\n    } catch (e) {\n      console.error(e);\n    }\n    // Write empty manifests\n    await (0, _promises.mkdir)(_path.default.join(distDir, \"server\"), {\n      recursive: true\n    });\n    await (0, _promises.mkdir)(_path.default.join(distDir, \"static/development\"), {\n      recursive: true\n    });\n    await (0, _promises.writeFile)(_path.default.join(distDir, \"package.json\"), JSON.stringify({\n      type: \"commonjs\"\n    }, null, 2));\n    await currentEntriesHandling;\n    await writeBuildManifest(opts.fsChecker.rewrites);\n    await writeAppBuildManifest();\n    await writeFallbackBuildManifest();\n    await writePagesManifest();\n    await writeAppPathsManifest();\n    await writeMiddlewareManifest();\n    await writeActionManifest();\n    await writeFontManifest();\n    await writeLoadableManifest();\n    let hmrEventHappend = false;\n    if (process.env.NEXT_HMR_TIMING) {\n      (async proj => {\n        for await (const updateInfo of proj.updateInfoSubscribe()) {\n          if (hmrEventHappend) {\n            const time = updateInfo.duration;\n            const timeMessage = time > 2000 ? `${Math.round(time / 100) / 10}s` : `${time}ms`;\n            _log.event(`Compiled in ${timeMessage}`);\n            hmrEventHappend = false;\n          }\n        }\n      })(project);\n    }\n    const overlayMiddleware = (0, _middlewareturbopack.getOverlayMiddleware)(project);\n    const turbopackHotReloader = {\n      turbopackProject: project,\n      activeWebpackConfigs: undefined,\n      serverStats: null,\n      edgeServerStats: null,\n      async run(req, res, _parsedUrl) {\n        var _req_url;\n        // intercept page chunks request and ensure them with turbopack\n        if ((_req_url = req.url) == null ? void 0 : _req_url.startsWith(\"/_next/static/chunks/pages/\")) {\n          const params = (0, _hotreloaderwebpack.matchNextPageBundleRequest)(req.url);\n          if (params) {\n            const decodedPagePath = `/${params.path.map(param => decodeURIComponent(param)).join(\"/\")}`;\n            const denormalizedPagePath = (0, _denormalizepagepath.denormalizePagePath)(decodedPagePath);\n            await hotReloader.ensurePage({\n              page: denormalizedPagePath,\n              clientOnly: false,\n              definition: undefined\n            }).catch(console.error);\n          }\n        }\n        await overlayMiddleware(req, res);\n        // Request was not finished.\n        return {\n          finished: undefined\n        };\n      },\n      // TODO: Figure out if socket type can match the NextJsHotReloaderInterface\n      onHMR(req, socket, head) {\n        wsServer.handleUpgrade(req, socket, head, client => {\n          clients.add(client);\n          client.on(\"close\", () => clients.delete(client));\n          client.addEventListener(\"message\", ({\n            data\n          }) => {\n            const parsedData = JSON.parse(typeof data !== \"string\" ? data.toString() : data);\n            // Next.js messages\n            switch (parsedData.event) {\n              case \"ping\":\n                break;\n              case \"span-end\":\n              case \"client-error\":\n              case \"client-warning\":\n              case \"client-success\":\n              case \"server-component-reload-page\":\n              case \"client-reload-page\":\n              case \"client-removed-page\":\n              case \"client-full-reload\":\n              case \"client-added-page\":\n                break;\n              default:\n                // Might be a Turbopack message...\n                if (!parsedData.type) {\n                  throw new Error(`unrecognized HMR message \"${data}\"`);\n                }\n            }\n            // Turbopack messages\n            switch (parsedData.type) {\n              case \"turbopack-subscribe\":\n                subscribeToHmrEvents(parsedData.path, client);\n                break;\n              case \"turbopack-unsubscribe\":\n                unsubscribeToHmrEvents(parsedData.path, client);\n                break;\n              default:\n                if (!parsedData.event) {\n                  throw new Error(`unrecognized Turbopack HMR message \"${data}\"`);\n                }\n            }\n          });\n          const turbopackConnected = {\n            type: _hotreloadertypes.HMR_ACTIONS_SENT_TO_BROWSER.TURBOPACK_CONNECTED\n          };\n          client.send(JSON.stringify(turbopackConnected));\n        });\n      },\n      send(action) {\n        const payload = JSON.stringify(action);\n        for (const client of clients) {\n          client.send(payload);\n        }\n      },\n      setHmrServerError(_error) {\n        // Not implemented yet.\n      },\n      clearHmrServerError() {\n        // Not implemented yet.\n      },\n      async start() {\n        // Not implemented yet.\n      },\n      async stop() {\n        // Not implemented yet.\n      },\n      async getCompilationErrors(_page) {\n        return [];\n      },\n      invalidate() {\n        // Not implemented yet.\n      },\n      async buildFallbackError() {\n        // Not implemented yet.\n      },\n      async ensurePage({\n        page: inputPage,\n        // Unused parameters\n        // clientOnly,\n        // appPaths,\n        definition,\n        isApp\n      }) {\n        let page = (definition == null ? void 0 : definition.pathname) ?? inputPage;\n        if (page === \"/_error\") {\n          let finishBuilding = startBuilding(page);\n          try {\n            if (globalEntries.app) {\n              const writtenEndpoint = await processResult(\"_app\", await globalEntries.app.writeToDisk());\n              processIssues(\"_app\", \"_app\", writtenEndpoint);\n            }\n            await loadBuildManifest(\"_app\");\n            await loadPagesManifest(\"_app\");\n            if (globalEntries.document) {\n              const writtenEndpoint = await processResult(\"_document\", await globalEntries.document.writeToDisk());\n              changeSubscription(\"_document\", \"server\", false, globalEntries.document, () => {\n                return {\n                  action: _hotreloadertypes.HMR_ACTIONS_SENT_TO_BROWSER.RELOAD_PAGE\n                };\n              });\n              processIssues(\"_document\", \"_document\", writtenEndpoint);\n            }\n            await loadPagesManifest(\"_document\");\n            if (globalEntries.error) {\n              const writtenEndpoint = await processResult(\"_error\", await globalEntries.error.writeToDisk());\n              processIssues(page, page, writtenEndpoint);\n            }\n            await loadBuildManifest(\"_error\");\n            await loadPagesManifest(\"_error\");\n            await writeBuildManifest(opts.fsChecker.rewrites);\n            await writeFallbackBuildManifest();\n            await writePagesManifest();\n            await writeMiddlewareManifest();\n            await writeLoadableManifest();\n          } finally {\n            finishBuilding();\n          }\n          return;\n        }\n        await currentEntriesHandling;\n        const route = curEntries.get(page) ?? curEntries.get((0, _apppaths.normalizeAppPath)((0, _getmetadataroute.normalizeMetadataRoute)((definition == null ? void 0 : definition.page) ?? inputPage)));\n        if (!route) {\n          // TODO: why is this entry missing in turbopack?\n          if (page === \"/_app\") return;\n          if (page === \"/_document\") return;\n          if (page === \"/middleware\") return;\n          throw new _utils1.PageNotFoundError(`route not found ${page}`);\n        }\n        let suffix;\n        switch (route.type) {\n          case \"app-page\":\n            suffix = \"page\";\n            break;\n          case \"app-route\":\n            suffix = \"route\";\n            break;\n          case \"page\":\n          case \"page-api\":\n            suffix = \"\";\n            break;\n          default:\n            throw new Error(\"Unexpected route type \" + route.type);\n        }\n        const buildingKey = `${page}${!page.endsWith(\"/\") && suffix.length > 0 ? \"/\" : \"\"}${suffix}`;\n        let finishBuilding = undefined;\n        try {\n          switch (route.type) {\n            case \"page\":\n              {\n                if (isApp) {\n                  throw new Error(`mis-matched route type: isApp && page for ${page}`);\n                }\n                finishBuilding = startBuilding(buildingKey);\n                try {\n                  if (globalEntries.app) {\n                    const writtenEndpoint = await processResult(\"_app\", await globalEntries.app.writeToDisk());\n                    processIssues(\"_app\", \"_app\", writtenEndpoint);\n                  }\n                  await loadBuildManifest(\"_app\");\n                  await loadPagesManifest(\"_app\");\n                  if (globalEntries.document) {\n                    const writtenEndpoint = await processResult(\"_document\", await globalEntries.document.writeToDisk());\n                    changeSubscription(\"_document\", \"server\", false, globalEntries.document, () => {\n                      return {\n                        action: _hotreloadertypes.HMR_ACTIONS_SENT_TO_BROWSER.RELOAD_PAGE\n                      };\n                    });\n                    processIssues(\"_document\", \"_document\", writtenEndpoint);\n                  }\n                  await loadPagesManifest(\"_document\");\n                  const writtenEndpoint = await processResult(page, await route.htmlEndpoint.writeToDisk());\n                  const type = writtenEndpoint == null ? void 0 : writtenEndpoint.type;\n                  await loadBuildManifest(page);\n                  await loadPagesManifest(page);\n                  if (type === \"edge\") {\n                    await loadMiddlewareManifest(page, \"pages\");\n                  } else {\n                    middlewareManifests.delete(page);\n                  }\n                  await loadLoadableManifest(page, \"pages\");\n                  await writeBuildManifest(opts.fsChecker.rewrites);\n                  await writeFallbackBuildManifest();\n                  await writePagesManifest();\n                  await writeMiddlewareManifest();\n                  await writeLoadableManifest();\n                  processIssues(page, page, writtenEndpoint);\n                } finally {\n                  changeSubscription(page, \"server\", false, route.dataEndpoint, pageName => {\n                    console.log(\"server change\", pageName);\n                    return {\n                      event: _hotreloadertypes.HMR_ACTIONS_SENT_TO_BROWSER.SERVER_ONLY_CHANGES,\n                      pages: [pageName]\n                    };\n                  });\n                  changeSubscription(page, \"client\", false, route.htmlEndpoint, () => {\n                    return {\n                      event: _hotreloadertypes.HMR_ACTIONS_SENT_TO_BROWSER.CLIENT_CHANGES\n                    };\n                  });\n                }\n                break;\n              }\n            case \"page-api\":\n              {\n                // We don't throw on ensureOpts.isApp === true here\n                // since this can happen when app pages make\n                // api requests to page API routes.\n                finishBuilding = startBuilding(buildingKey);\n                const writtenEndpoint = await processResult(page, await route.endpoint.writeToDisk());\n                const type = writtenEndpoint == null ? void 0 : writtenEndpoint.type;\n                await loadPagesManifest(page);\n                if (type === \"edge\") {\n                  await loadMiddlewareManifest(page, \"pages\");\n                } else {\n                  middlewareManifests.delete(page);\n                }\n                await loadLoadableManifest(page, \"pages\");\n                await writePagesManifest();\n                await writeMiddlewareManifest();\n                await writeLoadableManifest();\n                processIssues(page, page, writtenEndpoint);\n                break;\n              }\n            case \"app-page\":\n              {\n                finishBuilding = startBuilding(buildingKey);\n                const writtenEndpoint = await processResult(page, await route.htmlEndpoint.writeToDisk());\n                changeSubscription(page, \"server\", true, route.rscEndpoint, (_page, change) => {\n                  if (change.issues.some(issue => issue.severity === \"error\")) {\n                    // Ignore any updates that has errors\n                    // There will be another update without errors eventually\n                    return;\n                  }\n                  return {\n                    action: _hotreloadertypes.HMR_ACTIONS_SENT_TO_BROWSER.SERVER_COMPONENT_CHANGES\n                  };\n                });\n                const type = writtenEndpoint == null ? void 0 : writtenEndpoint.type;\n                if (type === \"edge\") {\n                  await loadMiddlewareManifest(page, \"app\");\n                } else {\n                  middlewareManifests.delete(page);\n                }\n                await loadAppBuildManifest(page);\n                await loadBuildManifest(page, \"app\");\n                await loadAppPathManifest(page, \"app\");\n                await loadActionManifest(page);\n                await writeAppBuildManifest();\n                await writeBuildManifest(opts.fsChecker.rewrites);\n                await writeAppPathsManifest();\n                await writeMiddlewareManifest();\n                await writeActionManifest();\n                await writeLoadableManifest();\n                processIssues(page, page, writtenEndpoint, true);\n                break;\n              }\n            case \"app-route\":\n              {\n                finishBuilding = startBuilding(buildingKey);\n                const writtenEndpoint = await processResult(page, await route.endpoint.writeToDisk());\n                const type = writtenEndpoint == null ? void 0 : writtenEndpoint.type;\n                await loadAppPathManifest(page, \"app-route\");\n                if (type === \"edge\") {\n                  await loadMiddlewareManifest(page, \"app-route\");\n                } else {\n                  middlewareManifests.delete(page);\n                }\n                await writeAppBuildManifest();\n                await writeAppPathsManifest();\n                await writeMiddlewareManifest();\n                await writeMiddlewareManifest();\n                await writeLoadableManifest();\n                processIssues(page, page, writtenEndpoint, true);\n                break;\n              }\n            default:\n              {\n                throw new Error(`unknown route type ${route.type} for ${page}`);\n              }\n          }\n        } finally {\n          if (finishBuilding) finishBuilding();\n        }\n      }\n    };\n    hotReloader = turbopackHotReloader;\n  } else {\n    hotReloader = new _hotreloaderwebpack.default(opts.dir, {\n      appDir,\n      pagesDir,\n      distDir: distDir,\n      config: opts.nextConfig,\n      buildId: \"development\",\n      telemetry: opts.telemetry,\n      rewrites: opts.fsChecker.rewrites,\n      previewProps: opts.fsChecker.prerenderManifest.preview\n    });\n  }\n  await hotReloader.start();\n  if (opts.nextConfig.experimental.nextScriptWorkers) {\n    await (0, _verifypartytownsetup.verifyPartytownSetup)(opts.dir, _path.default.join(distDir, _constants.CLIENT_STATIC_FILES_PATH));\n  }\n  opts.fsChecker.ensureCallback(async function ensure(item) {\n    if (item.type === \"appFile\" || item.type === \"pageFile\") {\n      await hotReloader.ensurePage({\n        clientOnly: false,\n        page: item.itemPath,\n        isApp: item.type === \"appFile\",\n        definition: undefined\n      });\n    }\n  });\n  let resolved = false;\n  let prevSortedRoutes = [];\n  await new Promise(async (resolve, reject) => {\n    if (pagesDir) {\n      // Watchpack doesn't emit an event for an empty directory\n      _fs.default.readdir(pagesDir, (_, files) => {\n        if (files == null ? void 0 : files.length) {\n          return;\n        }\n        if (!resolved) {\n          resolve();\n          resolved = true;\n        }\n      });\n    }\n    const pages = pagesDir ? [pagesDir] : [];\n    const app = appDir ? [appDir] : [];\n    const directories = [...pages, ...app];\n    const rootDir = pagesDir || appDir;\n    const files = [...(0, _worker.getPossibleMiddlewareFilenames)(_path.default.join(rootDir, \"..\"), nextConfig.pageExtensions), ...(0, _worker.getPossibleInstrumentationHookFilenames)(_path.default.join(rootDir, \"..\"), nextConfig.pageExtensions)];\n    let nestedMiddleware = [];\n    const envFiles = [\".env.development.local\", \".env.local\", \".env.development\", \".env\"].map(file => _path.default.join(dir, file));\n    files.push(...envFiles);\n    // tsconfig/jsconfig paths hot-reloading\n    const tsconfigPaths = [_path.default.join(dir, \"tsconfig.json\"), _path.default.join(dir, \"jsconfig.json\")];\n    files.push(...tsconfigPaths);\n    const wp = new _watchpack.default({\n      ignored: pathname => {\n        return !files.some(file => file.startsWith(pathname)) && !directories.some(d => pathname.startsWith(d) || d.startsWith(pathname));\n      }\n    });\n    const fileWatchTimes = new Map();\n    let enabledTypeScript = usingTypeScript;\n    let previousClientRouterFilters;\n    let previousConflictingPagePaths = new Set();\n    wp.on(\"aggregated\", async () => {\n      var _serverFields_middleware, _serverFields_middleware1, _generateInterceptionRoutesRewrites;\n      let middlewareMatchers;\n      const routedPages = [];\n      const knownFiles = wp.getTimeInfoEntries();\n      const appPaths = {};\n      const pageNameSet = new Set();\n      const conflictingAppPagePaths = new Set();\n      const appPageFilePaths = new Map();\n      const pagesPageFilePaths = new Map();\n      let envChange = false;\n      let tsconfigChange = false;\n      let conflictingPageChange = 0;\n      let hasRootAppNotFound = false;\n      const {\n        appFiles,\n        pageFiles\n      } = opts.fsChecker;\n      appFiles.clear();\n      pageFiles.clear();\n      _shared1.devPageFiles.clear();\n      const sortedKnownFiles = [...knownFiles.keys()].sort((0, _entries.sortByPageExts)(nextConfig.pageExtensions));\n      for (const fileName of sortedKnownFiles) {\n        if (!files.includes(fileName) && !directories.some(d => fileName.startsWith(d))) {\n          continue;\n        }\n        const meta = knownFiles.get(fileName);\n        const watchTime = fileWatchTimes.get(fileName);\n        // If the file is showing up for the first time or the meta.timestamp is changed since last time\n        const watchTimeChange = watchTime === undefined || watchTime && watchTime !== (meta == null ? void 0 : meta.timestamp);\n        fileWatchTimes.set(fileName, meta.timestamp);\n        if (envFiles.includes(fileName)) {\n          if (watchTimeChange) {\n            envChange = true;\n          }\n          continue;\n        }\n        if (tsconfigPaths.includes(fileName)) {\n          if (fileName.endsWith(\"tsconfig.json\")) {\n            enabledTypeScript = true;\n          }\n          if (watchTimeChange) {\n            tsconfigChange = true;\n          }\n          continue;\n        }\n        if ((meta == null ? void 0 : meta.accuracy) === undefined || !validFileMatcher.isPageFile(fileName)) {\n          continue;\n        }\n        const isAppPath = Boolean(appDir && (0, _normalizepathsep.normalizePathSep)(fileName).startsWith((0, _normalizepathsep.normalizePathSep)(appDir) + \"/\"));\n        const isPagePath = Boolean(pagesDir && (0, _normalizepathsep.normalizePathSep)(fileName).startsWith((0, _normalizepathsep.normalizePathSep)(pagesDir) + \"/\"));\n        const rootFile = (0, _absolutepathtopage.absolutePathToPage)(fileName, {\n          dir: dir,\n          extensions: nextConfig.pageExtensions,\n          keepIndex: false,\n          pagesType: \"root\"\n        });\n        if ((0, _worker.isMiddlewareFile)(rootFile)) {\n          var _staticInfo_middleware;\n          const staticInfo = await (0, _entries.getStaticInfoIncludingLayouts)({\n            pageFilePath: fileName,\n            config: nextConfig,\n            appDir: appDir,\n            page: rootFile,\n            isDev: true,\n            isInsideAppDir: isAppPath,\n            pageExtensions: nextConfig.pageExtensions\n          });\n          if (nextConfig.output === \"export\") {\n            _log.error('Middleware cannot be used with \"output: export\". See more info here: https://nextjs.org/docs/advanced-features/static-html-export');\n            continue;\n          }\n          serverFields.actualMiddlewareFile = rootFile;\n          await propagateServerField(\"actualMiddlewareFile\", serverFields.actualMiddlewareFile);\n          middlewareMatchers = ((_staticInfo_middleware = staticInfo.middleware) == null ? void 0 : _staticInfo_middleware.matchers) || [{\n            regexp: \".*\",\n            originalSource: \"/:path*\"\n          }];\n          continue;\n        }\n        if ((0, _worker.isInstrumentationHookFile)(rootFile) && nextConfig.experimental.instrumentationHook) {\n          _buildcontext.NextBuildContext.hasInstrumentationHook = true;\n          serverFields.actualInstrumentationHookFile = rootFile;\n          await propagateServerField(\"actualInstrumentationHookFile\", serverFields.actualInstrumentationHookFile);\n          continue;\n        }\n        if (fileName.endsWith(\".ts\") || fileName.endsWith(\".tsx\")) {\n          enabledTypeScript = true;\n        }\n        if (!(isAppPath || isPagePath)) {\n          continue;\n        }\n        // Collect all current filenames for the TS plugin to use\n        _shared1.devPageFiles.add(fileName);\n        let pageName = (0, _absolutepathtopage.absolutePathToPage)(fileName, {\n          dir: isAppPath ? appDir : pagesDir,\n          extensions: nextConfig.pageExtensions,\n          keepIndex: isAppPath,\n          pagesType: isAppPath ? \"app\" : \"pages\"\n        });\n        if (!isAppPath && pageName.startsWith(\"/api/\") && nextConfig.output === \"export\") {\n          _log.error('API Routes cannot be used with \"output: export\". See more info here: https://nextjs.org/docs/advanced-features/static-html-export');\n          continue;\n        }\n        if (isAppPath) {\n          const isRootNotFound = validFileMatcher.isRootNotFound(fileName);\n          hasRootAppNotFound = true;\n          if (isRootNotFound) {\n            continue;\n          }\n          if (!isRootNotFound && !validFileMatcher.isAppRouterPage(fileName)) {\n            continue;\n          }\n          // Ignore files/directories starting with `_` in the app directory\n          if ((0, _normalizepathsep.normalizePathSep)(pageName).includes(\"/_\")) {\n            continue;\n          }\n          const originalPageName = pageName;\n          pageName = (0, _apppaths.normalizeAppPath)(pageName).replace(/%5F/g, \"_\");\n          if (!appPaths[pageName]) {\n            appPaths[pageName] = [];\n          }\n          appPaths[pageName].push(originalPageName);\n          if (useFileSystemPublicRoutes) {\n            appFiles.add(pageName);\n          }\n          if (routedPages.includes(pageName)) {\n            continue;\n          }\n        } else {\n          if (useFileSystemPublicRoutes) {\n            pageFiles.add(pageName);\n            // always add to nextDataRoutes for now but in future only add\n            // entries that actually use getStaticProps/getServerSideProps\n            opts.fsChecker.nextDataRoutes.add(pageName);\n          }\n        }\n        (isAppPath ? appPageFilePaths : pagesPageFilePaths).set(pageName, fileName);\n        if (appDir && pageNameSet.has(pageName)) {\n          conflictingAppPagePaths.add(pageName);\n        } else {\n          pageNameSet.add(pageName);\n        }\n        /**\n        * If there is a middleware that is not declared in the root we will\n        * warn without adding it so it doesn't make its way into the system.\n        */\n        if (/[\\\\\\\\/]_middleware$/.test(pageName)) {\n          nestedMiddleware.push(pageName);\n          continue;\n        }\n        routedPages.push(pageName);\n      }\n      const numConflicting = conflictingAppPagePaths.size;\n      conflictingPageChange = numConflicting - previousConflictingPagePaths.size;\n      if (conflictingPageChange !== 0) {\n        if (numConflicting > 0) {\n          let errorMessage = `Conflicting app and page file${numConflicting === 1 ? \" was\" : \"s were\"} found, please remove the conflicting files to continue:\\n`;\n          for (const p of conflictingAppPagePaths) {\n            const appPath = _path.default.relative(dir, appPageFilePaths.get(p));\n            const pagesPath = _path.default.relative(dir, pagesPageFilePaths.get(p));\n            errorMessage += `  \"${pagesPath}\" - \"${appPath}\"\\n`;\n          }\n          hotReloader.setHmrServerError(new Error(errorMessage));\n        } else if (numConflicting === 0) {\n          hotReloader.clearHmrServerError();\n          await propagateServerField(\"reloadMatchers\", undefined);\n        }\n      }\n      previousConflictingPagePaths = conflictingAppPagePaths;\n      let clientRouterFilters;\n      if (nextConfig.experimental.clientRouterFilter) {\n        clientRouterFilters = (0, _createclientrouterfilter.createClientRouterFilter)(Object.keys(appPaths), nextConfig.experimental.clientRouterFilterRedirects ? (nextConfig._originalRedirects || []).filter(r => !r.internal) : [], nextConfig.experimental.clientRouterFilterAllowedRate);\n        if (!previousClientRouterFilters || JSON.stringify(previousClientRouterFilters) !== JSON.stringify(clientRouterFilters)) {\n          envChange = true;\n          previousClientRouterFilters = clientRouterFilters;\n        }\n      }\n      if (!usingTypeScript && enabledTypeScript) {\n        // we tolerate the error here as this is best effort\n        // and the manual install command will be shown\n        await verifyTypeScript(opts).then(() => {\n          tsconfigChange = true;\n        }).catch(() => {});\n      }\n      if (envChange || tsconfigChange) {\n        var _hotReloader_activeWebpackConfigs;\n        if (envChange) {\n          // only log changes in router server\n          (0, _env.loadEnvConfig)(dir, true, _log, true, envFilePath => {\n            _log.info(`Reload env: ${envFilePath}`);\n          });\n          await propagateServerField(\"loadEnvConfig\", [{\n            dev: true,\n            forceReload: true,\n            silent: true\n          }]);\n        }\n        let tsconfigResult;\n        if (tsconfigChange) {\n          try {\n            tsconfigResult = await (0, _loadjsconfig.default)(dir, nextConfig);\n          } catch (_) {\n            /* do we want to log if there are syntax errors in tsconfig  while editing? */}\n        }\n        if (hotReloader.turbopackProject) {\n          const hasRewrites = opts.fsChecker.rewrites.afterFiles.length > 0 || opts.fsChecker.rewrites.beforeFiles.length > 0 || opts.fsChecker.rewrites.fallback.length > 0;\n          await hotReloader.turbopackProject.update({\n            defineEnv: (0, _swc.createDefineEnv)({\n              isTurbopack: true,\n              allowedRevalidateHeaderKeys: undefined,\n              clientRouterFilters,\n              config: nextConfig,\n              dev: true,\n              distDir,\n              fetchCacheKeyPrefix: undefined,\n              hasRewrites,\n              middlewareMatchers: undefined,\n              previewModeId: undefined\n            })\n          });\n        }\n        (_hotReloader_activeWebpackConfigs = hotReloader.activeWebpackConfigs) == null ? void 0 : _hotReloader_activeWebpackConfigs.forEach((config, idx) => {\n          const isClient = idx === 0;\n          const isNodeServer = idx === 1;\n          const isEdgeServer = idx === 2;\n          const hasRewrites = opts.fsChecker.rewrites.afterFiles.length > 0 || opts.fsChecker.rewrites.beforeFiles.length > 0 || opts.fsChecker.rewrites.fallback.length > 0;\n          if (tsconfigChange) {\n            var _config_resolve_plugins, _config_resolve;\n            (_config_resolve = config.resolve) == null ? void 0 : (_config_resolve_plugins = _config_resolve.plugins) == null ? void 0 : _config_resolve_plugins.forEach(plugin => {\n              // look for the JsConfigPathsPlugin and update with\n              // the latest paths/baseUrl config\n              if (plugin && plugin.jsConfigPlugin && tsconfigResult) {\n                var _config_resolve_modules, _config_resolve, _jsConfig_compilerOptions;\n                const {\n                  resolvedBaseUrl,\n                  jsConfig\n                } = tsconfigResult;\n                const currentResolvedBaseUrl = plugin.resolvedBaseUrl;\n                const resolvedUrlIndex = (_config_resolve = config.resolve) == null ? void 0 : (_config_resolve_modules = _config_resolve.modules) == null ? void 0 : _config_resolve_modules.findIndex(item => item === currentResolvedBaseUrl);\n                if (resolvedBaseUrl && resolvedBaseUrl !== currentResolvedBaseUrl) {\n                  var _config_resolve_modules1, _config_resolve1;\n                  // remove old baseUrl and add new one\n                  if (resolvedUrlIndex && resolvedUrlIndex > -1) {\n                    var _config_resolve_modules2, _config_resolve2;\n                    (_config_resolve2 = config.resolve) == null ? void 0 : (_config_resolve_modules2 = _config_resolve2.modules) == null ? void 0 : _config_resolve_modules2.splice(resolvedUrlIndex, 1);\n                  }\n                  (_config_resolve1 = config.resolve) == null ? void 0 : (_config_resolve_modules1 = _config_resolve1.modules) == null ? void 0 : _config_resolve_modules1.push(resolvedBaseUrl);\n                }\n                if ((jsConfig == null ? void 0 : (_jsConfig_compilerOptions = jsConfig.compilerOptions) == null ? void 0 : _jsConfig_compilerOptions.paths) && resolvedBaseUrl) {\n                  Object.keys(plugin.paths).forEach(key => {\n                    delete plugin.paths[key];\n                  });\n                  Object.assign(plugin.paths, jsConfig.compilerOptions.paths);\n                  plugin.resolvedBaseUrl = resolvedBaseUrl;\n                }\n              }\n            });\n          }\n          if (envChange) {\n            var _config_plugins;\n            (_config_plugins = config.plugins) == null ? void 0 : _config_plugins.forEach(plugin => {\n              // we look for the DefinePlugin definitions so we can\n              // update them on the active compilers\n              if (plugin && typeof plugin.definitions === \"object\" && plugin.definitions.__NEXT_DEFINE_ENV) {\n                const newDefine = (0, _defineenvplugin.getDefineEnv)({\n                  isTurbopack: false,\n                  allowedRevalidateHeaderKeys: undefined,\n                  clientRouterFilters,\n                  config: nextConfig,\n                  dev: true,\n                  distDir,\n                  fetchCacheKeyPrefix: undefined,\n                  hasRewrites,\n                  isClient,\n                  isEdgeServer,\n                  isNodeOrEdgeCompilation: isNodeServer || isEdgeServer,\n                  isNodeServer,\n                  middlewareMatchers: undefined,\n                  previewModeId: undefined\n                });\n                Object.keys(plugin.definitions).forEach(key => {\n                  if (!(key in newDefine)) {\n                    delete plugin.definitions[key];\n                  }\n                });\n                Object.assign(plugin.definitions, newDefine);\n              }\n            });\n          }\n        });\n        hotReloader.invalidate({\n          reloadAfterInvalidation: envChange\n        });\n      }\n      if (nestedMiddleware.length > 0) {\n        _log.error(new _worker.NestedMiddlewareError(nestedMiddleware, dir, pagesDir || appDir).message);\n        nestedMiddleware = [];\n      }\n      // Make sure to sort parallel routes to make the result deterministic.\n      serverFields.appPathRoutes = Object.fromEntries(Object.entries(appPaths).map(([k, v]) => [k, v.sort()]));\n      await propagateServerField(\"appPathRoutes\", serverFields.appPathRoutes);\n      // TODO: pass this to fsChecker/next-dev-server?\n      serverFields.middleware = middlewareMatchers ? {\n        match: null,\n        page: \"/\",\n        matchers: middlewareMatchers\n      } : undefined;\n      await propagateServerField(\"middleware\", serverFields.middleware);\n      serverFields.hasAppNotFound = hasRootAppNotFound;\n      opts.fsChecker.middlewareMatcher = ((_serverFields_middleware = serverFields.middleware) == null ? void 0 : _serverFields_middleware.matchers) ? (0, _middlewareroutematcher.getMiddlewareRouteMatcher)((_serverFields_middleware1 = serverFields.middleware) == null ? void 0 : _serverFields_middleware1.matchers) : undefined;\n      opts.fsChecker.interceptionRoutes = ((_generateInterceptionRoutesRewrites = (0, _generateinterceptionroutesrewrites.generateInterceptionRoutesRewrites)(Object.keys(appPaths))) == null ? void 0 : _generateInterceptionRoutesRewrites.map(item => (0, _filesystem.buildCustomRoute)(\"before_files_rewrite\", item, opts.nextConfig.basePath, opts.nextConfig.experimental.caseSensitiveRoutes))) || [];\n      const exportPathMap = typeof nextConfig.exportPathMap === \"function\" && (await (nextConfig.exportPathMap == null ? void 0 : nextConfig.exportPathMap.call(nextConfig, {}, {\n        dev: true,\n        dir: opts.dir,\n        outDir: null,\n        distDir: distDir,\n        buildId: \"development\"\n      }))) || {};\n      for (const [key, value] of Object.entries(exportPathMap || {})) {\n        opts.fsChecker.interceptionRoutes.push((0, _filesystem.buildCustomRoute)(\"before_files_rewrite\", {\n          source: key,\n          destination: `${value.page}${value.query ? \"?\" : \"\"}${_querystring.default.stringify(value.query)}`\n        }, opts.nextConfig.basePath, opts.nextConfig.experimental.caseSensitiveRoutes));\n      }\n      try {\n        // we serve a separate manifest with all pages for the client in\n        // dev mode so that we can match a page after a rewrite on the client\n        // before it has been built and is populated in the _buildManifest\n        const sortedRoutes = (0, _utils.getSortedRoutes)(routedPages);\n        opts.fsChecker.dynamicRoutes = sortedRoutes.map(page => {\n          const regex = (0, _routeregex.getRouteRegex)(page);\n          return {\n            regex: regex.re.toString(),\n            match: (0, _routematcher.getRouteMatcher)(regex),\n            page\n          };\n        });\n        const dataRoutes = [];\n        for (const page of sortedRoutes) {\n          const route = (0, _builddataroute.buildDataRoute)(page, \"development\");\n          const routeRegex = (0, _routeregex.getRouteRegex)(route.page);\n          dataRoutes.push({\n            ...route,\n            regex: routeRegex.re.toString(),\n            match: (0, _routematcher.getRouteMatcher)({\n              // TODO: fix this in the manifest itself, must also be fixed in\n              // upstream builder that relies on this\n              re: opts.nextConfig.i18n ? new RegExp(route.dataRouteRegex.replace(`/development/`, `/development/(?<nextLocale>[^/]+?)/`)) : new RegExp(route.dataRouteRegex),\n              groups: routeRegex.groups\n            })\n          });\n        }\n        opts.fsChecker.dynamicRoutes.unshift(...dataRoutes);\n        if (!(prevSortedRoutes == null ? void 0 : prevSortedRoutes.every((val, idx) => val === sortedRoutes[idx]))) {\n          const addedRoutes = sortedRoutes.filter(route => !prevSortedRoutes.includes(route));\n          const removedRoutes = prevSortedRoutes.filter(route => !sortedRoutes.includes(route));\n          // emit the change so clients fetch the update\n          hotReloader.send({\n            action: _hotreloadertypes.HMR_ACTIONS_SENT_TO_BROWSER.DEV_PAGES_MANIFEST_UPDATE,\n            data: [{\n              devPagesManifest: true\n            }]\n          });\n          addedRoutes.forEach(route => {\n            hotReloader.send({\n              action: _hotreloadertypes.HMR_ACTIONS_SENT_TO_BROWSER.ADDED_PAGE,\n              data: [route]\n            });\n          });\n          removedRoutes.forEach(route => {\n            hotReloader.send({\n              action: _hotreloadertypes.HMR_ACTIONS_SENT_TO_BROWSER.REMOVED_PAGE,\n              data: [route]\n            });\n          });\n        }\n        prevSortedRoutes = sortedRoutes;\n        if (!resolved) {\n          resolve();\n          resolved = true;\n        }\n      } catch (e) {\n        if (!resolved) {\n          reject(e);\n          resolved = true;\n        } else {\n          _log.warn(\"Failed to reload dynamic routes:\", e);\n        }\n      } finally {\n        // Reload the matchers. The filesystem would have been written to,\n        // and the matchers need to re-scan it to update the router.\n        await propagateServerField(\"reloadMatchers\", undefined);\n      }\n    });\n    wp.watch({\n      directories: [dir],\n      startTime: 0\n    });\n  });\n  const clientPagesManifestPath = `/_next/${_constants.CLIENT_STATIC_FILES_PATH}/development/${_constants.DEV_CLIENT_PAGES_MANIFEST}`;\n  opts.fsChecker.devVirtualFsItems.add(clientPagesManifestPath);\n  const devMiddlewareManifestPath = `/_next/${_constants.CLIENT_STATIC_FILES_PATH}/development/${_constants.DEV_MIDDLEWARE_MANIFEST}`;\n  opts.fsChecker.devVirtualFsItems.add(devMiddlewareManifestPath);\n  async function requestHandler(req, res) {\n    var _parsedUrl_pathname, _parsedUrl_pathname1;\n    const parsedUrl = _url.default.parse(req.url || \"/\");\n    if ((_parsedUrl_pathname = parsedUrl.pathname) == null ? void 0 : _parsedUrl_pathname.includes(clientPagesManifestPath)) {\n      res.statusCode = 200;\n      res.setHeader(\"Content-Type\", \"application/json; charset=utf-8\");\n      res.end(JSON.stringify({\n        pages: prevSortedRoutes.filter(route => !opts.fsChecker.appFiles.has(route))\n      }));\n      return {\n        finished: true\n      };\n    }\n    if ((_parsedUrl_pathname1 = parsedUrl.pathname) == null ? void 0 : _parsedUrl_pathname1.includes(devMiddlewareManifestPath)) {\n      var _serverFields_middleware;\n      res.statusCode = 200;\n      res.setHeader(\"Content-Type\", \"application/json; charset=utf-8\");\n      res.end(JSON.stringify(((_serverFields_middleware = serverFields.middleware) == null ? void 0 : _serverFields_middleware.matchers) || []));\n      return {\n        finished: true\n      };\n    }\n    return {\n      finished: false\n    };\n  }\n  async function logErrorWithOriginalStack(err, type) {\n    let usedOriginalStack = false;\n    if ((0, _iserror.default)(err) && err.stack) {\n      try {\n        const frames = (0, _middleware.parseStack)(err.stack);\n        // Filter out internal edge related runtime stack\n        const frame = frames.find(({\n          file\n        }) => !(file == null ? void 0 : file.startsWith(\"eval\")) && !(file == null ? void 0 : file.includes(\"web/adapter\")) && !(file == null ? void 0 : file.includes(\"web/globals\")) && !(file == null ? void 0 : file.includes(\"sandbox/context\")) && !(file == null ? void 0 : file.includes(\"<anonymous>\")));\n        let originalFrame, isEdgeCompiler;\n        const frameFile = frame == null ? void 0 : frame.file;\n        if ((frame == null ? void 0 : frame.lineNumber) && frameFile) {\n          if (opts.turbo) {\n            try {\n              originalFrame = await (0, _middlewareturbopack.createOriginalStackFrame)(project, {\n                file: frameFile,\n                methodName: frame.methodName,\n                line: frame.lineNumber ?? 0,\n                column: frame.column,\n                isServer: true\n              });\n            } catch {}\n          } else {\n            var _hotReloader_edgeServerStats, _hotReloader_serverStats, _frame_file, _frame_file1;\n            const moduleId = frameFile.replace(/^(webpack-internal:\\/\\/\\/|file:\\/\\/)/, \"\");\n            const modulePath = frameFile.replace(/^(webpack-internal:\\/\\/\\/|file:\\/\\/)(\\(.*\\)\\/)?/, \"\");\n            const src = (0, _middleware.getErrorSource)(err);\n            isEdgeCompiler = src === _constants.COMPILER_NAMES.edgeServer;\n            const compilation = isEdgeCompiler ? (_hotReloader_edgeServerStats = hotReloader.edgeServerStats) == null ? void 0 : _hotReloader_edgeServerStats.compilation : (_hotReloader_serverStats = hotReloader.serverStats) == null ? void 0 : _hotReloader_serverStats.compilation;\n            const source = await (0, _middleware.getSourceById)(!!((_frame_file = frame.file) == null ? void 0 : _frame_file.startsWith(_path.default.sep)) || !!((_frame_file1 = frame.file) == null ? void 0 : _frame_file1.startsWith(\"file:\")), moduleId, compilation);\n            try {\n              var _hotReloader_serverStats1, _hotReloader_edgeServerStats1;\n              originalFrame = await (0, _middleware.createOriginalStackFrame)({\n                line: frame.lineNumber,\n                column: frame.column,\n                source,\n                frame,\n                moduleId,\n                modulePath,\n                rootDirectory: opts.dir,\n                errorMessage: err.message,\n                serverCompilation: isEdgeCompiler ? undefined : (_hotReloader_serverStats1 = hotReloader.serverStats) == null ? void 0 : _hotReloader_serverStats1.compilation,\n                edgeCompilation: isEdgeCompiler ? (_hotReloader_edgeServerStats1 = hotReloader.edgeServerStats) == null ? void 0 : _hotReloader_edgeServerStats1.compilation : undefined\n              });\n            } catch {}\n          }\n          if (originalFrame) {\n            const {\n              originalCodeFrame,\n              originalStackFrame\n            } = originalFrame;\n            const {\n              file,\n              lineNumber,\n              column,\n              methodName\n            } = originalStackFrame;\n            _log[type === \"warning\" ? \"warn\" : \"error\"](`${file} (${lineNumber}:${column}) @ ${methodName}`);\n            if (isEdgeCompiler) {\n              err = err.message;\n            }\n            if (type === \"warning\") {\n              _log.warn(err);\n            } else if (type === \"app-dir\") {\n              (0, _logappdirerror.logAppDirError)(err);\n            } else if (type) {\n              _log.error(`${type}:`, err);\n            } else {\n              _log.error(err);\n            }\n            console[type === \"warning\" ? \"warn\" : \"error\"](originalCodeFrame);\n            usedOriginalStack = true;\n          }\n        }\n      } catch (_) {\n        // failed to load original stack using source maps\n        // this un-actionable by users so we don't show the\n        // internal error and only show the provided stack\n      }\n    }\n    if (!usedOriginalStack) {\n      if (type === \"warning\") {\n        _log.warn(err);\n      } else if (type === \"app-dir\") {\n        (0, _logappdirerror.logAppDirError)(err);\n      } else if (type) {\n        _log.error(`${type}:`, err);\n      } else {\n        _log.error(err);\n      }\n    }\n  }\n  return {\n    serverFields,\n    hotReloader,\n    requestHandler,\n    logErrorWithOriginalStack,\n    async ensureMiddleware() {\n      if (!serverFields.actualMiddlewareFile) return;\n      return hotReloader.ensurePage({\n        page: serverFields.actualMiddlewareFile,\n        clientOnly: false,\n        definition: undefined\n      });\n    }\n  };\n}\nasync function setupDevBundler(opts) {\n  const isSrcDir = _path.default.relative(opts.dir, opts.pagesDir || opts.appDir || \"\").startsWith(\"src\");\n  const result = await startWatcher(opts);\n  opts.telemetry.record((0, _events.eventCliSession)(_path.default.join(opts.dir, opts.nextConfig.distDir), opts.nextConfig, {\n    webpackVersion: 5,\n    isSrcDir,\n    turboFlag: false,\n    cliCommand: \"dev\",\n    appDir: !!opts.appDir,\n    pagesDir: !!opts.pagesDir,\n    isCustomServer: !!opts.isCustomServer,\n    hasNowJson: !!(await (0, _findup.default)(\"now.json\", {\n      cwd: opts.dir\n    }))\n  }));\n  return result;\n}","map":{"version":3,"names":["setupDevBundler","wsServer","_ws","default","Server","noServer","verifyTypeScript","opts","usingTypeScript","verifyResult","_verifytypescriptsetup","verifyTypeScriptSetup","dir","distDir","nextConfig","intentDirs","pagesDir","appDir","filter","Boolean","typeCheckPreflight","tsconfigPath","typescript","disableStaticImages","images","hasAppDir","hasPagesDir","version","startWatcher","useFileSystemPublicRoutes","_path","join","_shared","setGlobal","_constants","PHASE_DEVELOPMENT_SERVER","validFileMatcher","_findpagefile","createValidFileMatcher","pageExtensions","propagateServerField","field","args","_opts_renderServer_instance","_opts_renderServer","renderServer","instance","serverFields","hotReloader","project","turbo","loadBindings","require","bindings","jsConfig","_loadjsconfig","process","env","TURBOPACK","NEXT_TEST_MODE","log","testMode","hasRewrites","fsChecker","rewrites","afterFiles","length","beforeFiles","fallback","createProject","projectPath","rootPath","experimental","outputFileTracingRoot","compilerOptions","watch","defineEnv","_swc","createDefineEnv","isTurbopack","allowedRevalidateHeaderKeys","undefined","clientRouterFilters","config","dev","fetchCacheKeyPrefix","middlewareMatchers","previewModeId","serverAddr","port","iter","entrypointsSubscribe","curEntries","Map","changeSubscriptions","prevMiddleware","globalEntries","app","document","error","currentEntriesHandlingResolve","currentEntriesHandling","Promise","resolve","hmrPayloads","turbopackUpdates","hmrBuilding","issues","issueKey","issue","severity","filePath","title","description","formatIssue","source","detail","formattedTitle","replace","message","formattedFilePath","replaceAll","start","end","line","column","content","codeFrameColumns","forceColor","ModuleBuildError","Error","processIssues","displayName","name","result","throwIssue","oldSet","get","newSet","set","relevantIssues","Set","key","formatted","has","console","add","size","serverPathState","processResult","id","hasChange","path","p","contentHash","serverPaths","endsWith","localHash","globaHash","hasAppPaths","some","startsWith","_nextjsrequirecachehotreloader","deleteAppClientCache","map","file","_renderserver","clearModuleContext","deleteCache","buildingIds","readyIds","startBuilding","forceRebuild","_store","store","setState","loading","trigger","send","action","_hotreloadertypes","HMR_ACTIONS_SENT_TO_BROWSER","BUILDING","finishBuilding","delete","FINISH_BUILDING","hmrHash","sendHmrDebounce","_utils2","debounce","errors","issueMap","details","BUILT","hash","String","values","warnings","payload","clear","type","TURBOPACK_MESSAGE","data","sendHmr","hmrEventHappend","sendTurbopackMessage","push","loadPartialManifest","pageName","manifestPath","posix","JSON","parse","_promises","readFile","buildManifests","appBuildManifests","pagesManifests","appPathsManifests","middlewareManifests","actionManifests","clientToHmrSubscription","loadbleManifests","clients","loadMiddlewareManifest","MIDDLEWARE_MANIFEST","loadBuildManifest","BUILD_MANIFEST","loadAppBuildManifest","APP_BUILD_MANIFEST","loadPagesManifest","PAGES_MANIFEST","loadAppPathManifest","APP_PATHS_MANIFEST","loadActionManifest","SERVER_REFERENCE_MANIFEST","loadLoadableManifest","REACT_LOADABLE_MANIFEST","changeSubscription","page","includeIssues","endpoint","makePayload","changedPromise","changed","change","clearChangeSubscription","subscription","return","call","mergeBuildManifests","manifests","manifest","pages","devFiles","ampDevFiles","polyfillFiles","lowPriorityFiles","rootMainFiles","ampFirstPages","m","Object","assign","mergeAppBuildManifests","mergePagesManifests","mergeMiddlewareManifests","middleware","sortedMiddleware","functions","fun","concat","matcher","matchers","regexp","_pathtoregexp","pathToRegexp","originalSource","delimiter","sensitive","strict","keys","mergeActionManifests","node","edge","encryptionKey","_actionencryptionutils","generateRandomActionKeyRaw","mergeActionIds","actionEntries","other","workers","layer","mergeLoadableManifests","writeFileAtomic","tempPath","Math","random","toString","slice","writeFile","rename","e","unlink","writeBuildManifest","buildManifest","buildManifestPath","middlewareBuildManifestPath","MIDDLEWARE_BUILD_MANIFEST","stringify","__rewrites","_buildmanifestplugin","normalizeRewritesForBuildManifest","fromEntries","pathname","sortedPages","buildManifestJs","srcEmptySsgManifest","writeFallbackBuildManifest","fallbackBuildManifest","fallbackBuildManifestPath","writeAppBuildManifest","appBuildManifest","appBuildManifestPath","writePagesManifest","pagesManifest","pagesManifestPath","writeAppPathsManifest","appPathsManifest","appPathsManifestPath","writeMiddlewareManifest","middlewareManifest","middlewareManifestPath","writeActionManifest","actionManifest","actionManifestJsonPath","actionManifestJsPath","json","writeFontManifest","fontManifest","appUsingSizeAdjust","pagesUsingSizeAdjust","fontManifestJsonPath","NEXT_FONT_MANIFEST","fontManifestJsPath","writeLoadableManifest","loadableManifest","loadableManifestPath","middlewareloadableManifestPath","MIDDLEWARE_REACT_LOADABLE_MANIFEST","subscribeToHmrEvents","client","mapping","hmrEvents","next","reloadAction","RELOAD_PAGE","close","unsubscribeToHmrEvents","handleEntries","entrypoints","pagesAppEndpoint","pagesDocumentEndpoint","pagesErrorEndpoint","route","routes","_log","info","subscriptionPromise","event","MIDDLEWARE_CHANGES","processMiddleware","_middlewareManifests_get","writtenEndpoint","writeToDisk","actualMiddlewareFile","match","catch","err","exit","mkdir","recursive","NEXT_HMR_TIMING","proj","updateInfo","updateInfoSubscribe","time","duration","timeMessage","round","overlayMiddleware","_middlewareturbopack","getOverlayMiddleware","turbopackHotReloader","turbopackProject","activeWebpackConfigs","serverStats","edgeServerStats","run","req","res","_parsedUrl","_req_url","url","params","_hotreloaderwebpack","matchNextPageBundleRequest","decodedPagePath","param","decodeURIComponent","denormalizedPagePath","_denormalizepagepath","denormalizePagePath","ensurePage","clientOnly","definition","finished","onHMR","socket","head","handleUpgrade","on","addEventListener","parsedData","turbopackConnected","TURBOPACK_CONNECTED","setHmrServerError","_error","clearHmrServerError","stop","getCompilationErrors","_page","invalidate","buildFallbackError","inputPage","isApp","_apppaths","normalizeAppPath","_getmetadataroute","normalizeMetadataRoute","_utils1","PageNotFoundError","suffix","buildingKey","htmlEndpoint","dataEndpoint","SERVER_ONLY_CHANGES","CLIENT_CHANGES","rscEndpoint","SERVER_COMPONENT_CHANGES","buildId","telemetry","previewProps","prerenderManifest","preview","nextScriptWorkers","_verifypartytownsetup","verifyPartytownSetup","CLIENT_STATIC_FILES_PATH","ensureCallback","ensure","item","itemPath","resolved","prevSortedRoutes","reject","_fs","readdir","_","files","directories","rootDir","_worker","getPossibleMiddlewareFilenames","getPossibleInstrumentationHookFilenames","nestedMiddleware","envFiles","tsconfigPaths","wp","_watchpack","ignored","d","fileWatchTimes","enabledTypeScript","previousClientRouterFilters","previousConflictingPagePaths","_serverFields_middleware","_serverFields_middleware1","_generateInterceptionRoutesRewrites","routedPages","knownFiles","getTimeInfoEntries","appPaths","pageNameSet","conflictingAppPagePaths","appPageFilePaths","pagesPageFilePaths","envChange","tsconfigChange","conflictingPageChange","hasRootAppNotFound","appFiles","pageFiles","_shared1","devPageFiles","sortedKnownFiles","sort","_entries","sortByPageExts","fileName","includes","meta","watchTime","watchTimeChange","timestamp","accuracy","isPageFile","isAppPath","_normalizepathsep","normalizePathSep","isPagePath","rootFile","_absolutepathtopage","absolutePathToPage","extensions","keepIndex","pagesType","isMiddlewareFile","_staticInfo_middleware","staticInfo","getStaticInfoIncludingLayouts","pageFilePath","isDev","isInsideAppDir","output","isInstrumentationHookFile","instrumentationHook","_buildcontext","NextBuildContext","hasInstrumentationHook","actualInstrumentationHookFile","isRootNotFound","isAppRouterPage","originalPageName","nextDataRoutes","test","numConflicting","errorMessage","appPath","relative","pagesPath","clientRouterFilter","_createclientrouterfilter","createClientRouterFilter","clientRouterFilterRedirects","_originalRedirects","r","internal","clientRouterFilterAllowedRate","then","_hotReloader_activeWebpackConfigs","_env","loadEnvConfig","envFilePath","forceReload","silent","tsconfigResult","update","forEach","idx","isClient","isNodeServer","isEdgeServer","_config_resolve_plugins","_config_resolve","plugins","plugin","jsConfigPlugin","_config_resolve_modules","_jsConfig_compilerOptions","resolvedBaseUrl","currentResolvedBaseUrl","resolvedUrlIndex","modules","findIndex","_config_resolve_modules1","_config_resolve1","_config_resolve_modules2","_config_resolve2","splice","paths","_config_plugins","definitions","__NEXT_DEFINE_ENV","newDefine","_defineenvplugin","getDefineEnv","isNodeOrEdgeCompilation","reloadAfterInvalidation","NestedMiddlewareError","appPathRoutes","entries","k","v","hasAppNotFound","middlewareMatcher","_middlewareroutematcher","getMiddlewareRouteMatcher","interceptionRoutes","_generateinterceptionroutesrewrites","generateInterceptionRoutesRewrites","_filesystem","buildCustomRoute","basePath","caseSensitiveRoutes","exportPathMap","outDir","value","destination","query","_querystring","sortedRoutes","_utils","getSortedRoutes","dynamicRoutes","regex","_routeregex","getRouteRegex","re","_routematcher","getRouteMatcher","dataRoutes","_builddataroute","buildDataRoute","routeRegex","i18n","RegExp","dataRouteRegex","groups","unshift","every","val","addedRoutes","removedRoutes","DEV_PAGES_MANIFEST_UPDATE","devPagesManifest","ADDED_PAGE","REMOVED_PAGE","warn","startTime","clientPagesManifestPath","DEV_CLIENT_PAGES_MANIFEST","devVirtualFsItems","devMiddlewareManifestPath","DEV_MIDDLEWARE_MANIFEST","requestHandler","_parsedUrl_pathname","_parsedUrl_pathname1","parsedUrl","_url","statusCode","setHeader","logErrorWithOriginalStack","usedOriginalStack","_iserror","stack","frames","_middleware","parseStack","frame","find","originalFrame","isEdgeCompiler","frameFile","lineNumber","createOriginalStackFrame","methodName","isServer","_hotReloader_edgeServerStats","_hotReloader_serverStats","_frame_file","_frame_file1","moduleId","modulePath","src","getErrorSource","COMPILER_NAMES","edgeServer","compilation","getSourceById","sep","_hotReloader_serverStats1","_hotReloader_edgeServerStats1","rootDirectory","serverCompilation","edgeCompilation","originalCodeFrame","originalStackFrame","_logappdirerror","logAppDirError","ensureMiddleware","isSrcDir","record","_events","eventCliSession","webpackVersion","turboFlag","cliCommand","isCustomServer","hasNowJson","_findup","cwd"],"sources":["../../../../src/server/lib/router-utils/setup-dev-bundler.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}