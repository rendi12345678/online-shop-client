{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"DevAppRouteRouteMatcherProvider\", {\n  enumerable: true,\n  get: function () {\n    return DevAppRouteRouteMatcherProvider;\n  }\n});\nconst _approuteroutematcher = require(\"../../route-matchers/app-route-route-matcher\");\nconst _routekind = require(\"../../route-kind\");\nconst _filecacheroutematcherprovider = require(\"./file-cache-route-matcher-provider\");\nconst _isapprouteroute = require(\"../../../../lib/is-app-route-route\");\nconst _app = require(\"../../normalizers/built/app\");\nclass DevAppRouteRouteMatcherProvider extends _filecacheroutematcherprovider.FileCacheRouteMatcherProvider {\n  constructor(appDir, extensions, reader) {\n    super(appDir, reader);\n    this.normalizers = new _app.DevAppNormalizers(appDir, extensions);\n  }\n  async transform(files) {\n    const matchers = [];\n    for (const filename of files) {\n      const page = this.normalizers.page.normalize(filename);\n      // If the file isn't a match for this matcher, then skip it.\n      if (!(0, _isapprouteroute.isAppRouteRoute)(page)) continue;\n      // Validate that this is not an ignored page.\n      if (page.includes(\"/_\")) continue;\n      const pathname = this.normalizers.pathname.normalize(filename);\n      const bundlePath = this.normalizers.bundlePath.normalize(filename);\n      matchers.push(new _approuteroutematcher.AppRouteRouteMatcher({\n        kind: _routekind.RouteKind.APP_ROUTE,\n        pathname,\n        page,\n        bundlePath,\n        filename\n      }));\n    }\n    return matchers;\n  }\n}","map":{"version":3,"names":["DevAppRouteRouteMatcherProvider","_filecacheroutematcherprovider","FileCacheRouteMatcherProvider","constructor","appDir","extensions","reader","normalizers","_app","DevAppNormalizers","transform","files","matchers","filename","page","normalize","_isapprouteroute","isAppRouteRoute","includes","pathname","bundlePath","push","_approuteroutematcher","AppRouteRouteMatcher","kind","_routekind","RouteKind","APP_ROUTE"],"sources":["../../../../../src/server/future/route-matcher-providers/dev/dev-app-route-route-matcher-provider.ts"],"sourcesContent":[null],"mappings":";;;;;+BAQa;;;WAAAA,+BAAA;;;sCANwB;2BACX;+CACoB;iCACd;qBACE;AAE3B,MAAMA,+BAAA,SAAwCC,8BAAA,CAAAC,6BAA6B;EAOhFC,YACEC,MAAc,EACdC,UAAiC,EACjCC,MAAkB,EAClB;IACA,KAAK,CAACF,MAAA,EAAQE,MAAA;IAEd,IAAI,CAACC,WAAW,GAAG,IAAIC,IAAA,CAAAC,iBAAiB,CAACL,MAAA,EAAQC,UAAA;EACnD;EAEA,MAAgBK,UACdC,KAA4B,EACkB;IAC9C,MAAMC,QAAA,GAAwC,EAAE;IAChD,KAAK,MAAMC,QAAA,IAAYF,KAAA,EAAO;MAC5B,MAAMG,IAAA,GAAO,IAAI,CAACP,WAAW,CAACO,IAAI,CAACC,SAAS,CAACF,QAAA;MAE7C;MACA,IAAI,CAAC,IAAAG,gBAAA,CAAAC,eAAe,EAACH,IAAA,GAAO;MAE5B;MACA,IAAIA,IAAA,CAAKI,QAAQ,CAAC,OAAO;MAEzB,MAAMC,QAAA,GAAW,IAAI,CAACZ,WAAW,CAACY,QAAQ,CAACJ,SAAS,CAACF,QAAA;MACrD,MAAMO,UAAA,GAAa,IAAI,CAACb,WAAW,CAACa,UAAU,CAACL,SAAS,CAACF,QAAA;MAEzDD,QAAA,CAASS,IAAI,CACX,IAAIC,qBAAA,CAAAC,oBAAoB,CAAC;QACvBC,IAAA,EAAMC,UAAA,CAAAC,SAAS,CAACC,SAAS;QACzBR,QAAA;QACAL,IAAA;QACAM,UAAA;QACAP;MACF;IAEJ;IAEA,OAAOD,QAAA;EACT;AACF"},"metadata":{},"sourceType":"script","externalDependencies":[]}