{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"removePathPrefix\", {\n  enumerable: true,\n  get: function () {\n    return removePathPrefix;\n  }\n});\nconst _pathhasprefix = require(\"./path-has-prefix\");\nfunction removePathPrefix(path, prefix) {\n  // If the path doesn't start with the prefix we can return it as is. This\n  // protects us from situations where the prefix is a substring of the path\n  // prefix such as:\n  //\n  // For prefix: /blog\n  //\n  //   /blog -> true\n  //   /blog/ -> true\n  //   /blog/1 -> true\n  //   /blogging -> false\n  //   /blogging/ -> false\n  //   /blogging/1 -> false\n  if (!(0, _pathhasprefix.pathHasPrefix)(path, prefix)) {\n    return path;\n  }\n  // Remove the prefix from the path via slicing.\n  const withoutPrefix = path.slice(prefix.length);\n  // If the path without the prefix starts with a `/` we can return it as is.\n  if (withoutPrefix.startsWith(\"/\")) {\n    return withoutPrefix;\n  }\n  // If the path without the prefix doesn't start with a `/` we need to add it\n  // back to the path to make sure it's a valid path.\n  return \"/\" + withoutPrefix;\n}","map":{"version":3,"names":["removePathPrefix","path","prefix","_pathhasprefix","pathHasPrefix","withoutPrefix","slice","length","startsWith"],"sources":["../../../../../src/shared/lib/router/utils/remove-path-prefix.ts"],"sourcesContent":[null],"mappings":";;;;;+BAUgB;;;WAAAA,gBAAA;;;+BAVc;AAUvB,SAASA,iBAAiBC,IAAY,EAAEC,MAAc;EAC3D;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAI,CAAC,IAAAC,cAAA,CAAAC,aAAa,EAACH,IAAA,EAAMC,MAAA,GAAS;IAChC,OAAOD,IAAA;EACT;EAEA;EACA,MAAMI,aAAA,GAAgBJ,IAAA,CAAKK,KAAK,CAACJ,MAAA,CAAOK,MAAM;EAE9C;EACA,IAAIF,aAAA,CAAcG,UAAU,CAAC,MAAM;IACjC,OAAOH,aAAA;EACT;EAEA;EACA;EACA,OAAO,GAAC,GAAGA,aAAA;AACb"},"metadata":{},"sourceType":"script","externalDependencies":[]}