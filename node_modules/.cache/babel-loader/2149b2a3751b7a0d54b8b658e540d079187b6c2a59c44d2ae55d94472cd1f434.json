{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n0 && (module.exports = {\n  matchRemotePattern: null,\n  hasMatch: null\n});\nfunction _export(target, all) {\n  for (var name in all) Object.defineProperty(target, name, {\n    enumerable: true,\n    get: all[name]\n  });\n}\n_export(exports, {\n  matchRemotePattern: function () {\n    return matchRemotePattern;\n  },\n  hasMatch: function () {\n    return hasMatch;\n  }\n});\nconst _micromatch = require(\"next/dist/compiled/micromatch\");\nfunction matchRemotePattern(pattern, url) {\n  if (pattern.protocol !== undefined) {\n    const actualProto = url.protocol.slice(0, -1);\n    if (pattern.protocol !== actualProto) {\n      return false;\n    }\n  }\n  if (pattern.port !== undefined) {\n    if (pattern.port !== url.port) {\n      return false;\n    }\n  }\n  if (pattern.hostname === undefined) {\n    throw new Error(\"Pattern should define hostname but found\\n\" + JSON.stringify(pattern));\n  } else {\n    if (!(0, _micromatch.makeRe)(pattern.hostname).test(url.hostname)) {\n      return false;\n    }\n  }\n  var _pattern_pathname;\n  if (!(0, _micromatch.makeRe)((_pattern_pathname = pattern.pathname) != null ? _pattern_pathname : \"**\").test(url.pathname)) {\n    return false;\n  }\n  return true;\n}\nfunction hasMatch(domains, remotePatterns, url) {\n  return domains.some(domain => url.hostname === domain) || remotePatterns.some(p => matchRemotePattern(p, url));\n}","map":{"version":3,"names":["matchRemotePattern","hasMatch","pattern","url","protocol","undefined","actualProto","slice","port","hostname","Error","JSON","stringify","_micromatch","makeRe","test","_pattern_pathname","pathname","domains","remotePatterns","some","domain","p"],"sources":["../../../src/shared/lib/match-remote-pattern.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;EAGgBA,kBAAkB,WAAAA,CAAA;WAAlBA,kBAAA;;EA8BAC,QAAQ,WAAAA,CAAA;WAARA,QAAA;;;4BAhCO;AAEhB,SAASD,mBAAmBE,OAAsB,EAAEC,GAAQ;EACjE,IAAID,OAAA,CAAQE,QAAQ,KAAKC,SAAA,EAAW;IAClC,MAAMC,WAAA,GAAcH,GAAA,CAAIC,QAAQ,CAACG,KAAK,CAAC,GAAG,CAAC;IAC3C,IAAIL,OAAA,CAAQE,QAAQ,KAAKE,WAAA,EAAa;MACpC,OAAO;IACT;EACF;EACA,IAAIJ,OAAA,CAAQM,IAAI,KAAKH,SAAA,EAAW;IAC9B,IAAIH,OAAA,CAAQM,IAAI,KAAKL,GAAA,CAAIK,IAAI,EAAE;MAC7B,OAAO;IACT;EACF;EAEA,IAAIN,OAAA,CAAQO,QAAQ,KAAKJ,SAAA,EAAW;IAClC,MAAM,IAAIK,KAAA,CACR,4CAAC,GAA4CC,IAAA,CAAKC,SAAS,CAACV,OAAA;EAEhE,OAAO;IACL,IAAI,CAAC,IAAAW,WAAA,CAAAC,MAAM,EAACZ,OAAA,CAAQO,QAAQ,EAAEM,IAAI,CAACZ,GAAA,CAAIM,QAAQ,GAAG;MAChD,OAAO;IACT;EACF;MAEYO,iBAAA;EAAZ,IAAI,CAAC,IAAAH,WAAA,CAAAC,MAAM,EAAC,CAAAE,iBAAA,GAAAd,OAAA,CAAQe,QAAQ,YAAhBD,iBAAA,GAAoB,MAAMD,IAAI,CAACZ,GAAA,CAAIc,QAAQ,GAAG;IACxD,OAAO;EACT;EAEA,OAAO;AACT;AAEO,SAAShB,SACdiB,OAAiB,EACjBC,cAA+B,EAC/BhB,GAAQ;EAER,OACEe,OAAA,CAAQE,IAAI,CAAEC,MAAA,IAAWlB,GAAA,CAAIM,QAAQ,KAAKY,MAAA,KAC1CF,cAAA,CAAeC,IAAI,CAAEE,CAAA,IAAMtB,kBAAA,CAAmBsB,CAAA,EAAGnB,GAAA;AAErD"},"metadata":{},"sourceType":"script","externalDependencies":[]}