{"ast":null,"code":"/**\n * This is a TypeScript language service plugin for Next.js app directory,\n * it provides the following features:\n *\n * - Warns about disallowed React APIs in server components.\n * - Warns about disallowed layout and page exports.\n * - Autocompletion for entry configurations.\n * - Hover hint and docs for entry configurations.\n */\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"createTSPlugin\", {\n  enumerable: true,\n  get: function () {\n    return createTSPlugin;\n  }\n});\nconst _utils = require(\"./utils\");\nconst _constant = require(\"./constant\");\nconst _config = /*#__PURE__*/_interop_require_default(require(\"./rules/config\"));\nconst _server = /*#__PURE__*/_interop_require_default(require(\"./rules/server\"));\nconst _entry = /*#__PURE__*/_interop_require_default(require(\"./rules/entry\"));\nconst _clientboundary = /*#__PURE__*/_interop_require_default(require(\"./rules/client-boundary\"));\nconst _metadata = /*#__PURE__*/_interop_require_default(require(\"./rules/metadata\"));\nconst _error = /*#__PURE__*/_interop_require_default(require(\"./rules/error\"));\nfunction _interop_require_default(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nconst createTSPlugin = ({\n  typescript: ts\n}) => {\n  function create(info) {\n    (0, _utils.init)({\n      ts,\n      info\n    });\n    // Set up decorator object\n    const proxy = Object.create(null);\n    for (let k of Object.keys(info.languageService)) {\n      const x = info.languageService[k];\n      proxy[k] = (...args) => x.apply(info.languageService, args);\n    }\n    // Auto completion\n    proxy.getCompletionsAtPosition = (fileName, position, options) => {\n      let prior = info.languageService.getCompletionsAtPosition(fileName, position, options) || {\n        isGlobalCompletion: false,\n        isMemberCompletion: false,\n        isNewIdentifierLocation: false,\n        entries: []\n      };\n      if (!(0, _utils.isAppEntryFile)(fileName)) return prior;\n      // If it's a server entry.\n      if (!(0, _utils.getIsClientEntry)(fileName)) {\n        // Remove specified entries from completion list\n        prior.entries = _server.default.filterCompletionsAtPosition(prior.entries);\n        // Provide autocompletion for metadata fields\n        prior = _metadata.default.filterCompletionsAtPosition(fileName, position, options, prior);\n      }\n      // Add auto completions for export configs.\n      _config.default.addCompletionsAtPosition(fileName, position, prior);\n      const source = (0, _utils.getSource)(fileName);\n      if (!source) return prior;\n      ts.forEachChild(source, node => {\n        // Auto completion for default export function's props.\n        if ((0, _utils.isPositionInsideNode)(position, node) && (0, _utils.isDefaultFunctionExport)(node)) {\n          prior.entries.push(..._entry.default.getCompletionsAtPosition(fileName, node, position));\n        }\n      });\n      return prior;\n    };\n    // Show auto completion details\n    proxy.getCompletionEntryDetails = (fileName, position, entryName, formatOptions, source, preferences, data) => {\n      const entryCompletionEntryDetails = _config.default.getCompletionEntryDetails(entryName, data);\n      if (entryCompletionEntryDetails) return entryCompletionEntryDetails;\n      const metadataCompletionEntryDetails = _metadata.default.getCompletionEntryDetails(fileName, position, entryName, formatOptions, source, preferences, data);\n      if (metadataCompletionEntryDetails) return metadataCompletionEntryDetails;\n      return info.languageService.getCompletionEntryDetails(fileName, position, entryName, formatOptions, source, preferences, data);\n    };\n    // Quick info\n    proxy.getQuickInfoAtPosition = (fileName, position) => {\n      const prior = info.languageService.getQuickInfoAtPosition(fileName, position);\n      if (!(0, _utils.isAppEntryFile)(fileName)) return prior;\n      // Remove type suggestions for disallowed APIs in server components.\n      if (!(0, _utils.getIsClientEntry)(fileName)) {\n        const definitions = info.languageService.getDefinitionAtPosition(fileName, position);\n        if (definitions && _server.default.hasDisallowedReactAPIDefinition(definitions)) {\n          return;\n        }\n        const metadataInfo = _metadata.default.getQuickInfoAtPosition(fileName, position);\n        if (metadataInfo) return metadataInfo;\n      }\n      const overridden = _config.default.getQuickInfoAtPosition(fileName, position);\n      if (overridden) return overridden;\n      return prior;\n    };\n    // Show errors for disallowed imports\n    proxy.getSemanticDiagnostics = fileName => {\n      const prior = info.languageService.getSemanticDiagnostics(fileName);\n      const source = (0, _utils.getSource)(fileName);\n      if (!source) return prior;\n      let isClientEntry = false;\n      const isAppEntry = (0, _utils.isAppEntryFile)(fileName);\n      try {\n        isClientEntry = (0, _utils.getIsClientEntry)(fileName, true);\n      } catch (e) {\n        prior.push({\n          file: source,\n          category: ts.DiagnosticCategory.Error,\n          code: _constant.NEXT_TS_ERRORS.MISPLACED_CLIENT_ENTRY,\n          ...e\n        });\n        isClientEntry = false;\n      }\n      if ((0, _utils.isInsideApp)(fileName)) {\n        const errorDiagnostic = _error.default.getSemanticDiagnostics(source, isClientEntry);\n        prior.push(...errorDiagnostic);\n      }\n      ts.forEachChild(source, node => {\n        var _node_modifiers, _node_modifiers1;\n        if (ts.isImportDeclaration(node)) {\n          // import ...\n          if (isAppEntry) {\n            if (!isClientEntry) {\n              // Check if it has valid imports in the server layer\n              const diagnostics = _server.default.getSemanticDiagnosticsForImportDeclaration(source, node);\n              prior.push(...diagnostics);\n            }\n          }\n        } else if (ts.isVariableStatement(node) && ((_node_modifiers = node.modifiers) == null ? void 0 : _node_modifiers.some(m => m.kind === ts.SyntaxKind.ExportKeyword))) {\n          // export const ...\n          if (isAppEntry) {\n            // Check if it has correct option exports\n            const diagnostics = _config.default.getSemanticDiagnosticsForExportVariableStatement(source, node);\n            const metadataDiagnostics = isClientEntry ? _metadata.default.getSemanticDiagnosticsForExportVariableStatementInClientEntry(fileName, node) : _metadata.default.getSemanticDiagnosticsForExportVariableStatement(fileName, node);\n            prior.push(...diagnostics, ...metadataDiagnostics);\n          }\n          if (isClientEntry) {\n            prior.push(..._clientboundary.default.getSemanticDiagnosticsForExportVariableStatement(source, node));\n          }\n        } else if ((0, _utils.isDefaultFunctionExport)(node)) {\n          // export default function ...\n          if (isAppEntry) {\n            const diagnostics = _entry.default.getSemanticDiagnostics(fileName, source, node);\n            prior.push(...diagnostics);\n          }\n          if (isClientEntry) {\n            prior.push(..._clientboundary.default.getSemanticDiagnosticsForFunctionExport(source, node));\n          }\n        } else if (ts.isFunctionDeclaration(node) && ((_node_modifiers1 = node.modifiers) == null ? void 0 : _node_modifiers1.some(m => m.kind === ts.SyntaxKind.ExportKeyword))) {\n          // export function ...\n          if (isAppEntry) {\n            const metadataDiagnostics = isClientEntry ? _metadata.default.getSemanticDiagnosticsForExportVariableStatementInClientEntry(fileName, node) : _metadata.default.getSemanticDiagnosticsForExportVariableStatement(fileName, node);\n            prior.push(...metadataDiagnostics);\n          }\n          if (isClientEntry) {\n            prior.push(..._clientboundary.default.getSemanticDiagnosticsForFunctionExport(source, node));\n          }\n        } else if (ts.isExportDeclaration(node)) {\n          // export { ... }\n          if (isAppEntry) {\n            const metadataDiagnostics = isClientEntry ? _metadata.default.getSemanticDiagnosticsForExportDeclarationInClientEntry(fileName, node) : _metadata.default.getSemanticDiagnosticsForExportDeclaration(fileName, node);\n            prior.push(...metadataDiagnostics);\n          }\n        }\n      });\n      return prior;\n    };\n    // Get definition and link for specific node\n    proxy.getDefinitionAndBoundSpan = (fileName, position) => {\n      if ((0, _utils.isAppEntryFile)(fileName) && !(0, _utils.getIsClientEntry)(fileName)) {\n        const metadataDefinition = _metadata.default.getDefinitionAndBoundSpan(fileName, position);\n        if (metadataDefinition) return metadataDefinition;\n      }\n      return info.languageService.getDefinitionAndBoundSpan(fileName, position);\n    };\n    return proxy;\n  }\n  return {\n    create\n  };\n};","map":{"version":3,"names":["createTSPlugin","typescript","ts","create","info","_utils","init","proxy","Object","k","keys","languageService","x","args","apply","getCompletionsAtPosition","fileName","position","options","prior","isGlobalCompletion","isMemberCompletion","isNewIdentifierLocation","entries","isAppEntryFile","getIsClientEntry","_server","default","filterCompletionsAtPosition","_metadata","_config","addCompletionsAtPosition","source","getSource","forEachChild","node","isPositionInsideNode","isDefaultFunctionExport","push","_entry","getCompletionEntryDetails","entryName","formatOptions","preferences","data","entryCompletionEntryDetails","metadataCompletionEntryDetails","getQuickInfoAtPosition","definitions","getDefinitionAtPosition","hasDisallowedReactAPIDefinition","metadataInfo","overridden","getSemanticDiagnostics","isClientEntry","isAppEntry","e","file","category","DiagnosticCategory","Error","code","_constant","NEXT_TS_ERRORS","MISPLACED_CLIENT_ENTRY","isInsideApp","errorDiagnostic","_error","_node_modifiers","_node_modifiers1","isImportDeclaration","diagnostics","getSemanticDiagnosticsForImportDeclaration","isVariableStatement","modifiers","some","m","kind","SyntaxKind","ExportKeyword","getSemanticDiagnosticsForExportVariableStatement","metadataDiagnostics","getSemanticDiagnosticsForExportVariableStatementInClientEntry","_clientboundary","getSemanticDiagnosticsForFunctionExport","isFunctionDeclaration","isExportDeclaration","getSemanticDiagnosticsForExportDeclarationInClientEntry","getSemanticDiagnosticsForExportDeclaration","getDefinitionAndBoundSpan","metadataDefinition"],"sources":["../../../src/server/typescript/index.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}