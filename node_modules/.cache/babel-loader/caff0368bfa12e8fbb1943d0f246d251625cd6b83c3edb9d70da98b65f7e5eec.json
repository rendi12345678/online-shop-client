{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"tryGetPreviewData\", {\n  enumerable: true,\n  get: function () {\n    return tryGetPreviewData;\n  }\n});\nconst _ = require(\"../.\");\nconst _index = require(\"../index\");\nconst _cookies = require(\"../../web/spec-extension/cookies\");\nconst _headers = require(\"../../web/spec-extension/adapters/headers\");\nfunction tryGetPreviewData(req, res, options) {\n  var _cookies_get, _cookies_get1;\n  // if an On-Demand revalidation is being done preview mode\n  // is disabled\n  if (options && (0, _.checkIsOnDemandRevalidate)(req, options).isOnDemandRevalidate) {\n    return false;\n  }\n  // Read cached preview data if present\n  // TODO: use request metadata instead of a symbol\n  if (_index.SYMBOL_PREVIEW_DATA in req) {\n    return req[_index.SYMBOL_PREVIEW_DATA];\n  }\n  const headers = _headers.HeadersAdapter.from(req.headers);\n  const cookies = new _cookies.RequestCookies(headers);\n  const previewModeId = (_cookies_get = cookies.get(_index.COOKIE_NAME_PRERENDER_BYPASS)) == null ? void 0 : _cookies_get.value;\n  const tokenPreviewData = (_cookies_get1 = cookies.get(_index.COOKIE_NAME_PRERENDER_DATA)) == null ? void 0 : _cookies_get1.value;\n  // Case: preview mode cookie set but data cookie is not set\n  if (previewModeId && !tokenPreviewData && previewModeId === options.previewModeId) {\n    // This is \"Draft Mode\" which doesn't use\n    // previewData, so we return an empty object\n    // for backwards compat with \"Preview Mode\".\n    const data = {};\n    Object.defineProperty(req, _index.SYMBOL_PREVIEW_DATA, {\n      value: data,\n      enumerable: false\n    });\n    return data;\n  }\n  // Case: neither cookie is set.\n  if (!previewModeId && !tokenPreviewData) {\n    return false;\n  }\n  // Case: one cookie is set, but not the other.\n  if (!previewModeId || !tokenPreviewData) {\n    (0, _index.clearPreviewData)(res);\n    return false;\n  }\n  // Case: preview session is for an old build.\n  if (previewModeId !== options.previewModeId) {\n    (0, _index.clearPreviewData)(res);\n    return false;\n  }\n  let encryptedPreviewData;\n  try {\n    const jsonwebtoken = require(\"next/dist/compiled/jsonwebtoken\");\n    encryptedPreviewData = jsonwebtoken.verify(tokenPreviewData, options.previewModeSigningKey);\n  } catch {\n    // TODO: warn\n    (0, _index.clearPreviewData)(res);\n    return false;\n  }\n  const {\n    decryptWithSecret\n  } = require(\"../../crypto-utils\");\n  const decryptedPreviewData = decryptWithSecret(Buffer.from(options.previewModeEncryptionKey), encryptedPreviewData.data);\n  try {\n    // TODO: strict runtime type checking\n    const data = JSON.parse(decryptedPreviewData);\n    // Cache lookup\n    Object.defineProperty(req, _index.SYMBOL_PREVIEW_DATA, {\n      value: data,\n      enumerable: false\n    });\n    return data;\n  } catch {\n    return false;\n  }\n}","map":{"version":3,"names":["tryGetPreviewData","req","res","options","_cookies_get","_cookies_get1","_","checkIsOnDemandRevalidate","isOnDemandRevalidate","_index","SYMBOL_PREVIEW_DATA","headers","_headers","HeadersAdapter","from","cookies","_cookies","RequestCookies","previewModeId","get","COOKIE_NAME_PRERENDER_BYPASS","value","tokenPreviewData","COOKIE_NAME_PRERENDER_DATA","data","Object","defineProperty","enumerable","clearPreviewData","encryptedPreviewData","jsonwebtoken","require","verify","previewModeSigningKey","decryptWithSecret","decryptedPreviewData","Buffer","previewModeEncryptionKey","JSON","parse"],"sources":["../../../../src/server/api-utils/node/try-get-preview-data.ts"],"sourcesContent":[null],"mappings":";;;;;+BAgBgB;;;WAAAA,iBAAA;;;kBAd0B;uBAUnC;yBACwB;yBACA;AAExB,SAASA,kBACdC,GAAgD,EAChDC,GAAsC,EACtCC,OAA0B;MAiBJC,YAAA,EACGC,aAAA;EAhBzB;EACA;EACA,IAAIF,OAAA,IAAW,IAAAG,CAAA,CAAAC,yBAAyB,EAACN,GAAA,EAAKE,OAAA,EAASK,oBAAoB,EAAE;IAC3E,OAAO;EACT;EAEA;EACA;EACA,IAAIC,MAAA,CAAAC,mBAAmB,IAAIT,GAAA,EAAK;IAC9B,OAAOA,GAAY,CAACQ,MAAA,CAAAC,mBAAmB,CAAC;EAC1C;EAEA,MAAMC,OAAA,GAAUC,QAAA,CAAAC,cAAc,CAACC,IAAI,CAACb,GAAA,CAAIU,OAAO;EAC/C,MAAMI,OAAA,GAAU,IAAIC,QAAA,CAAAC,cAAc,CAACN,OAAA;EAEnC,MAAMO,aAAA,IAAgBd,YAAA,GAAAW,OAAA,CAAQI,GAAG,CAACV,MAAA,CAAAW,4BAA4B,sBAAxChB,YAAA,CAA2CiB,KAAK;EACtE,MAAMC,gBAAA,IAAmBjB,aAAA,GAAAU,OAAA,CAAQI,GAAG,CAACV,MAAA,CAAAc,0BAA0B,sBAAtClB,aAAA,CAAyCgB,KAAK;EAEvE;EACA,IACEH,aAAA,IACA,CAACI,gBAAA,IACDJ,aAAA,KAAkBf,OAAA,CAAQe,aAAa,EACvC;IACA;IACA;IACA;IACA,MAAMM,IAAA,GAAO,CAAC;IACdC,MAAA,CAAOC,cAAc,CAACzB,GAAA,EAAKQ,MAAA,CAAAC,mBAAmB,EAAE;MAC9CW,KAAA,EAAOG,IAAA;MACPG,UAAA,EAAY;IACd;IACA,OAAOH,IAAA;EACT;EAEA;EACA,IAAI,CAACN,aAAA,IAAiB,CAACI,gBAAA,EAAkB;IACvC,OAAO;EACT;EAEA;EACA,IAAI,CAACJ,aAAA,IAAiB,CAACI,gBAAA,EAAkB;IACvC,IAAAb,MAAA,CAAAmB,gBAAgB,EAAC1B,GAAA;IACjB,OAAO;EACT;EAEA;EACA,IAAIgB,aAAA,KAAkBf,OAAA,CAAQe,aAAa,EAAE;IAC3C,IAAAT,MAAA,CAAAmB,gBAAgB,EAAC1B,GAAA;IACjB,OAAO;EACT;EAEA,IAAI2B,oBAAA;EAGJ,IAAI;IACF,MAAMC,YAAA,GACJC,OAAA,CAAQ;IACVF,oBAAA,GAAuBC,YAAA,CAAaE,MAAM,CACxCV,gBAAA,EACAnB,OAAA,CAAQ8B,qBAAqB;EAEjC,EAAE,MAAM;IACN;IACA,IAAAxB,MAAA,CAAAmB,gBAAgB,EAAC1B,GAAA;IACjB,OAAO;EACT;EAEA,MAAM;IAAEgC;EAAiB,CAAE,GACzBH,OAAA,CAAQ;EACV,MAAMI,oBAAA,GAAuBD,iBAAA,CAC3BE,MAAA,CAAOtB,IAAI,CAACX,OAAA,CAAQkC,wBAAwB,GAC5CR,oBAAA,CAAqBL,IAAI;EAG3B,IAAI;IACF;IACA,MAAMA,IAAA,GAAOc,IAAA,CAAKC,KAAK,CAACJ,oBAAA;IACxB;IACAV,MAAA,CAAOC,cAAc,CAACzB,GAAA,EAAKQ,MAAA,CAAAC,mBAAmB,EAAE;MAC9CW,KAAA,EAAOG,IAAA;MACPG,UAAA,EAAY;IACd;IACA,OAAOH,IAAA;EACT,EAAE,MAAM;IACN,OAAO;EACT;AACF"},"metadata":{},"sourceType":"script","externalDependencies":[]}