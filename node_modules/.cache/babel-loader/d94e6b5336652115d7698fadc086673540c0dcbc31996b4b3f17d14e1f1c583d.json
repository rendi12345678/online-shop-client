{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"StaticGenerationAsyncStorageWrapper\", {\n  enumerable: true,\n  get: function () {\n    return StaticGenerationAsyncStorageWrapper;\n  }\n});\nconst StaticGenerationAsyncStorageWrapper = {\n  wrap(storage, {\n    urlPathname,\n    renderOpts\n  }, callback) {\n    /**\n    * Rules of Static & Dynamic HTML:\n    *\n    *    1.) We must generate static HTML unless the caller explicitly opts\n    *        in to dynamic HTML support.\n    *\n    *    2.) If dynamic HTML support is requested, we must honor that request\n    *        or throw an error. It is the sole responsibility of the caller to\n    *        ensure they aren't e.g. requesting dynamic HTML for an AMP page.\n    *\n    *    3.) If the request is in draft mode, we must generate dynamic HTML.\n    *\n    *    4.) If the request is a server action, we must generate dynamic HTML.\n    *\n    * These rules help ensure that other existing features like request caching,\n    * coalescing, and ISR continue working as intended.\n    */\n    const isStaticGeneration = !renderOpts.supportsDynamicHTML && !renderOpts.isDraftMode && !renderOpts.isServerAction;\n    const store = {\n      isStaticGeneration,\n      urlPathname,\n      pagePath: renderOpts.originalPathname,\n      incrementalCache:\n      // we fallback to a global incremental cache for edge-runtime locally\n      // so that it can access the fs cache without mocks\n      renderOpts.incrementalCache || globalThis.__incrementalCache,\n      isRevalidate: renderOpts.isRevalidate,\n      isPrerendering: renderOpts.nextExport,\n      fetchCache: renderOpts.fetchCache,\n      isOnDemandRevalidate: renderOpts.isOnDemandRevalidate,\n      isDraftMode: renderOpts.isDraftMode,\n      experimental: {\n        ppr: renderOpts.ppr\n      }\n    };\n    // TODO: remove this when we resolve accessing the store outside the execution context\n    renderOpts.store = store;\n    return storage.run(store, callback, store);\n  }\n};","map":{"version":3,"names":["StaticGenerationAsyncStorageWrapper","wrap","storage","urlPathname","renderOpts","callback","isStaticGeneration","supportsDynamicHTML","isDraftMode","isServerAction","store","pagePath","originalPathname","incrementalCache","globalThis","__incrementalCache","isRevalidate","isPrerendering","nextExport","fetchCache","isOnDemandRevalidate","experimental","ppr","run"],"sources":["../../../src/server/async-storage/static-generation-async-storage-wrapper.ts"],"sourcesContent":[null],"mappings":";;;;;+BAiCa;;;WAAAA,mCAAA;;;AAAN,MAAMA,mCAAA,GAGT;EACFC,KACEC,OAAiD,EACjD;IAAEC,WAAW;IAAEC;EAAU,CAA2B,EACpDC,QAAkD;IAElD;;;;;;;;;;;;;;;;;IAiBA,MAAMC,kBAAA,GACJ,CAACF,UAAA,CAAWG,mBAAmB,IAC/B,CAACH,UAAA,CAAWI,WAAW,IACvB,CAACJ,UAAA,CAAWK,cAAc;IAE5B,MAAMC,KAAA,GAA+B;MACnCJ,kBAAA;MACAH,WAAA;MACAQ,QAAA,EAAUP,UAAA,CAAWQ,gBAAgB;MACrCC,gBAAA;MACE;MACA;MACAT,UAAA,CAAWS,gBAAgB,IAAIC,UAAC,CAAmBC,kBAAkB;MACvEC,YAAA,EAAcZ,UAAA,CAAWY,YAAY;MACrCC,cAAA,EAAgBb,UAAA,CAAWc,UAAU;MACrCC,UAAA,EAAYf,UAAA,CAAWe,UAAU;MACjCC,oBAAA,EAAsBhB,UAAA,CAAWgB,oBAAoB;MAErDZ,WAAA,EAAaJ,UAAA,CAAWI,WAAW;MACnCa,YAAA,EAAc;QACZC,GAAA,EAAKlB,UAAA,CAAWkB;MAClB;IACF;IAEA;IACAlB,UAAA,CAAWM,KAAK,GAAGA,KAAA;IAEnB,OAAOR,OAAA,CAAQqB,GAAG,CAACb,KAAA,EAAOL,QAAA,EAAUK,KAAA;EACtC;AACF"},"metadata":{},"sourceType":"script","externalDependencies":[]}