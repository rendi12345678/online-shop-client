{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function () {\n    return DevServer;\n  }\n});\nconst _fs = /*#__PURE__*/_interop_require_default(require(\"fs\"));\nconst _jestworker = require(\"next/dist/compiled/jest-worker\");\nconst _path = require(\"path\");\nconst _output = require(\"../../build/output\");\nconst _constants = require(\"../../lib/constants\");\nconst _findpagesdir = require(\"../../lib/find-pages-dir\");\nconst _constants1 = require(\"../../shared/lib/constants\");\nconst _nextserver = /*#__PURE__*/_interop_require_wildcard(require(\"../next-server\"));\nconst _normalizepagepath = require(\"../../shared/lib/page-path/normalize-page-path\");\nconst _pathhasprefix = require(\"../../shared/lib/router/utils/path-has-prefix\");\nconst _removepathprefix = require(\"../../shared/lib/router/utils/remove-path-prefix\");\nconst _storage = require(\"../../telemetry/storage\");\nconst _trace = require(\"../../trace\");\nconst _findpagefile = require(\"../lib/find-page-file\");\nconst _utils = require(\"../lib/utils\");\nconst _coalescedfunction = require(\"../../lib/coalesced-function\");\nconst _loaddefaulterrorcomponents = require(\"../load-default-error-components\");\nconst _utils1 = require(\"../../shared/lib/utils\");\nconst _log = /*#__PURE__*/_interop_require_wildcard(require(\"../../build/output/log\"));\nconst _iserror = /*#__PURE__*/_interop_require_wildcard(require(\"../../lib/is-error\"));\nconst _utils2 = require(\"../../build/utils\");\nconst _formatservererror = require(\"../../lib/format-server-error\");\nconst _devroutematchermanager = require(\"../future/route-matcher-managers/dev-route-matcher-manager\");\nconst _devpagesroutematcherprovider = require(\"../future/route-matcher-providers/dev/dev-pages-route-matcher-provider\");\nconst _devpagesapiroutematcherprovider = require(\"../future/route-matcher-providers/dev/dev-pages-api-route-matcher-provider\");\nconst _devapppageroutematcherprovider = require(\"../future/route-matcher-providers/dev/dev-app-page-route-matcher-provider\");\nconst _devapprouteroutematcherprovider = require(\"../future/route-matcher-providers/dev/dev-app-route-route-matcher-provider\");\nconst _nodemanifestloader = require(\"../future/route-matcher-providers/helpers/manifest-loaders/node-manifest-loader\");\nconst _batchedfilereader = require(\"../future/route-matcher-providers/dev/helpers/file-reader/batched-file-reader\");\nconst _defaultfilereader = require(\"../future/route-matcher-providers/dev/helpers/file-reader/default-file-reader\");\nconst _buildcontext = require(\"../../build/build-context\");\nconst _lrucache = /*#__PURE__*/_interop_require_default(require(\"next/dist/compiled/lru-cache\"));\nconst _middlewareroutematcher = require(\"../../shared/lib/router/utils/middleware-route-matcher\");\nconst _detachedpromise = require(\"../../lib/detached-promise\");\nconst _ispostpone = require(\"../lib/router-utils/is-postpone\");\nfunction _interop_require_default(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interop_require_wildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\n// Load ReactDevOverlay only when needed\nlet ReactDevOverlayImpl;\nconst ReactDevOverlay = props => {\n  if (ReactDevOverlayImpl === undefined) {\n    ReactDevOverlayImpl = require(\"next/dist/compiled/@next/react-dev-overlay/dist/client\").ReactDevOverlay;\n  }\n  return ReactDevOverlayImpl(props);\n};\nclass DevServer extends _nextserver.default {\n  getStaticPathsWorker() {\n    const worker = new _jestworker.Worker(require.resolve(\"./static-paths-worker\"), {\n      maxRetries: 1,\n      // For dev server, it's not necessary to spin up too many workers as long as you are not doing a load test.\n      // This helps reusing the memory a lot.\n      numWorkers: 1,\n      enableWorkerThreads: this.nextConfig.experimental.workerThreads,\n      forkOptions: {\n        env: {\n          ...process.env,\n          // discard --inspect/--inspect-brk flags from process.env.NODE_OPTIONS. Otherwise multiple Node.js debuggers\n          // would be started if user launch Next.js in debugging mode. The number of debuggers is linked to\n          // the number of workers Next.js tries to launch. The only worker users are interested in debugging\n          // is the main Next.js one\n          NODE_OPTIONS: (0, _utils.getNodeOptionsWithoutInspect)()\n        }\n      }\n    });\n    worker.getStdout().pipe(process.stdout);\n    worker.getStderr().pipe(process.stderr);\n    return worker;\n  }\n  constructor(options) {\n    var _this_nextConfig_experimental_amp, _this_nextConfig_experimental;\n    try {\n      // Increase the number of stack frames on the server\n      Error.stackTraceLimit = 50;\n    } catch {}\n    super({\n      ...options,\n      dev: true\n    });\n    /**\n    * The promise that resolves when the server is ready. When this is unset\n    * the server is ready.\n    */\n    this.ready = new _detachedpromise.DetachedPromise();\n    this.bundlerService = options.bundlerService;\n    this.originalFetch = global.fetch;\n    this.renderOpts.dev = true;\n    this.renderOpts.appDirDevErrorLogger = err => this.logErrorWithOriginalStack(err, \"app-dir\");\n    this.renderOpts.ErrorDebug = ReactDevOverlay;\n    this.staticPathsCache = new _lrucache.default({\n      // 5MB\n      max: 5 * 1024 * 1024,\n      length(value) {\n        return JSON.stringify(value.staticPaths).length;\n      }\n    });\n    this.renderOpts.ampSkipValidation = ((_this_nextConfig_experimental = this.nextConfig.experimental) == null ? void 0 : (_this_nextConfig_experimental_amp = _this_nextConfig_experimental.amp) == null ? void 0 : _this_nextConfig_experimental_amp.skipValidation) ?? false;\n    this.renderOpts.ampValidator = (html, pathname) => {\n      const validatorPath = this.nextConfig.experimental && this.nextConfig.experimental.amp && this.nextConfig.experimental.amp.validator;\n      const AmpHtmlValidator = require(\"next/dist/compiled/amphtml-validator\");\n      return AmpHtmlValidator.getInstance(validatorPath).then(validator => {\n        const result = validator.validateString(html);\n        (0, _output.ampValidation)(pathname, result.errors.filter(e => e.severity === \"ERROR\").filter(e => this._filterAmpDevelopmentScript(html, e)), result.errors.filter(e => e.severity !== \"ERROR\"));\n      });\n    };\n    const {\n      pagesDir,\n      appDir\n    } = (0, _findpagesdir.findPagesDir)(this.dir);\n    this.pagesDir = pagesDir;\n    this.appDir = appDir;\n  }\n  getRouteMatchers() {\n    const {\n      pagesDir,\n      appDir\n    } = (0, _findpagesdir.findPagesDir)(this.dir);\n    const ensurer = {\n      ensure: async match => {\n        await this.ensurePage({\n          definition: match.definition,\n          page: match.definition.page,\n          clientOnly: false\n        });\n      }\n    };\n    const matchers = new _devroutematchermanager.DevRouteMatcherManager(super.getRouteMatchers(), ensurer, this.dir);\n    const extensions = this.nextConfig.pageExtensions;\n    const extensionsExpression = new RegExp(`\\\\.(?:${extensions.join(\"|\")})$`);\n    // If the pages directory is available, then configure those matchers.\n    if (pagesDir) {\n      const fileReader = new _batchedfilereader.BatchedFileReader(new _defaultfilereader.DefaultFileReader({\n        // Only allow files that have the correct extensions.\n        pathnameFilter: pathname => extensionsExpression.test(pathname)\n      }));\n      matchers.push(new _devpagesroutematcherprovider.DevPagesRouteMatcherProvider(pagesDir, extensions, fileReader, this.localeNormalizer));\n      matchers.push(new _devpagesapiroutematcherprovider.DevPagesAPIRouteMatcherProvider(pagesDir, extensions, fileReader, this.localeNormalizer));\n    }\n    if (appDir) {\n      // We create a new file reader for the app directory because we don't want\n      // to include any folders or files starting with an underscore. This will\n      // prevent the reader from wasting time reading files that we know we\n      // don't care about.\n      const fileReader = new _batchedfilereader.BatchedFileReader(new _defaultfilereader.DefaultFileReader({\n        // Ignore any directory prefixed with an underscore.\n        ignorePartFilter: part => part.startsWith(\"_\")\n      }));\n      matchers.push(new _devapppageroutematcherprovider.DevAppPageRouteMatcherProvider(appDir, extensions, fileReader));\n      matchers.push(new _devapprouteroutematcherprovider.DevAppRouteRouteMatcherProvider(appDir, extensions, fileReader));\n    }\n    return matchers;\n  }\n  getBuildId() {\n    return \"development\";\n  }\n  async prepareImpl() {\n    var _this_ready;\n    (0, _trace.setGlobal)(\"distDir\", this.distDir);\n    (0, _trace.setGlobal)(\"phase\", _constants1.PHASE_DEVELOPMENT_SERVER);\n    const telemetry = new _storage.Telemetry({\n      distDir: this.distDir\n    });\n    await super.prepareImpl();\n    await this.runInstrumentationHookIfAvailable();\n    await this.matchers.reload();\n    (_this_ready = this.ready) == null ? void 0 : _this_ready.resolve();\n    this.ready = undefined;\n    // This is required by the tracing subsystem.\n    (0, _trace.setGlobal)(\"appDir\", this.appDir);\n    (0, _trace.setGlobal)(\"pagesDir\", this.pagesDir);\n    (0, _trace.setGlobal)(\"telemetry\", telemetry);\n    process.on(\"unhandledRejection\", reason => {\n      if ((0, _ispostpone.isPostpone)(reason)) {\n        // React postpones that are unhandled might end up logged here but they're\n        // not really errors. They're just part of rendering.\n        return;\n      }\n      this.logErrorWithOriginalStack(reason, \"unhandledRejection\").catch(() => {});\n    });\n    process.on(\"uncaughtException\", err => {\n      this.logErrorWithOriginalStack(err, \"uncaughtException\").catch(() => {});\n    });\n  }\n  async close() {}\n  async hasPage(pathname) {\n    let normalizedPath;\n    try {\n      normalizedPath = (0, _normalizepagepath.normalizePagePath)(pathname);\n    } catch (err) {\n      console.error(err);\n      // if normalizing the page fails it means it isn't valid\n      // so it doesn't exist so don't throw and return false\n      // to ensure we return 404 instead of 500\n      return false;\n    }\n    if ((0, _utils2.isMiddlewareFile)(normalizedPath)) {\n      return (0, _findpagefile.findPageFile)(this.dir, normalizedPath, this.nextConfig.pageExtensions, false).then(Boolean);\n    }\n    let appFile = null;\n    let pagesFile = null;\n    if (this.appDir) {\n      appFile = await (0, _findpagefile.findPageFile)(this.appDir, normalizedPath + \"/page\", this.nextConfig.pageExtensions, true);\n    }\n    if (this.pagesDir) {\n      pagesFile = await (0, _findpagefile.findPageFile)(this.pagesDir, normalizedPath, this.nextConfig.pageExtensions, false);\n    }\n    if (appFile && pagesFile) {\n      return false;\n    }\n    return Boolean(appFile || pagesFile);\n  }\n  async runMiddleware(params) {\n    try {\n      const result = await super.runMiddleware({\n        ...params,\n        onWarning: warn => {\n          this.logErrorWithOriginalStack(warn, \"warning\");\n        }\n      });\n      if (\"finished\" in result) {\n        return result;\n      }\n      result.waitUntil.catch(error => {\n        this.logErrorWithOriginalStack(error, \"unhandledRejection\");\n      });\n      return result;\n    } catch (error) {\n      if (error instanceof _utils1.DecodeError) {\n        throw error;\n      }\n      /**\n      * We only log the error when it is not a MiddlewareNotFound error as\n      * in that case we should be already displaying a compilation error\n      * which is what makes the module not found.\n      */\n      if (!(error instanceof _utils1.MiddlewareNotFoundError)) {\n        this.logErrorWithOriginalStack(error);\n      }\n      const err = (0, _iserror.getProperError)(error);\n      err.middleware = true;\n      const {\n        request,\n        response,\n        parsedUrl\n      } = params;\n      /**\n      * When there is a failure for an internal Next.js request from\n      * middleware we bypass the error without finishing the request\n      * so we can serve the required chunks to render the error.\n      */\n      if (request.url.includes(\"/_next/static\") || request.url.includes(\"/__nextjs_original-stack-frame\")) {\n        return {\n          finished: false\n        };\n      }\n      response.statusCode = 500;\n      await this.renderError(err, request, response, parsedUrl.pathname);\n      return {\n        finished: true\n      };\n    }\n  }\n  async runEdgeFunction(params) {\n    try {\n      return super.runEdgeFunction({\n        ...params,\n        onWarning: warn => {\n          this.logErrorWithOriginalStack(warn, \"warning\");\n        }\n      });\n    } catch (error) {\n      if (error instanceof _utils1.DecodeError) {\n        throw error;\n      }\n      this.logErrorWithOriginalStack(error, \"warning\");\n      const err = (0, _iserror.getProperError)(error);\n      const {\n        req,\n        res,\n        page\n      } = params;\n      res.statusCode = 500;\n      await this.renderError(err, req, res, page);\n      return null;\n    }\n  }\n  async handleRequest(req, res, parsedUrl) {\n    var _this_ready;\n    await ((_this_ready = this.ready) == null ? void 0 : _this_ready.promise);\n    return await super.handleRequest(req, res, parsedUrl);\n  }\n  async run(req, res, parsedUrl) {\n    var _this_ready;\n    await ((_this_ready = this.ready) == null ? void 0 : _this_ready.promise);\n    const {\n      basePath\n    } = this.nextConfig;\n    let originalPathname = null;\n    // TODO: see if we can remove this in the future\n    if (basePath && (0, _pathhasprefix.pathHasPrefix)(parsedUrl.pathname || \"/\", basePath)) {\n      // strip basePath before handling dev bundles\n      // If replace ends up replacing the full url it'll be `undefined`, meaning we have to default it to `/`\n      originalPathname = parsedUrl.pathname;\n      parsedUrl.pathname = (0, _removepathprefix.removePathPrefix)(parsedUrl.pathname || \"/\", basePath);\n    }\n    const {\n      pathname\n    } = parsedUrl;\n    if (pathname.startsWith(\"/_next\")) {\n      if (_fs.default.existsSync((0, _path.join)(this.publicDir, \"_next\"))) {\n        throw new Error(_constants.PUBLIC_DIR_MIDDLEWARE_CONFLICT);\n      }\n    }\n    if (originalPathname) {\n      // restore the path before continuing so that custom-routes can accurately determine\n      // if they should match against the basePath or not\n      parsedUrl.pathname = originalPathname;\n    }\n    try {\n      return await super.run(req, res, parsedUrl);\n    } catch (error) {\n      const err = (0, _iserror.getProperError)(error);\n      (0, _formatservererror.formatServerError)(err);\n      this.logErrorWithOriginalStack(err).catch(() => {});\n      if (!res.sent) {\n        res.statusCode = 500;\n        try {\n          return await this.renderError(err, req, res, pathname, {\n            __NEXT_PAGE: (0, _iserror.default)(err) && err.page || pathname || \"\"\n          });\n        } catch (internalErr) {\n          console.error(internalErr);\n          res.body(\"Internal Server Error\").send();\n        }\n      }\n    }\n  }\n  async logErrorWithOriginalStack(err, type) {\n    await this.bundlerService.logErrorWithOriginalStack(err, type);\n  }\n  getPagesManifest() {\n    return _nodemanifestloader.NodeManifestLoader.require((0, _path.join)(this.serverDistDir, _constants1.PAGES_MANIFEST)) ?? undefined;\n  }\n  getAppPathsManifest() {\n    if (!this.hasAppDir) return undefined;\n    return _nodemanifestloader.NodeManifestLoader.require((0, _path.join)(this.serverDistDir, _constants1.APP_PATHS_MANIFEST)) ?? undefined;\n  }\n  getMiddleware() {\n    var _this_middleware;\n    // We need to populate the match\n    // field as it isn't serializable\n    if (((_this_middleware = this.middleware) == null ? void 0 : _this_middleware.match) === null) {\n      this.middleware.match = (0, _middlewareroutematcher.getMiddlewareRouteMatcher)(this.middleware.matchers || []);\n    }\n    return this.middleware;\n  }\n  getNextFontManifest() {\n    return undefined;\n  }\n  async hasMiddleware() {\n    return this.hasPage(this.actualMiddlewareFile);\n  }\n  async ensureMiddleware() {\n    return this.ensurePage({\n      page: this.actualMiddlewareFile,\n      clientOnly: false,\n      definition: undefined\n    });\n  }\n  async runInstrumentationHookIfAvailable() {\n    if (this.actualInstrumentationHookFile && (await this.ensurePage({\n      page: this.actualInstrumentationHookFile,\n      clientOnly: false,\n      definition: undefined\n    }).then(() => true).catch(() => false))) {\n      _buildcontext.NextBuildContext.hasInstrumentationHook = true;\n      try {\n        const instrumentationHook = await require((0, _path.join)(this.distDir, \"server\", _constants.INSTRUMENTATION_HOOK_FILENAME));\n        await instrumentationHook.register();\n      } catch (err) {\n        err.message = `An error occurred while loading instrumentation hook: ${err.message}`;\n        throw err;\n      }\n    }\n  }\n  async ensureEdgeFunction({\n    page,\n    appPaths\n  }) {\n    return this.ensurePage({\n      page,\n      appPaths,\n      clientOnly: false,\n      definition: undefined\n    });\n  }\n  generateRoutes(_dev) {\n    // In development we expose all compiled files for react-error-overlay's line show feature\n    // We use unshift so that we're sure the routes is defined before Next's default routes\n    // routes.unshift({\n    //   match: getPathMatch('/_next/development/:path*'),\n    //   type: 'route',\n    //   name: '_next/development catchall',\n    //   fn: async (req, res, params) => {\n    //     const p = pathJoin(this.distDir, ...(params.path || []))\n    //     await this.serveStatic(req, res, p)\n    //     return {\n    //       finished: true,\n    //     }\n    //   },\n    // })\n  }\n  _filterAmpDevelopmentScript(html, event) {\n    if (event.code !== \"DISALLOWED_SCRIPT_TAG\") {\n      return true;\n    }\n    const snippetChunks = html.split(\"\\n\");\n    let snippet;\n    if (!(snippet = html.split(\"\\n\")[event.line - 1]) || !(snippet = snippet.substring(event.col))) {\n      return true;\n    }\n    snippet = snippet + snippetChunks.slice(event.line).join(\"\\n\");\n    snippet = snippet.substring(0, snippet.indexOf(\"</script>\"));\n    return !snippet.includes(\"data-amp-development-mode-only\");\n  }\n  async getStaticPaths({\n    pathname,\n    requestHeaders,\n    page,\n    isAppPath\n  }) {\n    // we lazy load the staticPaths to prevent the user\n    // from waiting on them for the page to load in dev mode\n    const __getStaticPaths = async () => {\n      const {\n        configFileName,\n        publicRuntimeConfig,\n        serverRuntimeConfig,\n        httpAgentOptions\n      } = this.nextConfig;\n      const {\n        locales,\n        defaultLocale\n      } = this.nextConfig.i18n || {};\n      const staticPathsWorker = this.getStaticPathsWorker();\n      try {\n        const pathsResult = await staticPathsWorker.loadStaticPaths({\n          distDir: this.distDir,\n          pathname,\n          config: {\n            configFileName,\n            publicRuntimeConfig,\n            serverRuntimeConfig\n          },\n          httpAgentOptions,\n          locales,\n          defaultLocale,\n          page,\n          isAppPath,\n          requestHeaders,\n          incrementalCacheHandlerPath: this.nextConfig.experimental.incrementalCacheHandlerPath,\n          fetchCacheKeyPrefix: this.nextConfig.experimental.fetchCacheKeyPrefix,\n          isrFlushToDisk: this.nextConfig.experimental.isrFlushToDisk,\n          maxMemoryCacheSize: this.nextConfig.experimental.isrMemoryCacheSize,\n          ppr: this.nextConfig.experimental.ppr === true\n        });\n        return pathsResult;\n      } finally {\n        // we don't re-use workers so destroy the used one\n        staticPathsWorker.end();\n      }\n    };\n    const result = this.staticPathsCache.get(pathname);\n    const nextInvoke = (0, _coalescedfunction.withCoalescedInvoke)(__getStaticPaths)(`staticPaths-${pathname}`, []).then(res => {\n      const {\n        paths: staticPaths = [],\n        fallback\n      } = res.value;\n      if (!isAppPath && this.nextConfig.output === \"export\") {\n        if (fallback === \"blocking\") {\n          throw new Error('getStaticPaths with \"fallback: blocking\" cannot be used with \"output: export\". See more info here: https://nextjs.org/docs/advanced-features/static-html-export');\n        } else if (fallback === true) {\n          throw new Error('getStaticPaths with \"fallback: true\" cannot be used with \"output: export\". See more info here: https://nextjs.org/docs/advanced-features/static-html-export');\n        }\n      }\n      const value = {\n        staticPaths,\n        fallbackMode: fallback === \"blocking\" ? \"blocking\" : fallback === true ? \"static\" : fallback\n      };\n      this.staticPathsCache.set(pathname, value);\n      return value;\n    }).catch(err => {\n      this.staticPathsCache.del(pathname);\n      if (!result) throw err;\n      _log.error(`Failed to generate static paths for ${pathname}:`);\n      console.error(err);\n    });\n    if (result) {\n      return result;\n    }\n    return nextInvoke;\n  }\n  restorePatchedGlobals() {\n    global.fetch = this.originalFetch;\n  }\n  async ensurePage(opts) {\n    await this.bundlerService.ensurePage(opts);\n  }\n  async findPageComponents({\n    page,\n    query,\n    params,\n    isAppPath,\n    appPaths = null,\n    shouldEnsure\n  }) {\n    var _this_ready;\n    await ((_this_ready = this.ready) == null ? void 0 : _this_ready.promise);\n    const compilationErr = await this.getCompilationError(page);\n    if (compilationErr) {\n      // Wrap build errors so that they don't get logged again\n      throw new _nextserver.WrappedBuildError(compilationErr);\n    }\n    try {\n      if (shouldEnsure || this.renderOpts.customServer) {\n        await this.ensurePage({\n          page,\n          appPaths,\n          clientOnly: false,\n          definition: undefined\n        });\n      }\n      this.nextFontManifest = super.getNextFontManifest();\n      // before we re-evaluate a route module, we want to restore globals that might\n      // have been patched previously to their original state so that we don't\n      // patch on top of the previous patch, which would keep the context of the previous\n      // patched global in memory, creating a memory leak.\n      this.restorePatchedGlobals();\n      return await super.findPageComponents({\n        page,\n        query,\n        params,\n        isAppPath,\n        shouldEnsure\n      });\n    } catch (err) {\n      if (err.code !== \"ENOENT\") {\n        throw err;\n      }\n      return null;\n    }\n  }\n  async getFallbackErrorComponents() {\n    await this.bundlerService.getFallbackErrorComponents();\n    return await (0, _loaddefaulterrorcomponents.loadDefaultErrorComponents)(this.distDir);\n  }\n  async getCompilationError(page) {\n    return await this.bundlerService.getCompilationError(page);\n  }\n}","map":{"version":3,"names":["DevServer","ReactDevOverlayImpl","ReactDevOverlay","props","undefined","require","_nextserver","default","getStaticPathsWorker","worker","_jestworker","Worker","resolve","maxRetries","numWorkers","enableWorkerThreads","nextConfig","experimental","workerThreads","forkOptions","env","process","NODE_OPTIONS","_utils","getNodeOptionsWithoutInspect","getStdout","pipe","stdout","getStderr","stderr","constructor","options","_this_nextConfig_experimental_amp","_this_nextConfig_experimental","Error","stackTraceLimit","dev","ready","_detachedpromise","DetachedPromise","bundlerService","originalFetch","global","fetch","renderOpts","appDirDevErrorLogger","err","logErrorWithOriginalStack","ErrorDebug","staticPathsCache","_lrucache","max","length","value","JSON","stringify","staticPaths","ampSkipValidation","amp","skipValidation","ampValidator","html","pathname","validatorPath","validator","AmpHtmlValidator","getInstance","then","result","validateString","_output","ampValidation","errors","filter","e","severity","_filterAmpDevelopmentScript","pagesDir","appDir","_findpagesdir","findPagesDir","dir","getRouteMatchers","ensurer","ensure","match","ensurePage","definition","page","clientOnly","matchers","_devroutematchermanager","DevRouteMatcherManager","extensions","pageExtensions","extensionsExpression","RegExp","join","fileReader","_batchedfilereader","BatchedFileReader","_defaultfilereader","DefaultFileReader","pathnameFilter","test","push","_devpagesroutematcherprovider","DevPagesRouteMatcherProvider","localeNormalizer","_devpagesapiroutematcherprovider","DevPagesAPIRouteMatcherProvider","ignorePartFilter","part","startsWith","_devapppageroutematcherprovider","DevAppPageRouteMatcherProvider","_devapprouteroutematcherprovider","DevAppRouteRouteMatcherProvider","getBuildId","prepareImpl","_this_ready","_trace","setGlobal","distDir","_constants1","PHASE_DEVELOPMENT_SERVER","telemetry","_storage","Telemetry","runInstrumentationHookIfAvailable","reload","on","reason","_ispostpone","isPostpone","catch","close","hasPage","normalizedPath","_normalizepagepath","normalizePagePath","console","error","_utils2","isMiddlewareFile","_findpagefile","findPageFile","Boolean","appFile","pagesFile","runMiddleware","params","onWarning","warn","waitUntil","_utils1","DecodeError","MiddlewareNotFoundError","_iserror","getProperError","middleware","request","response","parsedUrl","url","includes","finished","statusCode","renderError","runEdgeFunction","req","res","handleRequest","promise","run","basePath","originalPathname","_pathhasprefix","pathHasPrefix","_removepathprefix","removePathPrefix","_fs","existsSync","_path","publicDir","_constants","PUBLIC_DIR_MIDDLEWARE_CONFLICT","_formatservererror","formatServerError","sent","__NEXT_PAGE","internalErr","body","send","type","getPagesManifest","_nodemanifestloader","NodeManifestLoader","serverDistDir","PAGES_MANIFEST","getAppPathsManifest","hasAppDir","APP_PATHS_MANIFEST","getMiddleware","_this_middleware","_middlewareroutematcher","getMiddlewareRouteMatcher","getNextFontManifest","hasMiddleware","actualMiddlewareFile","ensureMiddleware","actualInstrumentationHookFile","_buildcontext","NextBuildContext","hasInstrumentationHook","instrumentationHook","INSTRUMENTATION_HOOK_FILENAME","register","message","ensureEdgeFunction","appPaths","generateRoutes","_dev","event","code","snippetChunks","split","snippet","line","substring","col","slice","indexOf","getStaticPaths","requestHeaders","isAppPath","__getStaticPaths","configFileName","publicRuntimeConfig","serverRuntimeConfig","httpAgentOptions","locales","defaultLocale","i18n","staticPathsWorker","pathsResult","loadStaticPaths","config","incrementalCacheHandlerPath","fetchCacheKeyPrefix","isrFlushToDisk","maxMemoryCacheSize","isrMemoryCacheSize","ppr","end","get","nextInvoke","_coalescedfunction","withCoalescedInvoke","paths","fallback","output","fallbackMode","set","del","_log","restorePatchedGlobals","opts","findPageComponents","query","shouldEnsure","compilationErr","getCompilationError","WrappedBuildError","customServer","nextFontManifest","getFallbackErrorComponents","_loaddefaulterrorcomponents","loadDefaultErrorComponents"],"sources":["../../../src/server/dev/next-dev-server.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}