{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"AppRouteRouteMatcherProvider\", {\n  enumerable: true,\n  get: function () {\n    return AppRouteRouteMatcherProvider;\n  }\n});\nconst _isapprouteroute = require(\"../../../lib/is-app-route-route\");\nconst _constants = require(\"../../../shared/lib/constants\");\nconst _routekind = require(\"../route-kind\");\nconst _approuteroutematcher = require(\"../route-matchers/app-route-route-matcher\");\nconst _manifestroutematcherprovider = require(\"./manifest-route-matcher-provider\");\nconst _app = require(\"../normalizers/built/app\");\nclass AppRouteRouteMatcherProvider extends _manifestroutematcherprovider.ManifestRouteMatcherProvider {\n  constructor(distDir, manifestLoader) {\n    super(_constants.APP_PATHS_MANIFEST, manifestLoader);\n    this.normalizers = new _app.AppNormalizers(distDir);\n  }\n  async transform(manifest) {\n    // This matcher only matches app routes.\n    const pages = Object.keys(manifest).filter(page => (0, _isapprouteroute.isAppRouteRoute)(page));\n    // Format the routes.\n    const matchers = [];\n    for (const page of pages) {\n      const filename = this.normalizers.filename.normalize(manifest[page]);\n      const pathname = this.normalizers.pathname.normalize(page);\n      const bundlePath = this.normalizers.bundlePath.normalize(page);\n      matchers.push(new _approuteroutematcher.AppRouteRouteMatcher({\n        kind: _routekind.RouteKind.APP_ROUTE,\n        pathname,\n        page,\n        bundlePath,\n        filename\n      }));\n    }\n    return matchers;\n  }\n}","map":{"version":3,"names":["AppRouteRouteMatcherProvider","_manifestroutematcherprovider","ManifestRouteMatcherProvider","constructor","distDir","manifestLoader","_constants","APP_PATHS_MANIFEST","normalizers","_app","AppNormalizers","transform","manifest","pages","Object","keys","filter","page","_isapprouteroute","isAppRouteRoute","matchers","filename","normalize","pathname","bundlePath","push","_approuteroutematcher","AppRouteRouteMatcher","kind","_routekind","RouteKind","APP_ROUTE"],"sources":["../../../../src/server/future/route-matcher-providers/app-route-route-matcher-provider.ts"],"sourcesContent":[null],"mappings":";;;;;+BAWa;;;WAAAA,4BAAA;;;iCAXmB;2BACG;2BACT;sCACW;8CAKQ;qBACd;AAExB,MAAMA,4BAAA,SAAqCC,6BAAA,CAAAC,4BAA4B;EAG5EC,YAAYC,OAAe,EAAEC,cAA8B,EAAE;IAC3D,KAAK,CAACC,UAAA,CAAAC,kBAAkB,EAAEF,cAAA;IAE1B,IAAI,CAACG,WAAW,GAAG,IAAIC,IAAA,CAAAC,cAAc,CAACN,OAAA;EACxC;EAEA,MAAgBO,UACdC,QAAkB,EAC4B;IAC9C;IACA,MAAMC,KAAA,GAAQC,MAAA,CAAOC,IAAI,CAACH,QAAA,EAAUI,MAAM,CAAEC,IAAA,IAAS,IAAAC,gBAAA,CAAAC,eAAe,EAACF,IAAA;IAErE;IACA,MAAMG,QAAA,GAAwC,EAAE;IAChD,KAAK,MAAMH,IAAA,IAAQJ,KAAA,EAAO;MACxB,MAAMQ,QAAA,GAAW,IAAI,CAACb,WAAW,CAACa,QAAQ,CAACC,SAAS,CAACV,QAAQ,CAACK,IAAA,CAAK;MACnE,MAAMM,QAAA,GAAW,IAAI,CAACf,WAAW,CAACe,QAAQ,CAACD,SAAS,CAACL,IAAA;MACrD,MAAMO,UAAA,GAAa,IAAI,CAAChB,WAAW,CAACgB,UAAU,CAACF,SAAS,CAACL,IAAA;MAEzDG,QAAA,CAASK,IAAI,CACX,IAAIC,qBAAA,CAAAC,oBAAoB,CAAC;QACvBC,IAAA,EAAMC,UAAA,CAAAC,SAAS,CAACC,SAAS;QACzBR,QAAA;QACAN,IAAA;QACAO,UAAA;QACAH;MACF;IAEJ;IAEA,OAAOD,QAAA;EACT;AACF"},"metadata":{},"sourceType":"script","externalDependencies":[]}