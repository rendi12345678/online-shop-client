{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"getLocaleRedirect\", {\n  enumerable: true,\n  get: function () {\n    return getLocaleRedirect;\n  }\n});\nconst _acceptheader = require(\"../../../server/accept-header\");\nconst _denormalizepagepath = require(\"../page-path/denormalize-page-path\");\nconst _detectdomainlocale = require(\"./detect-domain-locale\");\nconst _formaturl = require(\"../router/utils/format-url\");\nconst _getcookieparser = require(\"../../../server/api-utils/get-cookie-parser\");\nfunction getLocaleFromCookie(i18n, headers) {\n  if (headers === void 0) headers = {};\n  var _getCookieParser_NEXT_LOCALE, _getCookieParser;\n  const nextLocale = (_getCookieParser = (0, _getcookieparser.getCookieParser)(headers || {})()) == null ? void 0 : (_getCookieParser_NEXT_LOCALE = _getCookieParser.NEXT_LOCALE) == null ? void 0 : _getCookieParser_NEXT_LOCALE.toLowerCase();\n  return nextLocale ? i18n.locales.find(locale => nextLocale === locale.toLowerCase()) : undefined;\n}\nfunction detectLocale(param) {\n  let {\n    i18n,\n    headers,\n    domainLocale,\n    preferredLocale,\n    pathLocale\n  } = param;\n  return pathLocale || (domainLocale == null ? void 0 : domainLocale.defaultLocale) || getLocaleFromCookie(i18n, headers) || preferredLocale || i18n.defaultLocale;\n}\nfunction getAcceptPreferredLocale(i18n, headers) {\n  if ((headers == null ? void 0 : headers[\"accept-language\"]) && !Array.isArray(headers[\"accept-language\"])) {\n    try {\n      return (0, _acceptheader.acceptLanguage)(headers[\"accept-language\"], i18n.locales);\n    } catch (err) {}\n  }\n}\nfunction getLocaleRedirect(param) {\n  let {\n    defaultLocale,\n    domainLocale,\n    pathLocale,\n    headers,\n    nextConfig,\n    urlParsed\n  } = param;\n  if (nextConfig.i18n && nextConfig.i18n.localeDetection !== false && (0, _denormalizepagepath.denormalizePagePath)(urlParsed.pathname) === \"/\") {\n    const preferredLocale = getAcceptPreferredLocale(nextConfig.i18n, headers);\n    const detectedLocale = detectLocale({\n      i18n: nextConfig.i18n,\n      preferredLocale,\n      headers,\n      pathLocale,\n      domainLocale\n    });\n    const preferredDomain = (0, _detectdomainlocale.detectDomainLocale)(nextConfig.i18n.domains, undefined, preferredLocale);\n    if (domainLocale && preferredDomain) {\n      const isPDomain = preferredDomain.domain === domainLocale.domain;\n      const isPLocale = preferredDomain.defaultLocale === preferredLocale;\n      if (!isPDomain || !isPLocale) {\n        const scheme = \"http\" + (preferredDomain.http ? \"\" : \"s\");\n        const rlocale = isPLocale ? \"\" : preferredLocale;\n        return scheme + \"://\" + preferredDomain.domain + \"/\" + rlocale;\n      }\n    }\n    if (detectedLocale.toLowerCase() !== defaultLocale.toLowerCase()) {\n      return (0, _formaturl.formatUrl)({\n        ...urlParsed,\n        pathname: (nextConfig.basePath || \"\") + \"/\" + detectedLocale + (nextConfig.trailingSlash ? \"/\" : \"\")\n      });\n    }\n  }\n}","map":{"version":3,"names":["getLocaleRedirect","getLocaleFromCookie","i18n","headers","_getCookieParser_NEXT_LOCALE","_getCookieParser","nextLocale","_getcookieparser","getCookieParser","NEXT_LOCALE","toLowerCase","locales","find","locale","undefined","detectLocale","param","domainLocale","preferredLocale","pathLocale","defaultLocale","getAcceptPreferredLocale","Array","isArray","_acceptheader","acceptLanguage","err","nextConfig","urlParsed","localeDetection","_denormalizepagepath","denormalizePagePath","pathname","detectedLocale","preferredDomain","_detectdomainlocale","detectDomainLocale","domains","isPDomain","domain","isPLocale","scheme","http","rlocale","_formaturl","formatUrl","basePath","trailingSlash"],"sources":["../../../../src/shared/lib/i18n/get-locale-redirect.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}