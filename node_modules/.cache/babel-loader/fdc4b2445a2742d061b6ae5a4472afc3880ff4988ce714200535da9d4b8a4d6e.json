{"ast":null,"code":"/**\n * A `Promise.withResolvers` implementation that exposes the `resolve` and\n * `reject` functions on a `Promise`.\n *\n * @see https://tc39.es/proposal-promise-with-resolvers/\n */\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"DetachedPromise\", {\n  enumerable: true,\n  get: function () {\n    return DetachedPromise;\n  }\n});\nclass DetachedPromise {\n  constructor() {\n    let resolve;\n    let reject;\n    // Create the promise and assign the resolvers to the object.\n    this.promise = new Promise((res, rej) => {\n      resolve = res;\n      reject = rej;\n    });\n    // We know that resolvers is defined because the Promise constructor runs\n    // synchronously.\n    this.resolve = resolve;\n    this.reject = reject;\n  }\n}","map":{"version":3,"names":["DetachedPromise","constructor","resolve","reject","promise","Promise","res","rej"],"sources":["../../src/lib/detached-promise.ts"],"sourcesContent":[null],"mappings":"AAAA;;;;;GAKC;;;;;+BACY;;;WAAAA,eAAA;;;AAAN,MAAMA,eAAA;EAKXC,YAAA,EAAc;IACZ,IAAIC,OAAA;IACJ,IAAIC,MAAA;IAEJ;IACA,IAAI,CAACC,OAAO,GAAG,IAAIC,OAAA,CAAW,CAACC,GAAA,EAAKC,GAAA;MAClCL,OAAA,GAAUI,GAAA;MACVH,MAAA,GAASI,GAAA;IACX;IAEA;IACA;IACA,IAAI,CAACL,OAAO,GAAGA,OAAA;IACf,IAAI,CAACC,MAAM,GAAGA,MAAA;EAChB;AACF"},"metadata":{},"sourceType":"script","externalDependencies":[]}