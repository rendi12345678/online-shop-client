{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n0 && (module.exports = {\n  serveStatic: null,\n  getContentType: null,\n  getExtension: null\n});\nfunction _export(target, all) {\n  for (var name in all) Object.defineProperty(target, name, {\n    enumerable: true,\n    get: all[name]\n  });\n}\n_export(exports, {\n  serveStatic: function () {\n    return serveStatic;\n  },\n  getContentType: function () {\n    return getContentType;\n  },\n  getExtension: function () {\n    return getExtension;\n  }\n});\nconst _send = /*#__PURE__*/_interop_require_default(require(\"next/dist/compiled/send\"));\nfunction _interop_require_default(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n// TODO: Remove this once \"send\" has updated the \"mime\", or next.js use custom version of \"mime\"\n// Although \"mime\" has already add avif in version 2.4.7, \"send\" is still using mime@1.6.0\n_send.default.mime.define({\n  \"image/avif\": [\"avif\"]\n});\nfunction serveStatic(req, res, path, opts) {\n  return new Promise((resolve, reject) => {\n    (0, _send.default)(req, path, opts).on(\"directory\", () => {\n      // We don't allow directories to be read.\n      const err = new Error(\"No directory access\");\n      err.code = \"ENOENT\";\n      reject(err);\n    }).on(\"error\", reject).pipe(res).on(\"finish\", resolve);\n  });\n}\nfunction getContentType(extWithoutDot) {\n  const {\n    mime\n  } = _send.default;\n  if (\"getType\" in mime) {\n    // 2.0\n    return mime.getType(extWithoutDot);\n  }\n  // 1.0\n  return mime.lookup(extWithoutDot);\n}\nfunction getExtension(contentType) {\n  const {\n    mime\n  } = _send.default;\n  if (\"getExtension\" in mime) {\n    // 2.0\n    return mime.getExtension(contentType);\n  }\n  // 1.0\n  return mime.extension(contentType);\n}","map":{"version":3,"names":["serveStatic","getContentType","getExtension","_send","default","mime","define","req","res","path","opts","Promise","resolve","reject","on","err","Error","code","pipe","extWithoutDot","getType","lookup","contentType","extension"],"sources":["../../src/server/serve-static.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;EASgBA,WAAW,WAAAA,CAAA;WAAXA,WAAA;;EAoBAC,cAAc,WAAAA,CAAA;WAAdA,cAAA;;EAUAC,YAAY,WAAAA,CAAA;WAAZA,YAAA;;;4DAtCC;;;;;;AAEjB;AACA;AACAC,KAAA,CAAAC,OAAI,CAACC,IAAI,CAACC,MAAM,CAAC;EACf,cAAc,CAAC;AACjB;AAEO,SAASN,YACdO,GAAoB,EACpBC,GAAmB,EACnBC,IAAY,EACZC,IAAiC;EAEjC,OAAO,IAAIC,OAAA,CAAQ,CAACC,OAAA,EAASC,MAAA;IAC3B,IAAAV,KAAA,CAAAC,OAAI,EAACG,GAAA,EAAKE,IAAA,EAAMC,IAAA,EACbI,EAAE,CAAC,aAAa;MACf;MACA,MAAMC,GAAA,GAAW,IAAIC,KAAA,CAAM;MAC3BD,GAAA,CAAIE,IAAI,GAAG;MACXJ,MAAA,CAAOE,GAAA;IACT,GACCD,EAAE,CAAC,SAASD,MAAA,EACZK,IAAI,CAACV,GAAA,EACLM,EAAE,CAAC,UAAUF,OAAA;EAClB;AACF;AAEO,SAASX,eAAekB,aAAqB;EAClD,MAAM;IAAEd;EAAI,CAAE,GAAGF,KAAA,CAAAC,OAAI;EACrB,IAAI,aAAaC,IAAA,EAAM;IACrB;IACA,OAAOA,IAAA,CAAKe,OAAO,CAACD,aAAA;EACtB;EACA;EACA,OAAOd,IAAC,CAAagB,MAAM,CAACF,aAAA;AAC9B;AAEO,SAASjB,aAAaoB,WAAmB;EAC9C,MAAM;IAAEjB;EAAI,CAAE,GAAGF,KAAA,CAAAC,OAAI;EACrB,IAAI,kBAAkBC,IAAA,EAAM;IAC1B;IACA,OAAOA,IAAA,CAAKH,YAAY,CAACoB,WAAA;EAC3B;EACA;EACA,OAAOjB,IAAC,CAAakB,SAAS,CAACD,WAAA;AACjC"},"metadata":{},"sourceType":"script","externalDependencies":[]}