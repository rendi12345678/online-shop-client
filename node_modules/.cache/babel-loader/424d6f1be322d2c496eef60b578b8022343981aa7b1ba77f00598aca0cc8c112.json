{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n0 && (module.exports = {\n  NextServer: null,\n  default: null\n});\nfunction _export(target, all) {\n  for (var name in all) Object.defineProperty(target, name, {\n    enumerable: true,\n    get: all[name]\n  });\n}\n_export(exports, {\n  NextServer: function () {\n    return NextServer;\n  },\n  // exports = module.exports\n  // Support `import next from 'next'`\n  default: function () {\n    return _default;\n  }\n});\nrequire(\"./require-hook\");\nrequire(\"./node-polyfill-crypto\");\nconst _log = /*#__PURE__*/_interop_require_wildcard(require(\"../build/output/log\"));\nconst _config = /*#__PURE__*/_interop_require_default(require(\"./config\"));\nconst _path = /*#__PURE__*/_interop_require_wildcard(require(\"path\"));\nconst _constants = require(\"../lib/constants\");\nconst _constants1 = require(\"../shared/lib/constants\");\nconst _tracer = require(\"./lib/trace/tracer\");\nconst _constants2 = require(\"./lib/trace/constants\");\nconst _formaturl = require(\"../shared/lib/router/utils/format-url\");\nconst _utils = require(\"./lib/utils\");\nfunction _interop_require_default(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interop_require_wildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nlet ServerImpl;\nconst getServerImpl = async () => {\n  if (ServerImpl === undefined) {\n    ServerImpl = (await Promise.resolve(require(\"./next-server\"))).default;\n  }\n  return ServerImpl;\n};\nconst SYMBOL_LOAD_CONFIG = Symbol(\"next.load_config\");\nclass NextServer {\n  constructor(options) {\n    this.options = options;\n  }\n  get hostname() {\n    return this.options.hostname;\n  }\n  get port() {\n    return this.options.port;\n  }\n  getRequestHandler() {\n    return async (req, res, parsedUrl) => {\n      return (0, _tracer.getTracer)().trace(_constants2.NextServerSpan.getRequestHandler, async () => {\n        const requestHandler = await this.getServerRequestHandler();\n        return requestHandler(req, res, parsedUrl);\n      });\n    };\n  }\n  getUpgradeHandler() {\n    return async (req, socket, head) => {\n      const server = await this.getServer();\n      // @ts-expect-error we mark this as protected so it\n      // causes an error here\n      return server.handleUpgrade.apply(server, [req, socket, head]);\n    };\n  }\n  setAssetPrefix(assetPrefix) {\n    if (this.server) {\n      this.server.setAssetPrefix(assetPrefix);\n    } else {\n      this.preparedAssetPrefix = assetPrefix;\n    }\n  }\n  logError(...args) {\n    if (this.server) {\n      this.server.logError(...args);\n    }\n  }\n  async render(...args) {\n    const server = await this.getServer();\n    return server.render(...args);\n  }\n  async renderToHTML(...args) {\n    const server = await this.getServer();\n    return server.renderToHTML(...args);\n  }\n  async renderError(...args) {\n    const server = await this.getServer();\n    return server.renderError(...args);\n  }\n  async renderErrorToHTML(...args) {\n    const server = await this.getServer();\n    return server.renderErrorToHTML(...args);\n  }\n  async render404(...args) {\n    const server = await this.getServer();\n    return server.render404(...args);\n  }\n  async prepare(serverFields) {\n    if (this.standaloneMode) return;\n    const server = await this.getServer();\n    if (serverFields) {\n      Object.assign(server, serverFields);\n    }\n    // We shouldn't prepare the server in production,\n    // because this code won't be executed when deployed\n    if (this.options.dev) {\n      await server.prepare();\n    }\n  }\n  async close() {\n    const server = await this.getServer();\n    return server.close();\n  }\n  async createServer(options) {\n    let ServerImplementation;\n    if (options.dev) {\n      ServerImplementation = require(\"./dev/next-dev-server\").default;\n    } else {\n      ServerImplementation = await getServerImpl();\n    }\n    const server = new ServerImplementation(options);\n    return server;\n  }\n  async [SYMBOL_LOAD_CONFIG]() {\n    const dir = (0, _path.resolve)(this.options.dir || \".\");\n    const config = this.options.preloadedConfig || (await (0, _config.default)(this.options.dev ? _constants1.PHASE_DEVELOPMENT_SERVER : _constants1.PHASE_PRODUCTION_SERVER, dir, {\n      customConfig: this.options.conf,\n      silent: true\n    }));\n    // check serialized build config when available\n    if (process.env.NODE_ENV === \"production\") {\n      try {\n        const serializedConfig = require(_path.default.join(dir, \".next\", _constants1.SERVER_FILES_MANIFEST)).config;\n        // @ts-expect-error internal field\n        config.experimental.isExperimentalCompile = serializedConfig.experimental.isExperimentalCompile;\n      } catch (_) {\n        // if distDir is customized we don't know until we\n        // load the config so fallback to loading the config\n        // from next.config.js\n      }\n    }\n    return config;\n  }\n  async getServer() {\n    if (!this.serverPromise) {\n      this.serverPromise = this[SYMBOL_LOAD_CONFIG]().then(async conf => {\n        if (this.standaloneMode) {\n          process.env.__NEXT_PRIVATE_STANDALONE_CONFIG = JSON.stringify(conf);\n        }\n        if (!this.options.dev) {\n          if (conf.output === \"standalone\") {\n            if (!process.env.__NEXT_PRIVATE_STANDALONE_CONFIG) {\n              _log.warn(`\"next start\" does not work with \"output: standalone\" configuration. Use \"node .next/standalone/server.js\" instead.`);\n            }\n          } else if (conf.output === \"export\") {\n            throw new Error(`\"next start\" does not work with \"output: export\" configuration. Use \"npx serve@latest out\" instead.`);\n          }\n        }\n        this.server = await this.createServer({\n          ...this.options,\n          conf\n        });\n        if (this.preparedAssetPrefix) {\n          this.server.setAssetPrefix(this.preparedAssetPrefix);\n        }\n        return this.server;\n      });\n    }\n    return this.serverPromise;\n  }\n  async getServerRequestHandler() {\n    if (this.reqHandler) return this.reqHandler;\n    // Memoize request handler creation\n    if (!this.reqHandlerPromise) {\n      this.reqHandlerPromise = this.getServer().then(server => {\n        this.reqHandler = (0, _tracer.getTracer)().wrap(_constants2.NextServerSpan.getServerRequestHandler, server.getRequestHandler().bind(server));\n        delete this.reqHandlerPromise;\n        return this.reqHandler;\n      });\n    }\n    return this.reqHandlerPromise;\n  }\n}\nclass NextCustomServer extends NextServer {\n  async prepare() {\n    const {\n      getRequestHandlers\n    } = require(\"./lib/start-server\");\n    const isNodeDebugging = !!(0, _utils.checkNodeDebugType)();\n    const initResult = await getRequestHandlers({\n      dir: this.options.dir,\n      port: this.options.port || 3000,\n      isDev: !!this.options.dev,\n      hostname: this.options.hostname || \"localhost\",\n      minimalMode: this.options.minimalMode,\n      isNodeDebugging: !!isNodeDebugging\n    });\n    this.requestHandler = initResult[0];\n    this.upgradeHandler = initResult[1];\n  }\n  setupWebSocketHandler(customServer, _req) {\n    if (!this.didWebSocketSetup) {\n      var _this;\n      this.didWebSocketSetup = true;\n      customServer = customServer || ((_this = _req == null ? void 0 : _req.socket) == null ? void 0 : _this.server);\n      if (customServer) {\n        customServer.on(\"upgrade\", async (req, socket, head) => {\n          this.upgradeHandler(req, socket, head);\n        });\n      }\n    }\n  }\n  getRequestHandler() {\n    return async (req, res, parsedUrl) => {\n      this.setupWebSocketHandler(this.options.httpServer, req);\n      if (parsedUrl) {\n        req.url = (0, _formaturl.formatUrl)(parsedUrl);\n      }\n      return this.requestHandler(req, res);\n    };\n  }\n  async render(...args) {\n    let [req, res, pathname, query, parsedUrl] = args;\n    this.setupWebSocketHandler(this.options.httpServer, req);\n    if (!pathname.startsWith(\"/\")) {\n      console.error(`Cannot render page with path \"${pathname}\"`);\n      pathname = `/${pathname}`;\n    }\n    pathname = pathname === \"/index\" ? \"/\" : pathname;\n    req.url = (0, _formaturl.formatUrl)({\n      ...parsedUrl,\n      pathname,\n      query\n    });\n    await this.requestHandler(req, res);\n    return;\n  }\n  constructor(...args) {\n    super(...args);\n    this.standaloneMode = true;\n    this.didWebSocketSetup = false;\n  }\n}\n// This file is used for when users run `require('next')`\nfunction createServer(options) {\n  // The package is used as a TypeScript plugin.\n  if (options && \"typescript\" in options && \"version\" in options.typescript) {\n    return require(\"./next-typescript\").createTSPlugin(options);\n  }\n  if (options == null) {\n    throw new Error(\"The server has not been instantiated properly. https://nextjs.org/docs/messages/invalid-server-options\");\n  }\n  if (!(\"isNextDevCommand\" in options) && process.env.NODE_ENV && ![\"production\", \"development\", \"test\"].includes(process.env.NODE_ENV)) {\n    _log.warn(_constants.NON_STANDARD_NODE_ENV);\n  }\n  if (options.dev && typeof options.dev !== \"boolean\") {\n    console.warn(\"Warning: 'dev' is not a boolean which could introduce unexpected behavior. https://nextjs.org/docs/messages/invalid-server-options\");\n  }\n  // When the caller is a custom server (using next()).\n  if (options.customServer !== false) {\n    const dir = (0, _path.resolve)(options.dir || \".\");\n    return new NextCustomServer({\n      ...options,\n      dir\n    });\n  }\n  // When the caller is Next.js internals (i.e. render worker, start server, etc)\n  return new NextServer(options);\n}\n// Support commonjs `require('next')`\nmodule.exports = createServer;\nconst _default = createServer;","map":{"version":3,"names":["NextServer","default","_default","ServerImpl","getServerImpl","undefined","Promise","resolve","require","SYMBOL_LOAD_CONFIG","Symbol","constructor","options","hostname","port","getRequestHandler","req","res","parsedUrl","_tracer","getTracer","trace","_constants2","NextServerSpan","requestHandler","getServerRequestHandler","getUpgradeHandler","socket","head","server","getServer","handleUpgrade","apply","setAssetPrefix","assetPrefix","preparedAssetPrefix","logError","args","render","renderToHTML","renderError","renderErrorToHTML","render404","prepare","serverFields","standaloneMode","Object","assign","dev","close","createServer","ServerImplementation","dir","_path","config","preloadedConfig","_config","_constants1","PHASE_DEVELOPMENT_SERVER","PHASE_PRODUCTION_SERVER","customConfig","conf","silent","process","env","NODE_ENV","serializedConfig","join","SERVER_FILES_MANIFEST","experimental","isExperimentalCompile","_","serverPromise","then","__NEXT_PRIVATE_STANDALONE_CONFIG","JSON","stringify","output","_log","warn","Error","reqHandler","reqHandlerPromise","wrap","bind","NextCustomServer","getRequestHandlers","isNodeDebugging","_utils","checkNodeDebugType","initResult","isDev","minimalMode","upgradeHandler","setupWebSocketHandler","customServer","_req","didWebSocketSetup","_this","on","httpServer","url","_formaturl","formatUrl","pathname","query","startsWith","console","error","typescript","createTSPlugin","includes","_constants","NON_STANDARD_NODE_ENV","module","exports"],"sources":["../../src/server/next.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}