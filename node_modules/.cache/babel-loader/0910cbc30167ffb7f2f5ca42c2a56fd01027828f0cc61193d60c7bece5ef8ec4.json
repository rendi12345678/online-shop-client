{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"DevBundlerService\", {\n  enumerable: true,\n  get: function () {\n    return DevBundlerService;\n  }\n});\nconst _mockrequest = require(\"./mock-request\");\nclass DevBundlerService {\n  constructor(bundler, handler) {\n    this.bundler = bundler;\n    this.handler = handler;\n    this.ensurePage = async definition => {\n      // TODO: remove after ensure is pulled out of server\n      return await this.bundler.hotReloader.ensurePage(definition);\n    };\n    this.logErrorWithOriginalStack = async (...args) => {\n      return await this.bundler.logErrorWithOriginalStack(...args);\n    };\n  }\n  async getFallbackErrorComponents() {\n    await this.bundler.hotReloader.buildFallbackError();\n    // Build the error page to ensure the fallback is built too.\n    // TODO: See if this can be moved into hotReloader or removed.\n    await this.bundler.hotReloader.ensurePage({\n      page: \"/_error\",\n      clientOnly: false,\n      definition: undefined\n    });\n  }\n  async getCompilationError(page) {\n    const errors = await this.bundler.hotReloader.getCompilationErrors(page);\n    if (!errors) return;\n    // Return the very first error we found.\n    return errors[0];\n  }\n  async revalidate({\n    urlPath,\n    revalidateHeaders,\n    opts: revalidateOpts\n  }) {\n    const mocked = (0, _mockrequest.createRequestResponseMocks)({\n      url: urlPath,\n      headers: revalidateHeaders\n    });\n    await this.handler(mocked.req, mocked.res);\n    await mocked.res.hasStreamed;\n    if (mocked.res.getHeader(\"x-nextjs-cache\") !== \"REVALIDATED\" && !(mocked.res.statusCode === 404 && revalidateOpts.unstable_onlyGenerated)) {\n      throw new Error(`Invalid response ${mocked.res.statusCode}`);\n    }\n    return {};\n  }\n}","map":{"version":3,"names":["DevBundlerService","constructor","bundler","handler","ensurePage","definition","hotReloader","logErrorWithOriginalStack","args","getFallbackErrorComponents","buildFallbackError","page","clientOnly","undefined","getCompilationError","errors","getCompilationErrors","revalidate","urlPath","revalidateHeaders","opts","revalidateOpts","mocked","_mockrequest","createRequestResponseMocks","url","headers","req","res","hasStreamed","getHeader","statusCode","unstable_onlyGenerated","Error"],"sources":["../../../src/server/lib/dev-bundler-service.ts"],"sourcesContent":[null],"mappings":";;;;;+BAUa;;;WAAAA,iBAAA;;;6BAN8B;AAMpC,MAAMA,iBAAA;EACXC,YACmBC,OAAA,EACAC,OAAA,EACjB;mBAFiBD,OAAA;mBACAC,OAAA;SAGZC,UAAA,GAAyD,MAC9DC,UAAA;MAEA;MACA,OAAO,MAAM,IAAI,CAACH,OAAO,CAACI,WAAW,CAACF,UAAU,CAACC,UAAA;IACnD;SAEOE,yBAAA,GACL,OAAO,GAAGC,IAAA;MACR,OAAO,MAAM,IAAI,CAACN,OAAO,CAACK,yBAAyB,IAAIC,IAAA;IACzD;EAZC;EAcH,MAAaC,2BAAA,EAA6B;IACxC,MAAM,IAAI,CAACP,OAAO,CAACI,WAAW,CAACI,kBAAkB;IACjD;IACA;IACA,MAAM,IAAI,CAACR,OAAO,CAACI,WAAW,CAACF,UAAU,CAAC;MACxCO,IAAA,EAAM;MACNC,UAAA,EAAY;MACZP,UAAA,EAAYQ;IACd;EACF;EAEA,MAAaC,oBAAoBH,IAAY,EAAE;IAC7C,MAAMI,MAAA,GAAS,MAAM,IAAI,CAACb,OAAO,CAACI,WAAW,CAACU,oBAAoB,CAACL,IAAA;IACnE,IAAI,CAACI,MAAA,EAAQ;IAEb;IACA,OAAOA,MAAM,CAAC,EAAE;EAClB;EAEA,MAAaE,WAAW;IACtBC,OAAO;IACPC,iBAAiB;IACjBC,IAAA,EAAMC;EAAc,CAKrB,EAAE;IACD,MAAMC,MAAA,GAAS,IAAAC,YAAA,CAAAC,0BAA0B,EAAC;MACxCC,GAAA,EAAKP,OAAA;MACLQ,OAAA,EAASP;IACX;IAEA,MAAM,IAAI,CAAChB,OAAO,CAACmB,MAAA,CAAOK,GAAG,EAAEL,MAAA,CAAOM,GAAG;IACzC,MAAMN,MAAA,CAAOM,GAAG,CAACC,WAAW;IAE5B,IACEP,MAAA,CAAOM,GAAG,CAACE,SAAS,CAAC,sBAAsB,iBAC3C,EAAER,MAAA,CAAOM,GAAG,CAACG,UAAU,KAAK,OAAOV,cAAA,CAAeW,sBAAsB,CAAD,EACvE;MACA,MAAM,IAAIC,KAAA,CAAO,oBAAmBX,MAAA,CAAOM,GAAG,CAACG,UAAW,EAAC;IAC7D;IAEA,OAAO,CAAC;EACV;AACF"},"metadata":{},"sourceType":"script","externalDependencies":[]}